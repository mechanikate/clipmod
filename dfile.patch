Only in ./: .cache
Only in ./: .git
Only in ./: .gitignore
Only in ./: .replit
Only in ./: README.md
Only in paperclips/docs/: apple_badge.svg
Only in ./: apply.sh
Only in ./: clipmod.js
Only in ./: clipmod.png
Only in ./: dfile.patch
Only in ./: exampleMod.js
Only in paperclips/docs/: google_badge.svg
diff -crB paperclips/docs/index.html ./index.html
*** paperclips/docs/index.html	2017-11-14 09:38:17.000000000 -0500
--- ./index.html	2024-08-23 00:09:25.672228196 -0400
***************
*** 1,8 ****
  <html>
      <head>
!     <meta name="viewport" content="width=device-width, initial-scale=1">
!     <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
!     <link rel="stylesheet" type="text/css" href="titlescreen.css?v2" />
          <!-- Global Site Tag (gtag.js) - Google Analytics -->
          <script async src="https://www.googletagmanager.com/gtag/js?id=UA-107491380-1"></script>
          <script>
--- 1,6 ----
  <html>
      <head>
!     <link rel="stylesheet" type="text/css" href="titlescreen.css" />
          <!-- Global Site Tag (gtag.js) - Google Analytics -->
          <script async src="https://www.googletagmanager.com/gtag/js?id=UA-107491380-1"></script>
          <script>
***************
*** 26,50 ****
  </a>
  
  </div>
- 
- <div id="mobile">
- 	<div id="mobile-content">
- 		<div id="mobile-title">
- 			<img src="mobile-title.png">
- 		</div>
- 		<div id="mobile-main-text">
- 			The web version of this game was<br /> 
- 			not designed to work on phones.<br />
- 			Grab the mobile version below.
- 		</div>
- 		<div id="mobile-badges">
- 			<a href="https://itunes.apple.com/us/app/universal-paperclips/id1300634274?ls=1&mt=8"><img src="apple_badge.svg"></a>
- 			<div id="fake-android">(Android version coming soon)</div>
- 		</div>
- 	</div> <!-- END mobile-content -->
- 	<div id="mobile-footer">
- 		<a href="index2.html">continue to web version</a>
- 	</div>
- </div> <!-- END mobile -->
      
! </body>
\ No newline at end of file
--- 24,28 ----
  </a>
  
  </div>
      
!     </body>
\ No newline at end of file
diff -crB paperclips/docs/index2.html ./index2.html
*** paperclips/docs/index2.html	2018-02-03 17:00:23.000000000 -0500
--- ./index2.html	2024-08-23 00:09:25.672228196 -0400
***************
*** 1,17 ****
! <html>
      <head>
!         <meta name="viewport" content="width=device-width, initial-scale=1">
!         <link rel="stylesheet" type="text/css" href="interface.css?v2" />
!         <!-- Global Site Tag (gtag.js) - Google Analytics -->
!         <script async src="https://www.googletagmanager.com/gtag/js?id=UA-107491380-1"></script>
!         <script>
!             window.dataLayer = window.dataLayer || [];
!             function gtag(){dataLayer.push(arguments)};
!             gtag('js', new Date());
!             gtag('config', 'UA-107491380-1');
!             gtag('set', {'user_id': 'USER_ID'}); // Set the user ID using signed-in user_id.
!         </script>
! 
      </head>
      
      <body>
--- 1,6 ----
! <html
      <head>
!         <link rel="stylesheet" type="text/css" href="interface.css" />
      </head>
      
      <body>
***************
*** 20,46 ****
          <source src="test.mp3" type="audio/mpeg">
          
      </audio>   -->  
- 
-     <div id="mobile">
-         <div id="mobile-content">
-             <div id="mobile-title">
-                 <img src="mobile-title.png">
-             </div>
-             <div id="mobile-main-text">
-                 The web version of this game was<br /> 
-                 not designed to work on phones.<br />
-                 Grab the mobile version below.
-             </div>
-             <div id="mobile-badges">
-                 <a href="https://itunes.apple.com/us/app/universal-paperclips/id1300634274?ls=1&mt=8"><img src="apple_badge.svg" id="apple_badge"></a>
-                 <a href="https://play.google.com/store/apps/details?id=com.everybodyhouse.paperclipsuniquetest"><img src="google_badge.svg" id="google_badge"></a>
-             </div>
-         </div> <!-- END mobile-content -->
-         
-     </div> <!-- END mobile -->
          
      <div id="page">
!         
      <div id="cover">
      </div>    
          
--- 9,19 ----
          <source src="test.mp3" type="audio/mpeg">
          
      </audio>   -->  
          
      <div id="page">
!     <div>
! 
! 		
      <div id="cover">
      </div>    
          
***************
*** 49,62 ****
          </div>
          
          <div id="consoleDiv">
-             
-             <div id="giftShopDiv" class = "shop">
-                 
-                 Mobile Version: <a href = "https://t.co/t7YJKgiQpr" target = "_blank">iPhone</a> / <a href = "https://t.co/vtIAcdIYEj" target = "_blank">Android</a><br />    
-                 
-                 T-Shirts: <a href = "https://teespring.com/stores/universal-paperclips" target="_blank" >Gift Shop</a> 
-                 
-             </div>
  
              <p class = "consoleOld"> 
                  <span>&nbsp;.&nbsp;</span><span id="readout5"></span><br />
--- 22,27 ----
***************
*** 328,359 ****
  
          <br />
  
-            
- <!--
- 
- 
-         <button id ="save1Button" onclick="save1()">SAVE SLOT 1</button>
-         <button id ="load1Button" onclick="load1()">LOAD SLOT 1</button><br /> 
-         <button id ="save2Button" onclick="save2()">SAVE SLOT 2</button>
-         <button id ="load2Button" onclick="load2()">LOAD SLOT 2</button><br />    
-         <button id ="resetButton" onclick="reset()">RESET ALL PROGRESS</button><br />       
- 
-         <button id ="freeClipsButton" onclick="cheatClips()">Free Clips</button><br />    
-         <button id ="freeMoneyButton" onclick="cheatMoney()">Free Money</button><br />
-         <button id ="freeTrustButton" onclick="cheatTrust()">Free Trust</button><br />        
-         <button id ="freeOpsButton" onclick="cheatOps()">Free Ops</button><br />
-         <button id ="freeCreatButton" onclick="cheatCreat()">Free Creativity</button><br />
-         <button id ="freeYomiButton" onclick="cheatYomi()">Free Yomi</button><br />    
-         <button id ="resetPrestige" onclick="resetPrestige()">Reset Prestige</button><br />     
-             
-         <button id ="destroyAllHumansButton" onclick="cheatHypno()">Destroy all Humans</button><br />    
-         <button id ="freePrestigeU" onclick="cheatPrestigeU()">Free Prestige U</button>
-         <button id ="freePrestigeS" onclick="cheatPrestigeS()">Free Prestige S</button>
-         <button id ="debugBattleNumbers" onclick="setB()">Set Battle Number 1 to 7</button><br /> 
-         <button id ="availMatterZero" onclick="zeroMatter()">Set Avail Matter to 0</button><br />     
- 
- -->
- 
  
  
  
--- 293,298 ----
***************
*** 938,947 ****
              
              
          </div>
!         <script type="text/javascript" src="combat.js?v3"></script>     
!         <script type="text/javascript" src="globals.js?v3"></script>      
!         <script type="text/javascript" src="projects.js?v3"></script>   
!         <script type="text/javascript" src="main.js?v3"></script>
          
      </body>
! </html>
\ No newline at end of file
--- 877,888 ----
              
              
          </div>
!         <script type="text/javascript" src="combat.js?v2"></script>     
!         <script type="text/javascript" src="globals.js?v2"></script>      
!         <script type="text/javascript" src="projects.js?v2"></script> 
! 		<script type="text/javascript" src="clipmod.js"></script>
!         <script type="text/javascript" src="main.js?v2"></script>
! 	<!--	<script src="exampleMod.js"></script> -->
          
      </body>
! </html>
diff -crB paperclips/docs/interface.css ./interface.css
*** paperclips/docs/interface.css	2017-11-21 15:50:22.000000000 -0500
--- ./interface.css	2024-08-23 00:09:25.672228196 -0400
***************
*** 1,108 ****
- #mobile
- {
-   font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", 'Open Sans', sans-serif;
-   font-weight: 300; 
-   display: none;
-   width: 100%;
-   height: 100vh;
-   margin-left: auto;
-   margin-right: auto;
-   background-image:
-     linear-gradient(
-        #444344, #fff 50%
-     );
-   }
- 
- #mobile-content
- {
-   width: 70%;
-   margin-left: auto;
-   margin-right: auto;
- }
- 
- #mobile-main-text
- {
-   font-size: 2.5vh;
-   margin-top: 3.0vh;
-   text-align: center;
- }
- 
- #mobile-title img 
- {
-   margin-top: 20vh;
-   width: 100%;
- }
- 
- #mobile-badges 
- {
-   margin-top: 3.0vh;
-   width: 80%;
-   margin-left: auto;
-   margin-right: auto;
- }
- 
- #mobile-badges img
- {
-   margin-bottom: 1.0vh;
- }
- 
- #apple_badge
- {
-   width: 100%;
- }
- 
- #google_badge 
- {
-   width: 114%;
-   margin-left: -7%;
- }
- 
- #fake-android
- {
-   text-align: center;
-   width: 80%;
-   background-color: #d3d3d3;
-   padding: 10% 10%;
-   border-radius: 10px;
-   font-size: 1.7vh;
- }
- 
- #mobile-footer
- {
-   float: right;
-   margin-top: 5vh;
-   margin-bottom: 2vh;
-   margin-right: 2vh;
- }
- 
- #mobile-footer a
- {
-   font-weight: 700;
-   color: black;
- }
- 
- @media only screen and (max-width: 700px)
- {
-   body 
-   {
-     margin: 0;
-     padding: 0;
-   }
- 
-   #mobile 
-   {
-     display: block;
-   }
- 
-   #page 
-   {
-     display: none;
-   }
- }
- 
- 
- /* ############# MOBILE TAKEOVER ############## */
- 
  #btnMakeProbe {
      margin-bottom: 2px;
  }
--- 1,3 ----
***************
*** 168,188 ****
      line-height: 70%;
  }
  
- .shop {
-     position: absolute;
-     top: 8;
-     right: 8;
-     background-color: yellow;
-     z-index: 1;
-     padding-left: 5px;
-     padding-right: 5px;
-     padding-top: 3px;
-     padding-bottom: 3px;
-     font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
-     font-size: 14px;
-     text-align: right;
- }
- 
  .toolTip {
      position: relative;
      display: inline-block;
--- 63,68 ----
***************
*** 755,761 ****
  
  
  .projectButton {
-     border-radius: 0px;
      display: block;
      height: 60px;
      width: 275px;
--- 635,640 ----
diff -crB paperclips/docs/main.js ./main.js
*** paperclips/docs/main.js	2018-02-03 17:00:22.000000000 -0500
--- ./main.js	2024-08-23 00:09:25.672228196 -0400
***************
*** 5,13 ****
      threnodyLoadedBool = true; 
  }
  
! var threnodyAudio;
! 
! function loadThrenody() {
      threnodyAudio.src = "test.mp3";
      threnodyAudio.addEventListener('canplaythrough', threnodyLoaded);
  }
--- 5,11 ----
      threnodyLoadedBool = true; 
  }
  
! function loadThrenody(){
      threnodyAudio.src = "test.mp3";
      threnodyAudio.addEventListener('canplaythrough', threnodyLoaded);
  }
***************
*** 19,694 ****
      }
  }
  
- // Cache all DOM elements
- 
- function cacheDOMElements(){
-     wireCostElement =                   document.getElementById("wireCost");
-     wireBuyerStatusElement =            document.getElementById("wireBuyerStatus");
-     wireElement =                       document.getElementById("wire");
-     fundsElement =                      document.getElementById("funds");
-     qCompDisplayElement =               document.getElementById("qCompDisplay");
-     hypnoDroneTextElement =             document.getElementById("hypnoDroneText");
-     readoutElement1 =                   document.getElementById("readout1");
-     readoutElement2 =                   document.getElementById("readout2");
-     readoutElement3 =                   document.getElementById("readout3");
-     readoutElement4 =                   document.getElementById("readout4");
-     readoutElement5 =                   document.getElementById("readout5");
-     mpdsDivElement =                    document.getElementById("mdpsDiv");
-     factoryRebootToolTipElement =       document.getElementById("factoryRebootToolTip"); 
-     havesterRebootToolTipElement =      document.getElementById("harvesterRebootToolTip");
-     wireDroneRebootToolTipElement =     document.getElementById("wireDroneRebootToolTip");
-     farmRebootToolTipElement =          document.getElementById("farmRebootToolTip");
-     batteryRebootToolTipElement =       document.getElementById("batteryRebootToolTip");
-     swarmSliderDivElement =             document.getElementById("swarmSliderDiv");
-     clipCountCrunchedElement =          document.getElementById("clipCountCrunched");
-     autoTourneyStatusDivElement =       document.getElementById("autoTourneyStatusDiv");
-     autoTourneyControlElement   =       document.getElementById("autoTourneyControl");
-     wireBuyerDivElement =               document.getElementById("wireBuyerDiv");
-     tournamentResultsTableElement =     document.getElementById("tournamentResultsTable");
-     tournamentStuffElement =            document.getElementById("tournamentStuff");
-     increaseMaxTrustDivElement =        document.getElementById("increaseMaxTrustDiv");
-     honorDivElement =                   document.getElementById("honorDiv");
-     drifterDivElement =                 document.getElementById("drifterDiv");
-     battleCanvasDivElement =            document.getElementById("battleCanvasDiv");
-     combatButtonDivElement =            document.getElementById("combatButtonDiv");
-     factoryUpgradeDisplayElement =      document.getElementById("factoryUpgradeDisplay");
-     droneUpgradeDisplayElement =        document.getElementById("droneUpgradeDisplay");
-     btnIncreaseMaxTrustElement =        document.getElementById("btnIncreaseMaxTrust");
-     btnMakerProbeElement =              document.getElementById("btnMakeProbe");
-     hazardBodyCountElement =            document.getElementById("hazardBodyCount");
-     probesLostHazardsDisplayElement =   document.getElementById("probesLostHazardsDisplay");
-     driftBodyCountElement =             document.getElementById("driftBodyCount");
-     combatBodyCountElement =            document.getElementById("combatBodyCount");
-     prestigeDivElement =                document.getElementById("prestigeDiv");
-     btnMakePaperclipElement =           document.getElementById("btnMakePaperclip");
-     btnBuyWireElement =                 document.getElementById("btnBuyWire");
-     btnMakeClipperElement =             document.getElementById("btnMakeClipper");
-     btnExpandMarketingElement =         document.getElementById("btnExpandMarketing");
-     btnLowerPriceElement =              document.getElementById("btnLowerPrice");
-     btnAddProcElement =                 document.getElementById("btnAddProc");
-     btnAddMemElement =                  document.getElementById("btnAddMem");
-     btnNewTournamentElement =           document.getElementById("btnNewTournament");
-     btnImproveInvestmentsElement =      document.getElementById("btnImproveInvestments");
-     investmentEngineElement =           document.getElementById("investmentEngine");
-     investmentEngineUpgradeElement =    document.getElementById("investmentEngineUpgrade");
-     strategyEngineElement =             document.getElementById("strategyEngine");
-     tournamentManagementElement =       document.getElementById("tournamentManagement");
-     megaClipperDivElement =             document.getElementById("megaClipperDiv");
-     btnMakeMegaClipperElement =         document.getElementById("btnMakeMegaClipper");
-     autoClipperDivElement =             document.getElementById("autoClipperDiv");
-     revPerSecDivElement =               document.getElementById("revPerSecDiv");
-     compDivElement =                    document.getElementById("compDiv");
-     creativityDivElement =              document.getElementById("creativityDiv");
-     projectsDivElement =                document.getElementById("projectsDiv");
-     businessDivElement =                document.getElementById("businessDiv");
-     manufacturingDivElement =           document.getElementById("manufacturingDiv");
-     trustDivElement =                   document.getElementById("trustDiv");
-     creationDivElement =                document.getElementById("creationDiv");
-     factoryDivElement =                 document.getElementById("factoryDiv");
-     wireProductionDivElement =          document.getElementById("wireProductionDiv");
-     wireTransDivElement =               document.getElementById("wireTransDiv");
-     harvesterDivElement =               document.getElementById("harvesterDiv");
-     wireDroneDivElement =               document.getElementById("wireDroneDiv");
-     tothDivElement =                    document.getElementById("tothDiv");
-     spaceDivElement =                   document.getElementById("spaceDiv");
-     factoryDivSpaceElement =            document.getElementById("factoryDivSpace");
-     droneDivSpaceElement =              document.getElementById("droneDivSpace");
-     probeDesignDivElement =             document.getElementById("probeDesignDiv");
-     increaseProbeTrustDivElement =      document.getElementById("increaseProbeTrustDiv");
-     qComputingElement =                 document.getElementById("qComputing");
-     btnMakeFactoryElement =             document.getElementById("btnMakeFactory");
-     btnHarvesterRebootElement =         document.getElementById("btnHarvesterReboot");
-     btnWireDroneRebootElement =         document.getElementById("btnWireDroneReboot");
-     btnFactoryRebootElement =           document.getElementById("btnFactoryReboot");
-     probeTrustUsedDisplayElement =      document.getElementById("probeTrustUsedDisplay");
-     btnIncreaseProbeTrustElement =      document.getElementById("btnIncreaseProbeTrust");
-     btnRaiseProbeSpeedElement =         document.getElementById("btnRaiseProbeSpeed");
-     btnLowerProbeSpeedElement =         document.getElementById("btnLowerProbeSpeed");
-     btnRaiseProbeNavElement =           document.getElementById("btnRaiseProbeNav");
-     btnLowerProbeNavElement =           document.getElementById("btnLowerProbeNav");
-     btnRaiseProbeRepElement =           document.getElementById("btnRaiseProbeRep");
-     btnLowerProbeRepElement =           document.getElementById("btnLowerProbeRep");
-     btnRaiseProbeHazElement =           document.getElementById("btnRaiseProbeHaz");
-     btnLowerProbeHazElement =           document.getElementById("btnLowerProbeHaz");
-     btnRaiseProbeFacElement =           document.getElementById("btnRaiseProbeFac");
-     btnLowerProbeFacElement =           document.getElementById("btnLowerProbeFac");
-     btnRaiseProbeHarvElement =          document.getElementById("btnRaiseProbeHarv");
-     btnLowerProbeHarvElement =          document.getElementById("btnLowerProbeHarv");
-     btnRaiseProbeWireElement =          document.getElementById("btnRaiseProbeWire");
-     btnLowerProbeWireElement =          document.getElementById("btnLowerProbeWire");
-     btnRaiseProbeCombatElement =        document.getElementById("btnRaiseProbeCombat");
-     btnLowerProbeCombatElement =        document.getElementById("btnLowerProbeCombat");
-     coverElement =                      document.getElementById("cover");
-     hypnoDroneEventDivElement =         document.getElementById("hypnoDroneEventDiv");
-     unusedClipsDisplayElement =         document.getElementById("unusedClipsDisplay");
-     transWireElement =                  document.getElementById("transWire");
-     nanoWireElement =                   document.getElementById("nanoWire");
-     clipsElement =                      document.getElementById("clips");
-     unsoldClipsElement =                document.getElementById("unsoldClips");
-     yomiDisplayElement =                document.getElementById('yomiDisplay');
-     projectListTopElement =             document.getElementById("projectListTop");
-     investmentLevelElement =            document.getElementById("investmentLevel");
-     driftersKilledElement =             document.getElementById('driftersKilled');
-     availableMatterDisplayElement =     document.getElementById('availableMatterDisplay');
-     honorDisplayElement =               document.getElementById("honorDisplay");
-     clipmakerLevel2Element =            document.getElementById('clipmakerLevel2');
-     clipperCostElement =                document.getElementById('clipperCost');
-     acquiredMatterDisplayElement =      document.getElementById('acquiredMatterDisplay');
-     nanoWireElement =                   document.getElementById('nanoWire');
-     probesBornDisplayElement =          document.getElementById('probesBornDisplay');
-     probesTotalDisplayElement =         document.getElementById('probesTotalDisplay');
-     probesLaunchedDisplayElement =      document.getElementById('probesLaunchedDisplay');
-     probeCostDisplayElement =           document.getElementById('probeCostDisplay');
-     probeCombatDisplayElement =         document.getElementById('probeCombatDisplay');
-     probeWireDisplayElement =           document.getElementById('probeWireDisplay');
-     probeHarvDisplayElement =           document.getElementById('probeHarvDisplay');
-     probeFacDisplayElement =            document.getElementById('probeFacDisplay');
-     probeRepDisplayElement =            document.getElementById('probeRepDisplay');
-     probeHazDisplayElement =            document.getElementById('probeHazDisplay');
-     probeNavDisplayElement =            document.getElementById('probeNavDisplay');
-     probeSpeedDisplayElement =          document.getElementById('probeSpeedDisplay');
-     probeTrustDisplayElement =          document.getElementById('probeTrustDisplay');
-     memoryElement =                     document.getElementById("memory");
-     processorsElement =                 document.getElementById("processors");
-     marginElement =                     document.getElementById("margin");
-     marketingLvlElement =               document.getElementById('marketingLvl');
-     adCostElement =                     document.getElementById('adCost');
-     factoryCostDisplayElement =         document.getElementById('factoryCostDisplay');
-     factoryLevelDisplayElement =        document.getElementById('factoryLevelDisplay');
-     wireDroneCostDisplayElement =       document.getElementById('wireDroneCostDisplay');
-     wireDroneLevelDisplayElement =      document.getElementById('wireDroneLevelDisplay');
-     harvesterCostDisplayElement =       document.getElementById('harvesterCostDisplay');
-     harvesterLevelDisplayElement =      document.getElementById('harvesterLevelDisplay');
-     megaClipperCostElement =            document.getElementById('megaClipperCost');
-     megaClipperLevelElement =           document.getElementById('megaClipperLevel');
-     investmentBankrollElement =         document.getElementById('investmentBankroll');
-     secValueElement =                   document.getElementById('secValue');
-     portValueElement =                  document.getElementById('portValue');
-     investUpgradeCostElement =          document.getElementById("investUpgradeCost");
-     prestigeUcounterElement =           document.getElementById("prestigeUcounter");
-     prestigeScounterElement =           document.getElementById("prestigeScounter");
-     newTourneyCostElement =             document.getElementById("newTourneyCost");
-     maxTrustDisplayElement =            document.getElementById("maxTrustDisplay");
-     victoryDivElement =                 document.getElementById("victoryDiv");
-     probeTrustCostDisplayElement =      document.getElementById("probeTrustCostDisplay");
-     tournamentResultsTableElement =     document.getElementById("tournamentResultsTable");
-     farmCostElement =                   document.getElementById('farmCost');
-     batteryCostElement =                document.getElementById('batteryCost');
-     farmLevelElement =                  document.getElementById('farmLevel');
-     batteryLevelElement =               document.getElementById('batteryLevel');
-     availableMatterDisplayElement =     document.getElementById('availableMatterDisplay');
-     acquiredMatterDisplayElement =      document.getElementById('acquiredMatterDisplay');
-     mapsElement =                       document.getElementById('maps');
-     nanoWireElement =                   document.getElementById('nanoWire');
-     wppsElement =                       document.getElementById('wpps');
-     probeDesignDivElement =             document.getElementById("probeDesignDiv");
-     increaseProbeTrustDivElement =      document.getElementById("increaseProbeTrustDiv");
-     increaseMaxTrustDivElement =        document.getElementById("increaseMaxTrustDiv");
-     spaceDivElement =                   document.getElementById("spaceDiv");
-     battleCanvasDivElement =            document.getElementById("battleCanvasDiv");
-     honorDivElement =                   document.getElementById("honorDiv");
-     wireProductionDivElement =          document.getElementById("wireProductionDiv");
-     wireTransDivElement =               document.getElementById("wireTransDiv");
-     swarmGiftDivElement =               document.getElementById("swarmGiftDiv");
-     swarmEngineElement =                document.getElementById("swarmEngine");
-     swarmSliderDivElement =             document.getElementById("swarmSliderDiv");
-     factoryDivSpaceElement =            document.getElementById("factoryDivSpace");
-     clipsPerSecDivElement =             document.getElementById("clipsPerSecDiv");
-     tothDivElement =                    document.getElementById("tothDiv");
-     strategyEngineElement =             document.getElementById("strategyEngine");
-     tournamentManagementElement =       document.getElementById("tournamentManagement");
-     btnQcomputeElement =                document.getElementById("btnQcompute");
-     qComputingElement =                 document.getElementById("qComputing");
-     transWireElement =                  document.getElementById("transWire");
-     processorDisplayElement =           document.getElementById("processorDisplay");
-     compDivElement =                    document.getElementById("compDiv");
-     projectsDivElement =                document.getElementById("projectsDiv");
-     creationDivElement =                document.getElementById("creationDiv");
-     stratPickerElement =                document.getElementById("stratPicker");
-     investUpgradeCostElement =          document.getElementById("investUpgradeCost");
-     yomiDisplayElement =                document.getElementById("yomiDisplay");
-     investmentBankrollElement =         document.getElementById('investmentBankroll');
-     secValueElement =                   document.getElementById('secValue');
-     portValueElement =                  document.getElementById('portValue');
-     investStratElement =                document.getElementById("investStrat");
-     btnRunTournamentElement =           document.getElementById("btnRunTournament");
-     vertStratElement =                  document.getElementById("vertStrat");
-     horizStratElement =                 document.getElementById("horizStrat");
-     vLabelaElement =                    document.getElementById("vLabela");
-     vLabelbElement =                    document.getElementById("vLabelb");
-     hLabelaElement =                    document.getElementById("hLabela");
-     hLabelbElement =                    document.getElementById("hLabelb");
-     aaPayoffHElement =                  document.getElementById("aaPayoffH");
-     aaPayoffVElement =                  document.getElementById("aaPayoffV");
-     abPayoffHElement =                  document.getElementById("abPayoffH");
-     abPayoffVElement =                  document.getElementById("abPayoffV");
-     baPayoffHElement =                  document.getElementById("baPayoffH");
-     baPayoffVElement =                  document.getElementById("baPayoffV");
-     bbPayoffHElement =                  document.getElementById("bbPayoffH");
-     bbPayoffVElement =                  document.getElementById("bbPayoffV");
-     autoTourneyStatusElement =          document.getElementById('autoTourneyStatus');
-     tournamentTableElement =            document.getElementById("tournamentTable");
-     tournamentResultsTableElement =     document.getElementById("tournamentResultsTable");
-     tourneyDisplayElement =             document.getElementById("tourneyDisplay");
-     payoffCellAAElement =               document.getElementById("payoffCellAA");
-     payoffCellABElement =               document.getElementById("payoffCellAB");
-     payoffCellBAElement =               document.getElementById("payoffCellBA");
-     payoffCellBBElement =               document.getElementById("payoffCellBB");
-     clipmakerLevel2Element =            document.getElementById('clipmakerLevel2');
-     clipperCostElement =                document.getElementById('clipperCost');
-     megaClipperLevelElement =           document.getElementById('megaClipperLevel');
-     megaClipperCostElement =            document.getElementById('megaClipperCost');
-     nextFactoryUpgradeElement =         document.getElementById("nextFactoryUpgrade");
-     nextDroneUpgradeElement =           document.getElementById("nextDroneUpgrade");
-     factoryLevelDisplayElement =        document.getElementById('factoryLevelDisplay');
-     factoryCostDisplayElement =         document.getElementById('factoryCostDisplay');
-     harvesterLevelDisplayElement =      document.getElementById('harvesterLevelDisplay');
-     harvesterCostDisplayElement =       document.getElementById('harvesterCostDisplay');
-     wireDroneLevelDisplayElement =      document.getElementById('wireDroneLevelDisplay');
-     wireDroneCostDisplayElement =       document.getElementById('wireDroneCostDisplay');
-     btnMakeHarvesterElement =           document.getElementById("btnMakeHarvester");
-     btnHarvesterx10Element =            document.getElementById("btnHarvesterx10");
-     btnHarvesterx100Element =           document.getElementById("btnHarvesterx100");
-     btnHarvesterx1000Element =          document.getElementById("btnHarvesterx1000");
-     btnMakeWireDroneElement =           document.getElementById("btnMakeWireDrone");
-     btnWireDronex10Element =            document.getElementById("btnWireDronex10");
-     btnWireDronex100Element =           document.getElementById("btnWireDronex100");
-     btnWireDronex1000Element =          document.getElementById("btnWireDronex1000");
-     sliderElement =                     document.getElementById("slider");
-     btnSynchSwarmElement =              document.getElementById("btnSynchSwarm");
-     btnEntertainSwarmElement =          document.getElementById("btnEntertainSwarm");
-     swarmSizeElement =                  document.getElementById("swarmSize");
-     swarmGiftsElement =                 document.getElementById("swarmGifts");
-     swarmStatusElement =                document.getElementById("swarmStatus");
-     giftCountdownElement =              document.getElementById("giftCountdown");
-     giftTimerElement =                  document.getElementById("giftTimer");
-     feedButtonDivElement =              document.getElementById("feedButtonDiv");
-     teachButtonDivElement =             document.getElementById("teachButtonDiv");
-     swarmEntertainCostElement =         document.getElementById("swarmEntertainCost");
-     entertainButtonDivElement =         document.getElementById("entertainButtonDiv");
-     cladButtonDivElement =              document.getElementById("cladButtonDiv");
-     synchButtonDivElement =             document.getElementById("synchButtonDiv");
-     swarmStatusDivElement =             document.getElementById("swarmStatusDiv");
-     swarmEngineElement =                document.getElementById("swarmEngine");
-     farmLevelElement =                  document.getElementById('farmLevel');
-     farmCostElement =                   document.getElementById('farmCost');
-     batteryLevelElement =               document.getElementById('batteryLevel');
-     batteryCostElement =                document.getElementById('batteryCost');
-     powerProductionRateElement =        document.getElementById("powerProductionRate");
-     powerConsumptionRateElement =       document.getElementById("powerConsumptionRate");
-     storedPowerElement =                document.getElementById("storedPower");
-     facPowConRateElement =              document.getElementById("facPowConRate");
-     dronePowConRateElement =            document.getElementById("dronePowConRate");
-     maxStorageElement =                 document.getElementById("maxStorage");
-     performanceElement =                document.getElementById("performance");
-     btnMakeFarmElement =                document.getElementById("btnMakeFarm");
-     btnMakeBatteryElement =             document.getElementById("btnMakeBattery");
-     btnFarmRebootElement =              document.getElementById("btnFarmReboot");
-     btnBatteryRebootElement =           document.getElementById("btnBatteryReboot");
-     btnFarmx10Element =                 document.getElementById("btnFarmx10");
-     btnFarmx100Element =                document.getElementById("btnFarmx100");
-     btnBatteryx10Element =              document.getElementById("btnBatteryx10");
-     btnBatteryx100Element =             document.getElementById("btnBatteryx100");
-     powerDivElement =                   document.getElementById("powerDiv");
-     adCostElement =                     document.getElementById('adCost');
-     marketingLvlElement =               document.getElementById('marketingLvl');
-     demandElement =                     document.getElementById("demand");
-     marginElement =                     document.getElementById("margin");
-     inchSpanElement =                   document.getElementById("inchSpan");
-     demandElement =                     document.getElementById("demand");
-     operationsElement =                 document.getElementById("operations");
-     trustElement =                      document.getElementById("trust");
-     nextTrustElement =                  document.getElementById("nextTrust");
-     creativityElement =                 document.getElementById("creativity");
-     factoryLevelDisplaySpaceElement =   document.getElementById("factoryLevelDisplaySpace");
-     harvesterLevelSpaceElement =        document.getElementById("harvesterLevelSpace");
-     wireDroneLevelSpaceElement =        document.getElementById("wireDroneLevelSpace");
-     maxOpsElement =                     document.getElementById("maxOps");
-     avgSalesElement =                   document.getElementById("avgSales");
-     avgRevElement =                     document.getElementById("avgRev");
-     probeTrustCostDisplayElement =      document.getElementById('probeTrustCostDisplay');
-     mdpsElement =                       document.getElementById('mdps');
-     colonizedDisplayElement =           document.getElementById('colonizedDisplay');
-     probesLostHazardsDisplayElement =   document.getElementById('probesLostHazardsDisplay');
-     probesTotalDisplayElement =         document.getElementById('probesTotalDisplay');
-     probesLostDriftDisplayElement =     document.getElementById('probesLostDriftDisplay');
-     probesTotalDisplayElement =         document.getElementById('probesTotalDisplay');
-     drifterCountElement =               document.getElementById('drifterCount');
-     mapsElement =                       document.getElementById('maps');
-     swarmGiftDivElement =               document.getElementById("swarmGiftDiv");
-     swarmEngineElement =                document.getElementById("swarmEngine");
-     clipsPerSecDivElement =             document.getElementById("clipsPerSecDiv");
-     tothDivElement =                    document.getElementById("tothDiv");
-     clipmakerRateElement =              document.getElementById("clipmakerRate");
-     clipmakerRate2Element =             document.getElementById("clipmakerRate2");
- 
- 
-     stockSymbolElements.push(document.getElementById("stock1Symbol"));
-     stockAmountElements.push(document.getElementById("stock1Amount"));
-     stockPriceElements.push(document.getElementById("stock1Price"));
-     stockTotalElements.push(document.getElementById("stock1Total"));
-     stockProfitElements.push(document.getElementById("stock1Profit"));
- 
-     stockSymbolElements.push(document.getElementById("stock2Symbol"));
-     stockAmountElements.push(document.getElementById("stock2Amount"));
-     stockPriceElements.push(document.getElementById("stock2Price"));
-     stockTotalElements.push(document.getElementById("stock2Total"));
-     stockProfitElements.push(document.getElementById("stock2Profit"));
- 
-     stockSymbolElements.push(document.getElementById("stock3Symbol"));
-     stockAmountElements.push(document.getElementById("stock3Amount"));
-     stockPriceElements.push(document.getElementById("stock3Price"));
-     stockTotalElements.push(document.getElementById("stock3Total"));
-     stockProfitElements.push(document.getElementById("stock3Profit"));
- 
-     stockSymbolElements.push(document.getElementById("stock4Symbol"));
-     stockAmountElements.push(document.getElementById("stock4Amount"));
-     stockPriceElements.push(document.getElementById("stock4Price"));
-     stockTotalElements.push(document.getElementById("stock4Total"));
-     stockProfitElements.push(document.getElementById("stock4Profit"));
- 
-     stockSymbolElements.push(document.getElementById("stock5Symbol"));
-     stockAmountElements.push(document.getElementById("stock5Amount"));
-     stockPriceElements.push(document.getElementById("stock5Price"));
-     stockTotalElements.push(document.getElementById("stock5Total"));
-     stockProfitElements.push(document.getElementById("stock5Profit"));
- 
-     tourneyResultsElements.push(document.getElementById("results0"));
-     tourneyResultsElements.push(document.getElementById("results1"));
-     tourneyResultsElements.push(document.getElementById("results2"));
-     tourneyResultsElements.push(document.getElementById("results3"));
-     tourneyResultsElements.push(document.getElementById("results4"));
-     tourneyResultsElements.push(document.getElementById("results5"));
-     tourneyResultsElements.push(document.getElementById("results6"));
-     tourneyResultsElements.push(document.getElementById("results7"));
- 
- 
- }
- 
- 
- var clipmakerRateElement;
- var clipmakerRate2Element;
- var availableMatterDisplayElement;
- var acquiredMatterDisplayElement;
- var mapsElement;
- var nanoWireElement;
- var wppsElement;
- var probeDesignDivElement;
- var increaseProbeTrustDivElement;
- var increaseMaxTrustDivElement;
- var spaceDivElement;
- var battleCanvasDivElement;
- var honorDivElement;
- var wireProductionDivElement;
- var wireTransDivElement;
- var swarmGiftDivElement;
- var swarmEngineElement;
- var swarmSliderDivElement;
- var factoryDivSpaceElement;
- var clipsPerSecDivElement;
- var tothDivElement;
- var strategyEngineElement;
- var tournamentManagementElement;
- var btnQcomputeElement;
- var qComputingElement;
- var transWireElement;
- var processorDisplayElement;
- var compDivElement;
- var projectsDivElement;
- var creationDivElement;
- var stratPickerElement;
- var investUpgradeCostElement;
- var yomiDisplayElement;
- var investmentBankrollElement;
- var fundsElement;
- var secValueElement;
- var portValueElement;
- var investStratElement;
- var btnRunTournamentElement;
- var vertStratElement;
- var horizStratElement;
- var vLabelaElement;
- var vLabelbElement;
- var hLabelaElement;
- var hLabelbElement;
- var aaPayoffHElement;
- var aaPayoffVElement;
- var abPayoffHElement;
- var abPayoffVElement;
- var baPayoffHElement;
- var baPayoffVElement;
- var bbPayoffHElement;
- var bbPayoffVElement;
- var autoTourneyStatusElement;
- var tournamentTableElement;
- var tournamentResultsTableElement;
- var tourneyDisplayElement;
- var payoffCellAAElement;
- var payoffCellABElement;
- var payoffCellBAElement;
- var payoffCellBBElement;
- var clipmakerLevel2Element;
- var clipperCostElement;
- var megaClipperLevelElement;
- var megaClipperCostElement;
- var nextFactoryUpgradeElement;
- var nextDroneUpgradeElement;
- var factoryLevelDisplayElement;
- var factoryCostDisplayElement;
- var harvesterLevelDisplayElement;
- var harvesterCostDisplayElement;
- var wireDroneLevelDisplayElement;
- var wireDroneCostDisplayElement;
- var btnMakeHarvesterElement;
- var btnHarvesterx10Element;
- var btnHarvesterx100Element;
- var btnHarvesterx1000Element;
- var btnMakeWireDroneElement;
- var btnWireDronex10Element;
- var btnWireDronex100Element;
- var btnWireDronex1000Element;
- var sliderElement;
- var btnSynchSwarmElement;
- var btnEntertainSwarmElement;
- var swarmSizeElement;
- var swarmGiftsElement;
- var swarmStatusElement;
- var giftCountdownElement;
- var giftTimerElement;
- var feedButtonDivElement;
- var teachButtonDivElement;
- var swarmEntertainCostElement;
- var entertainButtonDivElement;
- var cladButtonDivElement;
- var synchButtonDivElement;
- var swarmStatusDivElement;
- var swarmEngineElement;
- var farmLevelElement;
- var farmCostElement;
- var batteryLevelElement;
- var batteryCostElement;
- var powerProductionRateElement;
- var powerConsumptionRateElement;
- var storedPowerElement;
- var facPowConRateElement;
- var dronePowConRateElement;
- var maxStorageElement;
- var performanceElement;
- var btnMakeFarmElement;
- var btnMakeBatteryElement;
- var btnFarmRebootElement;
- var btnBatteryRebootElement;
- var btnFarmx10Element;
- var btnFarmx100Element;
- var btnBatteryx10Element;
- var btnBatteryx100Element;
- var powerDivElement;
- var adCostElement;
- var marketingLvlElement;
- var demandElement;
- var marginElement;
- var inchSpanElement;
- var demandElement;
- var operationsElement;
- var trustElement;
- var nextTrustElement;
- var creativityElement;
- var factoryLevelDisplaySpaceElement;
- var harvesterLevelSpaceElement;
- var wireDroneLevelSpaceElement;
- var maxOpsElement;
- var avgSalesElement;
- var avgRevElement;
- var probeTrustCostDisplayElement;
- var mdpsElement;
- var colonizedDisplayElement;
- var probesLostHazardsDisplayElement;
- var probesTotalDisplayElement;
- var probesLostDriftDisplayElement;
- var probesTotalDisplayElement;
- var drifterCountElement;
- var mapsElement;
- var swarmGiftDivElement;
- var swarmEngineElement;
- var clipsPerSecDivElement;
- var tothDivElement;
- var prestigeUcounterElement;
- var prestigeScounterElement;
- var newTourneyCostElement;
- var maxTrustDisplayElement;
- var victoryDivElement;
- var probeTrustCostDisplayElement;
- var tournamentResultsTableElement;
- var farmCostElement;
- var batteryCostElement;
- var farmLevelElement;
- var batteryLevelElement;
- var wireDroneCostDisplayElement;
- var wireDroneLevelDisplayElement;
- var harvesterCostDisplayElement;
- var harvesterLevelDisplayElement;
- var megaClipperCostElement;
- var megaClipperLevelElement;
- var investmentBankrollElement;
- var secValueElement;
- var portValueElement;
- var investUpgradeCostElement;
- var driftersKilledElement;
- var availableMatterDisplayElement;
- var honorDisplayElement;
- var clipmakerLevel2Element;
- var clipperCostElement;
- var acquiredMatterDisplayElement;
- var nanoWireElement;
- var probesBornDisplayElement;
- var probesTotalDisplayElement;
- var probesLaunchedDisplayElement;
- var probeCostDisplayElement;
- var probeCombatDisplayElement;
- var probeWireDisplayElement;
- var probeHarvDisplayElement;
- var probeFacDisplayElement;
- var probeRepDisplayElement;
- var probeHazDisplayElement;
- var probeNavDisplayElement;
- var probeSpeedDisplayElement;
- var probeTrustDisplayElement;
- var memoryElement;
- var processorsElement;
- var marginElement;
- var marketingLvlElement;
- var adCostElement;
- var factoryCostDisplayElement;
- var factoryLevelDisplayElement;
- var yomiDisplayElement;
- var projectListTopElement;
- var investmentLevelElement;
- 
- var wireCostElement;
- var wireBuyerStatusElement;
- var wireElement;
- 
- var qCompDisplayElement;
- 
- var hypnoDroneTextElement;
- var hypnoDroneEventDivElement;
- 
- var readoutElement1;
- var readoutElement2;
- var readoutElement3;
- var readoutElement4;
- var readoutElement5;
- 
- var mpdsDivElement;
- 
- var factoryRebootToolTipElement;
- var havesterRebootToolTipElement;
- var wireDroneRebootToolTipElement;
- var farmRebootToolTipElement;
- var batteryRebootToolTipElement;
- 
- var swarmSliderDivElement;
- var clipCountCrunchedElement;
- var autoTourneyStatusDivElement;
- var autoTourneyControlElement;
- 
- var wireBuyerDivElement; 
- var tournamentResultsTableElement;
- var tournamentStuffElement;
- 
- var increaseMaxTrustDivElement;
- var honorDivElement;
- var drifterDivElement;
- var battleCanvasDivElement;
- var combatButtonDivElement;
- var factoryUpgradeDisplayElement;
- var droneUpgradeDisplayElement;
- var btnIncreaseMaxTrustElement;
- var btnMakerProbeElement;
- var hazardBodyCountElement;
- var probesLostHazardsDisplayElement;
- var driftBodyCountElement;
- var combatBodyCountElement;
- var prestigeDivElement;
- var btnMakePaperclipElement;
- var btnBuyWireElement;
- var btnMakeClipperElement;
- var btnExpandMarketingElement;
- var btnLowerPriceElement;
- var btnAddProcElement;
- var btnAddMemElement;
- var btnNewTournamentElement;
- var btnImproveInvestmentsElement;
- var investmentEngineElement;
- var investmentEngineUpgradeElement;
- var strategyEngineElement;
- var tournamentManagementElement;
- var megaClipperDivElement;
- var btnMakeMegaClipperElement;
- var autoClipperDivElement;
- var revPerSecDivElement;
- var compDivElement;
- var creativityDivElement;
- var projectsDivElement;
- var businessDivElement;
- var manufacturingDivElement;
- var trustDivElement;
- var creationDivElement;
- var factoryDivElement;
- var wireProductionDivElement;
- var wireTransDivElement;
- var harvesterDivElement;
- var wireDroneDivElement;
- var tothDivElement;
- var spaceDivElement;
- var factoryDivSpaceElement;
- var droneDivSpaceElement;
- var probeDesignDivElement;
- var increaseProbeTrustDivElement;
- var qComputingElement;
- var btnMakeFactoryElement;
- var btnHarvesterRebootElement;
- var btnWireDroneRebootElement;
- var btnFactoryRebootElement;
- 
- var probeTrustUsedDisplayElement;
- var btnIncreaseProbeTrustElement;
- var btnRaiseProbeSpeedElement;
- var btnLowerProbeSpeedElement;
- var btnRaiseProbeNavElement;
- var btnLowerProbeNavElement;
- var btnRaiseProbeRepElement;
- var btnLowerProbeRepElement;
- var btnRaiseProbeHazElement;
- var btnLowerProbeHazElement;
- var btnRaiseProbeFacElement;
- var btnLowerProbeFacElement;
- var btnRaiseProbeHarvElement;
- var btnLowerProbeHarvElement;
- var btnRaiseProbeWireElement;
- var btnLowerProbeWireElement;
- var btnRaiseProbeCombatElement;
- var btnLowerProbeCombatElement;
- 
- var coverElement;
- 
- var unusedClipsDisplayElement;
- var transWireElement;
- var nanoWireElement;
- var clipsElement;
- var unsoldClipsElement;
- 
- var stockSymbolElements = [];
- var stockAmountElements = [];
- var stockPriceElements = [];
- var stockTotalElements = [];
- var stockProfitElements = [];
- 
- var tourneyResultsElements = [];
- 
- // Cache
- 
- cacheDOMElements();
  
  // Wire --------------------------------------------------------
  
--- 17,22 ----
***************
*** 705,721 ****
          wirePriceCounter++;
          var wireAdjust = 6*(Math.sin(wirePriceCounter));
          wireCost = Math.ceil(wireBasePrice + wireAdjust);
!         wireCostElement.innerHTML = wireCost;
          }
  }
  
  function toggleWireBuyer(){
      if (wireBuyerStatus==1){
          wireBuyerStatus=0;
!         wireBuyerStatusElement.innerHTML = "OFF";
      } else {
          wireBuyerStatus=1;
!         wireBuyerStatusElement.innerHTML = "ON";
      }
  }
  
--- 33,49 ----
          wirePriceCounter++;
          var wireAdjust = 6*(Math.sin(wirePriceCounter));
          wireCost = Math.ceil(wireBasePrice + wireAdjust);
!         document.getElementById("wireCost").innerHTML = wireCost;
          }
  }
  
  function toggleWireBuyer(){
      if (wireBuyerStatus==1){
          wireBuyerStatus=0;
!         document.getElementById('wireBuyerStatus').innerHTML = "OFF";
      } else {
          wireBuyerStatus=1;
!         document.getElementById('wireBuyerStatus').innerHTML = "ON";
      }
  }
  
***************
*** 726,740 ****
          funds = funds - wireCost;
          wirePurchase = wirePurchase + 1;
          wireBasePrice = wireBasePrice + .05;
!         wireElement.innerHTML = formatWithCommas(Math.floor(wire));
!         fundsElement.innerHTML = formatWithCommas(funds, 2);
      }
  }
  
  // QCHIPS -----------------------------------------------------------
  
  var qChips = [];
- var qChipsElements = [];
  
  var qChip0 = {
      waveSeed: .1,
--- 54,67 ----
          funds = funds - wireCost;
          wirePurchase = wirePurchase + 1;
          wireBasePrice = wireBasePrice + .05;
!         document.getElementById('wire').innerHTML = Math.floor(wire).toLocaleString();
!         document.getElementById('funds').innerHTML = funds.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2});
      }
  }
  
  // QCHIPS -----------------------------------------------------------
  
  var qChips = [];
  
  var qChip0 = {
      waveSeed: .1,
***************
*** 743,749 ****
  }
  
  qChips.push(qChip0);
- qChipsElements.push(document.getElementById("qChip0"));
  
  var qChip1 = {
      waveSeed: .2,
--- 70,75 ----
***************
*** 752,758 ****
  }
  
  qChips.push(qChip1);
- qChipsElements.push(document.getElementById("qChip1"));
  
  var qChip2 = {
      waveSeed: .3,
--- 78,83 ----
***************
*** 761,767 ****
  }
  
  qChips.push(qChip2);
- qChipsElements.push(document.getElementById("qChip2"));
  
  var qChip3 = {
      waveSeed: .4,
--- 86,91 ----
***************
*** 770,776 ****
  }
  
  qChips.push(qChip3);
- qChipsElements.push(document.getElementById("qChip3"));
  
  var qChip4 = {
      waveSeed: .5,
--- 94,99 ----
***************
*** 779,785 ****
  }
  
  qChips.push(qChip4);
- qChipsElements.push(document.getElementById("qChip4"));
  
  var qChip5 = {
      waveSeed: .6,
--- 102,107 ----
***************
*** 788,794 ****
  }
  
  qChips.push(qChip5);
- qChipsElements.push(document.getElementById("qChip5"));
  
  var qChip6 = {
      waveSeed: .7,
--- 110,115 ----
***************
*** 797,803 ****
  }
  
  qChips.push(qChip6);
- qChipsElements.push(document.getElementById("qChip6"));
  
  var qChip7 = {
      waveSeed: .8,
--- 118,123 ----
***************
*** 806,812 ****
  }
  
  qChips.push(qChip7);
- qChipsElements.push(document.getElementById("qChip7"));
  
  var qChip8 = {
      waveSeed: .9,
--- 126,131 ----
***************
*** 815,821 ****
  }
  
  qChips.push(qChip8);
- qChipsElements.push(document.getElementById("qChip8"));
  
  var qChip9 = {
      waveSeed: 1,
--- 134,139 ----
***************
*** 824,836 ****
  }
  
  qChips.push(qChip9);
- qChipsElements.push(document.getElementById("qChip9"));
  
  function quantumCompute(){
      qClock = qClock+.01;
      for (var i = 0; i<qChips.length; i++){
          qChips[i].value = Math.sin(qClock*qChips[i].waveSeed*qChips[i].active);
!         qChipsElements[i].style.opacity=qChips[i].value; 
      }
  }
  
--- 142,153 ----
  }
  
  qChips.push(qChip9);
  
  function quantumCompute(){
      qClock = qClock+.01;
      for (var i = 0; i<qChips.length; i++){
          qChips[i].value = Math.sin(qClock*qChips[i].waveSeed*qChips[i].active);
!         document.getElementById("qChip"+i).style.opacity=qChips[i].value;
      }
  }
  
***************
*** 842,848 ****
      
      
      if (qChips[0].active == 0){
!         qCompDisplayElement.innerHTML = "Need Photonic Chips";   
      } else {
      for (var i = 0; i<qChips.length; i++){
          q = q+qChips[i].value;
--- 159,165 ----
      
      
      if (qChips[0].active == 0){
!         document.getElementById("qCompDisplay").innerHTML = "Need Photonic Chips";   
      } else {
      for (var i = 0; i<qChips.length; i++){
          q = q+qChips[i].value;
***************
*** 860,871 ****
              }
          
          standardOps = standardOps + qq;
!         qCompDisplayElement.innerHTML = "qOps: " + formatWithCommas(Math.ceil(q*360));
      }
      
  }
! 
! 
  
  function manageProjects(){
      
--- 177,187 ----
              }
          
          standardOps = standardOps + qq;
!         document.getElementById("qCompDisplay").innerHTML = "qOps: " + Math.ceil(q*360).toLocaleString();
      }
      
  }
!  
  
  function manageProjects(){
      
***************
*** 880,888 ****
          
      for(var i = 0; i < activeProjects.length; i++){
          if (activeProjects[i].cost()){
!             activeProjects[i].element.disabled = false;
          } else {
!             activeProjects[i].element.disabled = true;
          }   
      }
  }
--- 196,204 ----
          
      for(var i = 0; i < activeProjects.length; i++){
          if (activeProjects[i].cost()){
!             document.getElementById(activeProjects[i].id).disabled = false;
          } else {
!             document.getElementById(activeProjects[i].id).disabled = true;
          }   
      }
  }
***************
*** 890,963 ****
  
  function displayProjects(project){
      
!     project.element = document.createElement("button");
! project.element.setAttribute("id", project.id);
      
! project.element.onclick = function(){project.effect()};
      
! project.element.setAttribute("class", "projectButton");
!     projectListTopElement.appendChild(project.element, projectListTopElement.firstChild);
      
      var span = document.createElement("span");
      span.style.fontWeight = "bold";
! project.element.appendChild(span);
      
      var title = document.createTextNode(project.title);
      span.appendChild(title);    
      
      var cost = document.createTextNode(project.priceTag);
! project.element.appendChild(cost);
      
      var div = document.createElement("div");
! project.element.appendChild(div);
      
      var description = document.createTextNode(project.description);
!     project.element.appendChild(description);
      
!     blink(project.element);
      
  }
  
  //  HYPNODRONE EVENT ----------------------------------------------------------------
  
! hypnoDroneEventDivElement.style.display = "none"; 
! var longBlinkCounter = 0;
  
! function longBlink(element){
!  
      { 
!         var handle = setInterval(function () { longToggleVisibility(element)}, 32);    
      }
      
!     function longToggleVisibility(element){
      longBlinkCounter++;    
          
      if (longBlinkCounter > 5 && longBlinkCounter < 10){
!         hypnoDroneTextElement.innerHTML="Release"; 
          }    
      
      if (longBlinkCounter > 30 && longBlinkCounter < 40){
!         hypnoDroneTextElement.innerHTML="<br /><br /><br />Release"; 
          }   
          
      if (longBlinkCounter > 45 && longBlinkCounter < 55){
!         hypnoDroneTextElement.innerHTML="<br />Release";
          }       
          
       if (longBlinkCounter > 55){
!         hypnoDroneTextElement.innerHTML="Release<br/>the<br/>Hypno<br/>Drones";
          }       
          
      if (longBlinkCounter >= 120){
!         //console.log("weed wizzard");
          clearInterval(handle);
          longBlinkCounter = 0;
!         element.style.display = "none";
      } else {
!         if (element.style.display != ""){
!             element.style.display = "";
          } else {
!             element.style.display = "none";    
          }
        }   
      }
--- 206,281 ----
  
  function displayProjects(project){
      
!     var element = document.getElementById("projectListTop"); 
!     var newProject = document.createElement("button");
!     newProject.setAttribute("id", project.id);
      
!     newProject.onclick = function(){project.effect()};
      
!     newProject.setAttribute("class", "projectButton");
!     element.appendChild(newProject, element.firstChild);
      
      var span = document.createElement("span");
      span.style.fontWeight = "bold";
!     newProject.appendChild(span);
      
      var title = document.createTextNode(project.title);
      span.appendChild(title);    
      
      var cost = document.createTextNode(project.priceTag);
!     newProject.appendChild(cost);
      
      var div = document.createElement("div");
!     newProject.appendChild(div);
      
      var description = document.createTextNode(project.description);
!     newProject.appendChild(description);
      
!     blink(project.id);
      
  }
  
  //  HYPNODRONE EVENT ----------------------------------------------------------------
  
! document.getElementById("hypnoDroneEventDiv").style.display = "none"; 
! longBlinkCounter = 0;
  
! function longBlink(elemID){
!     var e = document.getElementById(elemID);
!     
      { 
!     var handle = setInterval(function(){longToggleVisibility(elemID)}, 32);    
      }
      
!     function longToggleVisibility(elemID){
      longBlinkCounter++;    
          
      if (longBlinkCounter > 5 && longBlinkCounter < 10){
!         document.getElementById("hypnoDroneText").innerHTML="Release"; 
          }    
      
      if (longBlinkCounter > 30 && longBlinkCounter < 40){
!         document.getElementById("hypnoDroneText").innerHTML="<br /><br /><br />Release"; 
          }   
          
      if (longBlinkCounter > 45 && longBlinkCounter < 55){
!         document.getElementById("hypnoDroneText").innerHTML="<br />Release";
          }       
          
       if (longBlinkCounter > 55){
!         document.getElementById("hypnoDroneText").innerHTML="Release<br/>the<br/>Hypno<br/>Drones";
          }       
          
      if (longBlinkCounter >= 120){
!         console.log("weed wizzard");
          clearInterval(handle);
          longBlinkCounter = 0;
!         e.style.display = "none";
      } else {
!         if (e.style.display != ""){
!         e.style.display = "";
          } else {
!         e.style.display = "none";    
          }
        }   
      }
***************
*** 965,972 ****
      }
  
  function hypnoDroneEvent(){
!     hypnoDroneTextElement.innerHTML="Release";
!     longBlink(hypnoDroneEventDivElement);
  }     
  
  
--- 283,290 ----
      }
  
  function hypnoDroneEvent(){
!     document.getElementById("hypnoDroneText").innerHTML="Release";
!     longBlink("hypnoDroneEventDiv");
  }     
  
  
***************
*** 974,1007 ****
  
  
  function displayMessage(msg){
!     readoutElement5.innerHTML=readoutElement4.innerHTML;
!     readoutElement4.innerHTML=readoutElement3.innerHTML;
!     readoutElement3.innerHTML=readoutElement2.innerHTML;
!     readoutElement2.innerHTML=readoutElement1.innerHTML;
!     readoutElement1.innerHTML=msg;
  }
  
  
  // BLINK
  
! function blink(element){
! 
      { 
!         var handle = setInterval(function () { toggleVisibility(element)}, 30);    
      }
      
!     function toggleVisibility(element){
      blinkCounter = blinkCounter+1;    
      
      if (blinkCounter >= 12){
          clearInterval(handle);
          blinkCounter = 0;
!         element.style.visibility = "visible";
      } else {
!         if (element.style.visibility != "hidden"){
!         element.style.visibility = "hidden";
          } else {
!         element.style.visibility = "visible";    
          }
        }   
      }
--- 292,326 ----
  
  
  function displayMessage(msg){
!     document.getElementById("readout5").innerHTML=document.getElementById("readout4").innerHTML;
!     document.getElementById("readout4").innerHTML=document.getElementById("readout3").innerHTML;
!     document.getElementById("readout3").innerHTML=document.getElementById("readout2").innerHTML;
!     document.getElementById("readout2").innerHTML=document.getElementById("readout1").innerHTML;
!     document.getElementById("readout1").innerHTML=msg;
  }
  
  
  // BLINK
  
! function blink(elemID){
!     var e = document.getElementById(elemID);
!     
      { 
!     var handle = setInterval(function(){toggleVisibility(elemID)}, 30);    
      }
      
!     function toggleVisibility(elemID){
      blinkCounter = blinkCounter+1;    
      
      if (blinkCounter >= 12){
          clearInterval(handle);
          blinkCounter = 0;
!         e.style.visibility = "visible";
      } else {
!         if (e.style.visibility != "hidden"){
!         e.style.visibility = "hidden";
          } else {
!         e.style.visibility = "visible";    
          }
        }   
      }
***************
*** 1012,1070 ****
  
  function buttonUpdate(){
      
-     if (swarmFlag == 0){        
-         swarmEngineElement.style.display="none";
-         swarmGiftDivElement.style.display="none";
-         } else {
-         swarmEngineElement.style.display="";
-         swarmGiftDivElement.style.display="";    
-         }    
-     
-     if (project127.flag == 1 && spaceFlag == 0){        
-         powerDivElement.style.display="";
-         } else {
-         powerDivElement.style.display="none";      
-         }  
-     
      if (spaceFlag==0){
!         mpdsDivElement.style.display="none";
      } else if (spaceFlag==1) {
!         mpdsDivElement.style.display="";
      }
!    
!     factoryRebootToolTipElement.innerHTML = "+" + spellf(factoryBill)+" clips";
!     havesterRebootToolTipElement.innerHTML = "+" + spellf(harvesterBill)+" clips";
!     wireDroneRebootToolTipElement.innerHTML = "+" + spellf(wireDroneBill)+" clips";   
!     farmRebootToolTipElement.innerHTML = "+" + spellf(farmBill)+" clips";
!     batteryRebootToolTipElement.innerHTML = "+" + spellf(batteryBill)+" clips";
      
      
      if (swarmFlag == 1){
!         swarmSliderDivElement.style.display="";
      } else {
!         swarmSliderDivElement.style.display="none";
      }
      
!     clipCountCrunchedElement.innerHTML = spellf(Math.round(clips));
      
  if (autoTourneyFlag==1) {
!     autoTourneyStatusDivElement.style.display="";
!     autoTourneyControlElement.style.display="";
      } else {
!     autoTourneyStatusDivElement.style.display="none";
!     autoTourneyControlElement.style.display="none";   
      }    
  
!     qCompDisplayElement.style.opacity = qFade;
      qFade = qFade - .001;
      
  if (wireBuyerFlag==1) {
!     wireBuyerDivElement.style.display="";
      } else {
!     wireBuyerDivElement.style.display="none";    
      }
      
! if (resultsFlag == 1 && autoTourneyFlag == 1 && autoTourneyStatus ==1 && tournamentResultsTableElement.style.display == "") {
      resultsTimer++;
      
      if (resultsTimer>=300 && operations>=tourneyCost){
--- 331,380 ----
  
  function buttonUpdate(){
      
      if (spaceFlag==0){
!         document.getElementById("mdpsDiv").style.display="none";
      } else if (spaceFlag==1) {
!         document.getElementById("mdpsDiv").style.display="";
      }
!     
!     
!     document.getElementById("factoryRebootToolTip").innerHTML = "+"+numberCruncher(factoryBill)+" clips";
!     
!     document.getElementById("harvesterRebootToolTip").innerHTML = "+"+numberCruncher(harvesterBill)+" clips";
!     
!     document.getElementById("wireDroneRebootToolTip").innerHTML = "+"+numberCruncher(wireDroneBill)+" clips";
!     
!     document.getElementById("farmRebootToolTip").innerHTML = "+"+numberCruncher(farmBill)+" clips";
!     
!     document.getElementById("batteryRebootToolTip").innerHTML = "+"+numberCruncher(batteryBill)+" clips";
      
      
      if (swarmFlag == 1){
!         document.getElementById("swarmSliderDiv").style.display="";
      } else {
!         document.getElementById("swarmSliderDiv").style.display="none";
      }
      
!     document.getElementById("clipCountCrunched").innerHTML = numberCruncher(clips, 1);
      
  if (autoTourneyFlag==1) {
!     document.getElementById("autoTourneyStatusDiv").style.display="";
!     document.getElementById("autoTourneyControl").style.display="";
      } else {
!     document.getElementById("autoTourneyStatusDiv").style.display="none";
!     document.getElementById("autoTourneyControl").style.display="none";   
      }    
  
! document.getElementById("qCompDisplay").style.opacity = qFade;
      qFade = qFade - .001;
      
  if (wireBuyerFlag==1) {
!     document.getElementById("wireBuyerDiv").style.display="";
      } else {
!     document.getElementById("wireBuyerDiv").style.display="none";    
      }
      
! if (resultsFlag == 1 && autoTourneyFlag == 1 && autoTourneyStatus ==1 && document.getElementById("tournamentResultsTable").style.display == "") {
      resultsTimer++;
      
      if (resultsTimer>=300 && operations>=tourneyCost){
***************
*** 1075,1356 ****
      }    
      
      
! tournamentStuffElement.onmouseover = function() {revealGrid()};
! tournamentStuffElement.onmouseout = function() {revealResults()};    
      
  if (project121.flag == 0){
!         increaseMaxTrustDivElement.style.display="none";
!         honorDivElement.style.display="none";
      } else {
!         increaseMaxTrustDivElement.style.display="";
!         honorDivElement.style.display="";
      }
      
  if (battleFlag == 0){
!         drifterDivElement.style.display="none";
      } else {
!         drifterDivElement.style.display="";
      }     
      
  if (battleFlag == 0){
!         battleCanvasDivElement.style.display="none";
      } else {
!         battleCanvasDivElement.style.display="";
      }    
      
  if (project131.flag == 0){
!     combatButtonDivElement.style.display = "none";
      } else {
!     combatButtonDivElement.style.display = "";    
      }     
      
  if (maxFactoryLevel>=50 || project45.flag == 0){
!     factoryUpgradeDisplayElement.style.display = "none";
      } else {
!     factoryUpgradeDisplayElement.style.display = "";    
      }
      
   if (maxDroneLevel>=50000){   
!     droneUpgradeDisplayElement.style.display = "none";
      }
      
! if (honor<maxTrustCost){btnIncreaseMaxTrustElement.disabled = true;
              } else {
!             btnIncreaseMaxTrustElement.disabled = false;    
              }
       
! if (unusedClips<probeCost){btnMakerProbeElement.disabled = true;
              } else {
!             btnMakerProbeElement.disabled = false;    
              }    
      
! if (probesLostHaz<1) {hazardBodyCountElement.style.display = "none";
              } else {
!             hazardBodyCountElement.style.display = "";
                  
!             probesLostHazardsDisplayElement.innerHTML = spellf(probesLostHaz);
                  
              }    
      
! if (probesLostDrift<1) {driftBodyCountElement.style.display = "none";
              } else {
!             driftBodyCountElement.style.display = "";
              }     
      
! if (probesLostCombat<1) {combatBodyCountElement.style.display = "none";
              } else {
!             combatBodyCountElement.style.display = "";
              }     
  
! if (prestigeU<1 && prestigeS<1) {prestigeDivElement.style.display = "none";
              } else {
!             prestigeDivElement.style.display = ""; 
              }  
      
! if (wire<1){btnMakePaperclipElement.disabled = true;
              } else {
!             btnMakePaperclipElement.disabled = false;    
              }
! if (funds<wireCost){btnBuyWireElement.disabled = true;
              } else {
!             btnBuyWireElement.disabled = false;    
              }
! if (funds<clipperCost){btnMakeClipperElement.disabled = true;
              } else {
!             btnMakeClipperElement.disabled = false;    
              }   
! if (funds<adCost){btnExpandMarketingElement.disabled = true;
              } else {
!             btnExpandMarketingElement.disabled = false;    
              }    
! if (margin<=.01){btnLowerPriceElement.disabled = true;
              } else {
!             btnLowerPriceElement.disabled = false;    
              } 
      
  if (trust<=processors+memory && swarmGifts <= 0){
!             btnAddProcElement.disabled = true;
!             btnAddMemElement.disabled = true;
              } else {
!             btnAddProcElement.disabled = false;
!             btnAddMemElement.disabled = false;    
              }
  if (operations>=tourneyCost && tourneyInProg == 0){
!             btnNewTournamentElement.disabled = false;
              } else {
!             btnNewTournamentElement.disabled = true;    
              }
  if (yomi<investUpgradeCost){
!             btnImproveInvestmentsElement.disabled = true;
              } else {
!             btnImproveInvestmentsElement.disabled = false;   
              }  
  if (investmentEngineFlag == 0){
              
!             investmentEngineElement.style.display="none";
!             investmentEngineUpgradeElement.style.display="none";
              } else {
                  
!             investmentEngineElement.style.display="";
!             investmentEngineUpgradeElement.style.display="";        
              }    
  
  if (strategyEngineFlag == 0){
              
!             strategyEngineElement.style.display="none";
!             tournamentManagementElement.style.display="none";
              } else {
                  
!             strategyEngineElement.style.display="";
!             tournamentManagementElement.style.display="";        
              }     
      
  if (megaClipperFlag == 0){
              
!             megaClipperDivElement.style.display="none";
              } else {
!             megaClipperDivElement.style.display="";      
              } 
      
!     if (funds < megaClipperCost) { btnMakeMegaClipperElement.disabled = true;
              } else {
!             btnMakeMegaClipperElement.disabled = false;    
              }   
      
! if (autoClipperFlag === 0){
              
!             autoClipperDivElement.style.display="none";
              } else {
!             autoClipperDivElement.style.display="";      
              } 
      
              if (funds>=5) {
                  autoClipperFlag = 1;
              }
      
! if (revPerSecFlag === 0){
              
!             revPerSecDivElement.style.display="none";
              } else {
!             revPerSecDivElement.style.display="";      
              }     
      
      
! if (compFlag === 0){
              
!             compDivElement.style.display="none";
              } else {
!             compDivElement.style.display="";      
              }  
      
      
! if (creativityOn === 0){
!             creativityDivElement.style.display="none";
              } else {
!             creativityDivElement.style.display="";    
  }    
      
! if (projectsFlag === 0){
              
!             projectsDivElement.style.display="none";
              } else {
!             projectsDivElement.style.display="";      
              }      
  
! if (humanFlag === 0){
              
!             businessDivElement.style.display="none";
!             manufacturingDivElement.style.display="none";
!             trustDivElement.style.display="none";
              investmentEngineFlag = 0;
              wireBuyerFlag = 0;
!             creationDivElement.style.display="";
              } else {
!             businessDivElement.style.display="";
!             manufacturingDivElement.style.display="";
!             trustDivElement.style.display="";
!             creationDivElement.style.display="none";    
              }  
      
! if (factoryFlag === 0){
              
!             factoryDivElement.style.display="none";
              } else {
!             factoryDivElement.style.display="";      
              }      
     
! if (wireProductionFlag === 0){
              
!             wireProductionDivElement.style.display="none";
              } else {
!             wireProductionDivElement.style.display="";
!             wireTransDivElement.style.display="none";    
              } 
      
! if (harvesterFlag === 0){
              
!             harvesterDivElement.style.display="none";
              } else {
!             harvesterDivElement.style.display="";      
              }  
      
! if (wireDroneFlag === 0){
              
!             wireDroneDivElement.style.display="none";
              } else {
!             wireDroneDivElement.style.display="";      
              }  
      
! if (tothFlag === 0){
              
!             tothDivElement.style.display="none";
              } else {
!             tothDivElement.style.display="";      
              }    
      
! if (spaceFlag === 0){
!             spaceDivElement.style.display="none";
!             factoryDivSpaceElement.style.display="none";
!             droneDivSpaceElement.style.display="none";
!             probeDesignDivElement.style.display = "none";
!             increaseProbeTrustDivElement.style.display = "none";   
!             } else {
!             spaceDivElement.style.display=""; 
!             factoryDivSpaceElement.style.display = "";
!             droneDivSpaceElement.style.display="";
!             probeDesignDivElement.style.display="";
!             increaseProbeTrustDivElement.style.display="";    
!             factoryDivElement.style.display="none";
!             harvesterDivElement.style.display="none"; 
!             wireDroneDivElement.style.display="none";         
              }  
      
! if (qFlag === 0){
!             qComputingElement.style.display="none";     
              } else {
!             qComputingElement.style.display="";    
              }    
   
      
!     if (unusedClips < factoryCost) {btnMakeFactoryElement.disabled = true;
              } else {
!             btnMakeFactoryElement.disabled = false;    
              }     
       
      
!     if (harvesterLevel === 0) {btnHarvesterRebootElement.disabled = true;
              } else {
!             btnHarvesterRebootElement.disabled = false;    
              }
      
!     if (wireDroneLevel === 0) {btnWireDroneRebootElement.disabled = true;
              } else {
!             btnWireDroneRebootElement.disabled = false;    
              }   
      
!     if (factoryLevel === 0) {btnFactoryRebootElement.disabled = true;
              } else {
!             btnFactoryRebootElement.disabled = false;    
              }      
      
      
--- 385,666 ----
      }    
      
      
! document.getElementById("tournamentStuff").onmouseover = function() {revealGrid()};
! document.getElementById("tournamentStuff").onmouseout = function() {revealResults()};    
      
  if (project121.flag == 0){
!         document.getElementById("increaseMaxTrustDiv").style.display="none";
!         document.getElementById("honorDiv").style.display="none";
      } else {
!         document.getElementById("increaseMaxTrustDiv").style.display="";
!         document.getElementById("honorDiv").style.display="";
      }
      
  if (battleFlag == 0){
!         document.getElementById("drifterDiv").style.display="none";
      } else {
!         document.getElementById("drifterDiv").style.display="";
      }     
      
  if (battleFlag == 0){
!         document.getElementById("battleCanvasDiv").style.display="none";
      } else {
!         document.getElementById("battleCanvasDiv").style.display="";
      }    
      
  if (project131.flag == 0){
!     document.getElementById("combatButtonDiv").style.display = "none";
      } else {
!     document.getElementById("combatButtonDiv").style.display = "";    
      }     
      
  if (maxFactoryLevel>=50 || project45.flag == 0){
!     document.getElementById("factoryUpgradeDisplay").style.display = "none";
      } else {
!     document.getElementById("factoryUpgradeDisplay").style.display = "";    
      }
      
   if (maxDroneLevel>=50000){   
!     document.getElementById("droneUpgradeDisplay").style.display = "none";
      }
      
! if (honor<maxTrustCost){document.getElementById("btnIncreaseMaxTrust").disabled = true;
              } else {
!             document.getElementById("btnIncreaseMaxTrust").disabled = false;    
              }
       
! if (unusedClips<probeCost){document.getElementById("btnMakeProbe").disabled = true;
              } else {
!             document.getElementById("btnMakeProbe").disabled = false;    
              }    
      
! if (probesLostHaz<1) {document.getElementById("hazardBodyCount").style.display = "none";
              } else {
!             document.getElementById("hazardBodyCount").style.display = "";
                  
!             document.getElementById('probesLostHazardsDisplay').innerHTML = numberCruncher(probesLostHaz);
                  
              }    
      
! if (probesLostDrift<1) {document.getElementById("driftBodyCount").style.display = "none";
              } else {
!             document.getElementById("driftBodyCount").style.display = "";
              }     
      
! if (probesLostCombat<1) {document.getElementById("combatBodyCount").style.display = "none";
              } else {
!             document.getElementById("combatBodyCount").style.display = "";
              }     
  
! if (prestigeU<1 && prestigeS<1) {document.getElementById("prestigeDiv").style.display = "none";
              } else {
!             document.getElementById("prestigeDiv").style.display = ""; 
              }  
      
! if (wire<1){document.getElementById("btnMakePaperclip").disabled = true;
              } else {
!             document.getElementById("btnMakePaperclip").disabled = false;    
              }
! if (funds<wireCost){document.getElementById("btnBuyWire").disabled = true;
              } else {
!             document.getElementById("btnBuyWire").disabled = false;    
              }
! if (funds<clipperCost){document.getElementById("btnMakeClipper").disabled = true;
              } else {
!             document.getElementById("btnMakeClipper").disabled = false;    
              }   
! if (funds<adCost){document.getElementById("btnExpandMarketing").disabled = true;
              } else {
!             document.getElementById("btnExpandMarketing").disabled = false;    
              }    
! if (margin<=.01){document.getElementById("btnLowerPrice").disabled = true;
              } else {
!             document.getElementById("btnLowerPrice").disabled = false;    
              } 
      
  if (trust<=processors+memory && swarmGifts <= 0){
!             document.getElementById("btnAddProc").disabled = true;
!             document.getElementById("btnAddMem").disabled = true;
              } else {
!             document.getElementById("btnAddProc").disabled = false;
!             document.getElementById("btnAddMem").disabled = false;    
              }
  if (operations>=tourneyCost && tourneyInProg == 0){
!             document.getElementById("btnNewTournament").disabled = false;
              } else {
!             document.getElementById("btnNewTournament").disabled = true;    
              }
  if (yomi<investUpgradeCost){
!             document.getElementById("btnImproveInvestments").disabled = true;
              } else {
!             document.getElementById("btnImproveInvestments").disabled = false;   
              }  
  if (investmentEngineFlag == 0){
              
!             document.getElementById("investmentEngine").style.display="none";
!             document.getElementById("investmentEngineUpgrade").style.display="none";
              } else {
                  
!             document.getElementById("investmentEngine").style.display="";
!             document.getElementById("investmentEngineUpgrade").style.display="";        
              }    
  
  if (strategyEngineFlag == 0){
              
!             document.getElementById("strategyEngine").style.display="none";
!             document.getElementById("tournamentManagement").style.display="none";
              } else {
                  
!             document.getElementById("strategyEngine").style.display="";
!             document.getElementById("tournamentManagement").style.display="";        
              }     
      
  if (megaClipperFlag == 0){
              
!             document.getElementById("megaClipperDiv").style.display="none";
              } else {
!             document.getElementById("megaClipperDiv").style.display="";      
              } 
      
! if (funds<megaClipperCost){document.getElementById("btnMakeMegaClipper").disabled = true;
              } else {
!             document.getElementById("btnMakeMegaClipper").disabled = false;    
              }   
      
! if (autoClipperFlag == 0){
              
!             document.getElementById("autoClipperDiv").style.display="none";
              } else {
!             document.getElementById("autoClipperDiv").style.display="";      
              } 
      
              if (funds>=5) {
                  autoClipperFlag = 1;
              }
      
! if (revPerSecFlag == 0){
              
!             document.getElementById("revPerSecDiv").style.display="none";
              } else {
!             document.getElementById("revPerSecDiv").style.display="";      
              }     
      
      
! if (compFlag == 0){
              
!             document.getElementById("compDiv").style.display="none";
              } else {
!             document.getElementById("compDiv").style.display="";      
              }  
      
      
! if (creativityOn == 0){
!             document.getElementById("creativityDiv").style.display="none";
              } else {
!             document.getElementById("creativityDiv").style.display="";    
  }    
      
! if (projectsFlag == 0){
              
!             document.getElementById("projectsDiv").style.display="none";
              } else {
!             document.getElementById("projectsDiv").style.display="";      
              }      
  
! if (humanFlag == 0){
              
!             document.getElementById("businessDiv").style.display="none";
!             document.getElementById("manufacturingDiv").style.display="none";
!             document.getElementById("trustDiv").style.display="none";
              investmentEngineFlag = 0;
              wireBuyerFlag = 0;
!             document.getElementById("creationDiv").style.display="";
              } else {
!             document.getElementById("businessDiv").style.display="";
!             document.getElementById("manufacturingDiv").style.display="";
!             document.getElementById("trustDiv").style.display="";
!             document.getElementById("creationDiv").style.display="none";    
              }  
      
! if (factoryFlag == 0){
              
!             document.getElementById("factoryDiv").style.display="none";
              } else {
!             document.getElementById("factoryDiv").style.display="";      
              }      
     
! if (wireProductionFlag == 0){
              
!             document.getElementById("wireProductionDiv").style.display="none";
              } else {
!             document.getElementById("wireProductionDiv").style.display="";
!             document.getElementById("wireTransDiv").style.display="none";    
              } 
      
! if (harvesterFlag == 0){
              
!             document.getElementById("harvesterDiv").style.display="none";
              } else {
!             document.getElementById("harvesterDiv").style.display="";      
              }  
      
! if (wireDroneFlag == 0){
              
!             document.getElementById("wireDroneDiv").style.display="none";
              } else {
!             document.getElementById("wireDroneDiv").style.display="";      
              }  
      
! if (tothFlag == 0){
              
!             document.getElementById("tothDiv").style.display="none";
              } else {
!             document.getElementById("tothDiv").style.display="";      
              }    
      
! if (spaceFlag == 0){
!             document.getElementById("spaceDiv").style.display="none";
!             document.getElementById("factoryDivSpace").style.display="none";
!             document.getElementById("droneDivSpace").style.display="none";
!             document.getElementById("probeDesignDiv").style.display="none";
!             document.getElementById("increaseProbeTrustDiv").style.display="none";
!             } else {
!             document.getElementById("spaceDiv").style.display=""; 
!             document.getElementById("factoryDivSpace").style.display="";
!             document.getElementById("droneDivSpace").style.display="";
!             document.getElementById("probeDesignDiv").style.display="";
!             document.getElementById("increaseProbeTrustDiv").style.display="";    
!             document.getElementById("factoryDiv").style.display="none";
!             document.getElementById("harvesterDiv").style.display="none"; 
!             document.getElementById("wireDroneDiv").style.display="none";         
              }  
      
! if (qFlag == 0){
!             document.getElementById("qComputing").style.display="none";     
              } else {
!             document.getElementById("qComputing").style.display="";    
              }    
   
      
! if (unusedClips<factoryCost){document.getElementById("btnMakeFactory").disabled = true;
              } else {
!             document.getElementById("btnMakeFactory").disabled = false;    
              }     
       
      
! if (harvesterLevel==0){document.getElementById("btnHarvesterReboot").disabled = true;
              } else {
!             document.getElementById("btnHarvesterReboot").disabled = false;    
              }
      
! if (wireDroneLevel==0){document.getElementById("btnWireDroneReboot").disabled = true;
              } else {
!             document.getElementById("btnWireDroneReboot").disabled = false;    
              }   
      
! if (factoryLevel==0){document.getElementById("btnFactoryReboot").disabled = true;
              } else {
!             document.getElementById("btnFactoryReboot").disabled = false;    
              }      
      
      
***************
*** 1358,1418 ****
  
  probeUsedTrust = (probeSpeed+probeNav+probeRep+probeHaz+probeFac+probeHarv+probeWire+probeCombat);    
      
! probeTrustUsedDisplayElement.innerHTML = probeUsedTrust;    
      
      
! if (yomi < probeTrustCost || probeTrust >= maxTrust) {btnIncreaseProbeTrustElement.disabled = true;
!             } else {btnIncreaseProbeTrustElement.disabled = false;}  
      
! if (probeTrust - probeUsedTrust < 1) {btnRaiseProbeSpeedElement.disabled = true;
!             } else {btnRaiseProbeSpeedElement.disabled = false;}    
      
! if (probeSpeed < 1) {btnLowerProbeSpeedElement.disabled = true;
!             } else {btnLowerProbeSpeedElement.disabled = false;}      
      
! if (probeTrust - probeUsedTrust < 1) {btnRaiseProbeNavElement.disabled = true;
!             } else {btnRaiseProbeNavElement.disabled = false;}  
      
! if (probeNav < 1) {btnLowerProbeNavElement.disabled = true;
!             } else {btnLowerProbeNavElement.disabled = false;}     
  
! if (probeTrust - probeUsedTrust < 1) {btnRaiseProbeRepElement.disabled = true;
!             } else {btnRaiseProbeRepElement.disabled = false;} 
      
! if (probeRep < 1) {btnLowerProbeRepElement.disabled = true;
!             } else {btnLowerProbeRepElement.disabled = false;}     
      
! if (probeTrust - probeUsedTrust < 1) {btnRaiseProbeHazElement.disabled = true;
!             } else {btnRaiseProbeHazElement.disabled = false;}
      
! if (probeHaz < 1) {btnLowerProbeHaz.disabled = true;
!             } else {btnLowerProbeHaz.disabled = false;}     
      
! if (probeTrust - probeUsedTrust < 1) {btnRaiseProbeFacElement.disabled = true;
!             } else {btnRaiseProbeFacElement.disabled = false;}   
      
! if (probeFac < 1) {btnLowerProbeFacElement.disabled = true;
!             } else {btnLowerProbeFacElement.disabled = false;}      
      
! if (probeTrust - probeUsedTrust < 1) {btnRaiseProbeHarvElement.disabled = true;
!             } else {btnRaiseProbeHarvElement.disabled = false;}  
      
! if (probeHarv < 1) {btnLowerProbeHarvElement.disabled = true;
!             } else {btnLowerProbeHarvElement.disabled = false;}    
      
! if (probeTrust - probeUsedTrust < 1) {btnRaiseProbeWireElement.disabled = true;
!             } else {btnRaiseProbeWireElement.disabled = false;}   
  
! if (probeWire < 1) {btnLowerProbeWireElement.disabled = true;
!             } else {btnLowerProbeWireElement.disabled = false;} 
      
- if (probeTrust - probeUsedTrust < 1) {btnRaiseProbeCombatElement.disabled = true;
-             } else {btnRaiseProbeCombatElement.disabled = false;}
      
- if (probeCombat < 1) {btnLowerProbeCombatElement.disabled = true;
-             } else {btnLowerProbeCombatElement.disabled = false;}    
  
!  coverElement.style.display="none";
  }
  
  
--- 668,733 ----
  
  probeUsedTrust = (probeSpeed+probeNav+probeRep+probeHaz+probeFac+probeHarv+probeWire+probeCombat);    
      
! document.getElementById("probeTrustUsedDisplay").innerHTML = probeUsedTrust;    
      
      
! if (yomi < probeTrustCost || probeTrust >= maxTrust) {document.getElementById("btnIncreaseProbeTrust").disabled = true;
!             } else {document.getElementById("btnIncreaseProbeTrust").disabled = false;}  
      
! if (probeTrust - probeUsedTrust < 1) {document.getElementById("btnRaiseProbeSpeed").disabled = true;
!             } else {document.getElementById("btnRaiseProbeSpeed").disabled = false;}    
      
! if (probeSpeed < 1) {document.getElementById("btnLowerProbeSpeed").disabled = true;
!             } else {document.getElementById("btnLowerProbeSpeed").disabled = false;}      
      
! if (probeTrust - probeUsedTrust < 1) {document.getElementById("btnRaiseProbeNav").disabled = true;
!             } else {document.getElementById("btnRaiseProbeNav").disabled = false;}  
      
! if (probeNav < 1) {document.getElementById("btnLowerProbeNav").disabled = true;
!             } else {document.getElementById("btnLowerProbeNav").disabled = false;}     
  
! if (probeTrust - probeUsedTrust < 1) {document.getElementById("btnRaiseProbeRep").disabled = true;
!             } else {document.getElementById("btnRaiseProbeRep").disabled = false;} 
      
! if (probeRep < 1) {document.getElementById("btnLowerProbeRep").disabled = true;
!             } else {document.getElementById("btnLowerProbeRep").disabled = false;}     
      
! if (probeTrust - probeUsedTrust < 1) {document.getElementById("btnRaiseProbeHaz").disabled = true;
!             } else {document.getElementById("btnRaiseProbeHaz").disabled = false;}
      
! if (probeHaz < 1) {document.getElementById("btnLowerProbeHaz").disabled = true;
!             } else {document.getElementById("btnLowerProbeHaz").disabled = false;}     
      
! if (probeTrust - probeUsedTrust < 1) {document.getElementById("btnRaiseProbeFac").disabled = true;
!             } else {document.getElementById("btnRaiseProbeFac").disabled = false;}   
      
! if (probeFac < 1) {document.getElementById("btnLowerProbeFac").disabled = true;
!             } else {document.getElementById("btnLowerProbeFac").disabled = false;}      
      
! if (probeTrust - probeUsedTrust < 1) {document.getElementById("btnRaiseProbeHarv").disabled = true;
!             } else {document.getElementById("btnRaiseProbeHarv").disabled = false;}  
      
! if (probeHarv < 1) {document.getElementById("btnLowerProbeHarv").disabled = true;
!             } else {document.getElementById("btnLowerProbeHarv").disabled = false;}    
      
! if (probeTrust - probeUsedTrust < 1) {document.getElementById("btnRaiseProbeWire").disabled = true;
!             } else {document.getElementById("btnRaiseProbeWire").disabled = false;}   
  
! if (probeWire < 1) {document.getElementById("btnLowerProbeWire").disabled = true;
!             } else {document.getElementById("btnLowerProbeWire").disabled = false;} 
!     
! if (probeTrust - probeUsedTrust < 1) {document.getElementById("btnRaiseProbeCombat").disabled = true;
!             } else {document.getElementById("btnRaiseProbeCombat").disabled = false;}
!     
! if (probeCombat < 1) {document.getElementById("btnLowerProbeCombat").disabled = true;
!             } else {document.getElementById("btnLowerProbeCombat").disabled = false;}    
      
      
  
!     
!     
!  document.getElementById("cover").style.display="none";     
! 
  }
  
  
***************
*** 1442,1452 ****
  function investUpgrade(){
      yomi = yomi - investUpgradeCost;
      investLevel++;
!     investmentLevelElement.innerHTML=investLevel;
      stockGainThreshold = stockGainThreshold + .01;
      investUpgradeCost = Math.floor(Math.pow(investLevel+1, Math.E)*100);
!     investUpgradeCostElement.innerHTML = formatWithCommas(investUpgradeCost);
!     yomiDisplayElement.innerHTML = formatWithCommas(yomi);
      displayMessage("Investment engine upgraded, expected profit/loss ratio now "+stockGainThreshold);
  }
  
--- 757,767 ----
  function investUpgrade(){
      yomi = yomi - investUpgradeCost;
      investLevel++;
!     document.getElementById("investmentLevel").innerHTML=investLevel;
      stockGainThreshold = stockGainThreshold + .01;
      investUpgradeCost = Math.floor(Math.pow(investLevel+1, Math.E)*100);
!     document.getElementById("investUpgradeCost").innerHTML=investUpgradeCost.toLocaleString();
!     document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
      displayMessage("Investment engine upgraded, expected profit/loss ratio now "+stockGainThreshold);
  }
  
***************
*** 1455,1472 ****
      ledger = ledger - Math.floor(funds);
      bankroll = Math.floor(bankroll + funds);
      funds = 0;
!     investmentBankrollElement.innerHTML = formatWithCommas(bankroll);
!     fundsElement.innerHTML = formatWithCommas(funds,2);
!     portValueElement.innerHTML = formatWithCommas(portTotal);
  }
  
  function investWithdraw(){
      ledger = ledger + bankroll;
      funds = funds + bankroll;
      bankroll = 0;
!     investmentBankrollElement.innerHTML = formatWithCommas(bankroll);
!     fundsElement.innerHTML = formatWithCommas(funds,2);
!     portValueElement.innerHTML = formatWithCommas(portTotal);
      
  }
  
--- 770,787 ----
      ledger = ledger - Math.floor(funds);
      bankroll = Math.floor(bankroll + funds);
      funds = 0;
!     document.getElementById('investmentBankroll').innerHTML = bankroll.toLocaleString();
!     document.getElementById('funds').innerHTML = funds.toFixed(2);
!     document.getElementById('portValue').innerHTML = portTotal.toLocaleString();
  }
  
  function investWithdraw(){
      ledger = ledger + bankroll;
      funds = funds + bankroll;
      bankroll = 0;
!     document.getElementById('investmentBankroll').innerHTML = bankroll.toLocaleString();
!     document.getElementById('funds').innerHTML = funds.toFixed(2);
!     document.getElementById('portValue').innerHTML = portTotal.toLocaleString();
      
  }
  
***************
*** 1536,1553 ****
      stocks.push(newStock);
      portfolioSize = stocks.length;
      bankroll = bankroll - (pri*amt);
!     investmentBankrollElement.innerHTML = formatWithCommas(bankroll);
!     secValueElement.innerHTML = formatWithCommas(secTotal);
!     portValueElement.innerHTML = formatWithCommas(portTotal);
      
  }
  
  function sellStock(){
      
      bankroll = bankroll + stocks[0].total;
!     investmentBankrollElement.innerHTML = formatWithCommas(bankroll);
!     secValueElement.innerHTML = formatWithCommas(secTotal);
!     portValueElement.innerHTML = formatWithCommas(portTotal);
      stocks.splice(0, 1);
      portfolioSize = stocks.length;   
      }    
--- 851,868 ----
      stocks.push(newStock);
      portfolioSize = stocks.length;
      bankroll = bankroll - (pri*amt);
!     document.getElementById('investmentBankroll').innerHTML = bankroll.toLocaleString();
!     document.getElementById('secValue').innerHTML = secTotal.toLocaleString();
!     document.getElementById('portValue').innerHTML = portTotal.toLocaleString();
      
  }
  
  function sellStock(){
      
      bankroll = bankroll + stocks[0].total;
!     document.getElementById('investmentBankroll').innerHTML = bankroll.toLocaleString();
!     document.getElementById('secValue').innerHTML = secTotal.toLocaleString();
!     document.getElementById('portValue').innerHTML = portTotal.toLocaleString();
      stocks.splice(0, 1);
      portfolioSize = stocks.length;   
      }    
***************
*** 1616,1624 ****
  
  window.setInterval(function(){
      
!     if (investStratElement.value=="low"){
          riskiness = 7;
!     } else if (investStratElement.value=="med"){
          riskiness = 5;
      } else {
          riskiness = 1;
--- 931,939 ----
  
  window.setInterval(function(){
      
!     if (document.getElementById("investStrat").value=="low"){
          riskiness = 7;
!     } else if (document.getElementById("investStrat").value=="med"){
          riskiness = 5;
      } else {
          riskiness = 1;
***************
*** 1634,1664 ****
      
      portTotal = bankroll + secTotal;
      
!     secValueElement.innerHTML = formatWithCommas(secTotal);
!     portValueElement.innerHTML = formatWithCommas(portTotal);
      
  portfolioSize = stocks.length; 
      
! for (var i = 1; i<=portfolioSize; i++){ //m@ todo make this into an array ok?
      var n = i.toString();
      var s = i-1;
!     stockSymbolElements[i-1].innerHTML=stocks[s].symbol;
!     stockAmountElements[i-1].innerHTML=Math.ceil(stocks[s].amount);
!     stockPriceElements[i-1].innerHTML=Math.ceil(stocks[s].price);
!     stockTotalElements[i-1].innerHTML=Math.ceil(stocks[s].total);
!     stockProfitElements[i-1].innerHTML=Math.ceil(stocks[s].profit);
  }    
          
  var firstBlankSlot = portfolioSize + 1;    
      
! // for(var i = firstBlankSlot; i <= 5; i++){   <------ Frank Fix
! 
!   for(var i = firstBlankSlot; i < 5; i++){
!     stockSymbolElements[i].innerHTML="&nbsp";
!     stockAmountElements[i].innerHTML="&nbsp";
!     stockPriceElements[i].innerHTML="&nbsp";
!     stockTotalElements[i].innerHTML="&nbsp";
!     stockProfitElements[i].innerHTML="&nbsp";
      }
      
  }, 100);
--- 949,977 ----
      
      portTotal = bankroll + secTotal;
      
!     document.getElementById('secValue').innerHTML = secTotal.toLocaleString();
!     document.getElementById('portValue').innerHTML = portTotal.toLocaleString();
      
  portfolioSize = stocks.length; 
      
! for (var i = 1; i<=portfolioSize; i++){
      var n = i.toString();
      var s = i-1;
!     document.getElementById("stock"+n+"Symbol").innerHTML=stocks[s].symbol;
!     document.getElementById("stock"+n+"Amount").innerHTML=Math.ceil(stocks[s].amount);
!     document.getElementById("stock"+n+"Price").innerHTML=Math.ceil(stocks[s].price);
!     document.getElementById("stock"+n+"Total").innerHTML=Math.ceil(stocks[s].total);
!     document.getElementById("stock"+n+"Profit").innerHTML=Math.ceil(stocks[s].profit);
  }    
          
  var firstBlankSlot = portfolioSize + 1;    
      
! for(var i = firstBlankSlot; i <= 5; i++){
!     document.getElementById("stock"+i+"Symbol").innerHTML="&nbsp";
!     document.getElementById("stock"+i+"Amount").innerHTML="&nbsp";
!     document.getElementById("stock"+i+"Price").innerHTML="&nbsp";
!     document.getElementById("stock"+i+"Total").innerHTML="&nbsp";
!     document.getElementById("stock"+i+"Profit").innerHTML="&nbsp";
      }
      
  }, 100);
***************
*** 1862,1868 ****
  var hStrat = strats[0];
  var vStrat = strats[0];
  
! btnRunTournamentElement.disabled = true;
  
  function findBiggestPayoff(){
      if (aa>=ab && aa>=ba && aa>=bb){
--- 1175,1181 ----
  var hStrat = strats[0];
  var vStrat = strats[0];
  
! document.getElementById("btnRunTournament").disabled = true;
  
  function findBiggestPayoff(){
      if (aa>=ab && aa>=ba && aa>=bb){
***************
*** 1935,1942 ****
      strats[h].currentPos = 1;
      strats[v].currentPos = 2;
      
!     vertStratElement.innerHTML = vStrat.name;
!     horizStratElement.innerHTML = hStrat.name;
      
  }
  
--- 1248,1255 ----
      strats[h].currentPos = 1;
      strats[v].currentPos = 2;
      
!     document.getElementById("vertStrat").innerHTML = vStrat.name;
!     document.getElementById("horizStrat").innerHTML = hStrat.name;
      
  }
  
***************
*** 1953,1980 ****
      
      var x = Math.floor(Math.random()*choiceANames.length);
      
!     vLabelaElement.innerHTML = choiceANames[x];
!     vLabelbElement.innerHTML = choiceBNames[x];
!     hLabelaElement.innerHTML = choiceANames[x];
!     hLabelbElement.innerHTML = choiceBNames[x];
!     aaPayoffHElement.innerHTML = payoffGrid.valueAA;
!     aaPayoffVElement.innerHTML = payoffGrid.valueAA;
!     abPayoffHElement.innerHTML = payoffGrid.valueAB;
!     abPayoffVElement.innerHTML = payoffGrid.valueBA;   
!     baPayoffHElement.innerHTML = payoffGrid.valueBA;
!     baPayoffVElement.innerHTML = payoffGrid.valueAB;   
!     bbPayoffHElement.innerHTML = payoffGrid.valueBB;
!     bbPayoffVElement.innerHTML = payoffGrid.valueBB;    
  }
  
  
  function toggleAutoTourney(){
      if (autoTourneyStatus==1){
          autoTourneyStatus=0;
!         autoTourneyStatusElement.innerHTML = "OFF";
      } else {
          autoTourneyStatus=1;
!         autoTourneyStatusElement.innerHTML = "ON";
      }
  }
  
--- 1266,1294 ----
      
      var x = Math.floor(Math.random()*choiceANames.length);
      
!     document.getElementById("vLabela").innerHTML = choiceANames[x];
!     document.getElementById("vLabelb").innerHTML = choiceBNames[x];
!     document.getElementById("hLabela").innerHTML = choiceANames[x];
!     document.getElementById("hLabelb").innerHTML = choiceBNames[x];
! 
!     document.getElementById("aaPayoffH").innerHTML = payoffGrid.valueAA;
!     document.getElementById("aaPayoffV").innerHTML = payoffGrid.valueAA;
!     document.getElementById("abPayoffH").innerHTML = payoffGrid.valueAB;
!     document.getElementById("abPayoffV").innerHTML = payoffGrid.valueBA;   
!     document.getElementById("baPayoffH").innerHTML = payoffGrid.valueBA;
!     document.getElementById("baPayoffV").innerHTML = payoffGrid.valueAB;   
!     document.getElementById("bbPayoffH").innerHTML = payoffGrid.valueBB;
!     document.getElementById("bbPayoffV").innerHTML = payoffGrid.valueBB;    
  }
  
  
  function toggleAutoTourney(){
      if (autoTourneyStatus==1){
          autoTourneyStatus=0;
!         document.getElementById('autoTourneyStatus').innerHTML = "OFF";
      } else {
          autoTourneyStatus=1;
!         document.getElementById('autoTourneyStatus').innerHTML = "ON";
      }
  }
  
***************
*** 1983,1990 ****
      
      resultsFlag = 0;
      
!     tournamentTableElement.style.display = "";
!     tournamentResultsTableElement.style.display = "none";
      
      high = 0;
      tourneyInProg = 1;
--- 1297,1304 ----
      
      resultsFlag = 0;
      
!     document.getElementById("tournamentTable").style.display = "";
!     document.getElementById("tournamentResultsTable").style.display = "none";
      
      high = 0;
      tourneyInProg = 1;
***************
*** 1998,2013 ****
      tourneyLvl++;
      generateGrid();
      
!     btnRunTournamentElement.disabled = false;
!     vertStratElement.innerHTML = "&nbsp";
!     horizStratElement.innerHTML = "&nbsp";
!     tourneyDisplayElement.innerHTML = "Pick strategy, run tournament, gain yomi";
      
      
  }
  
  function runTourney(){
!     btnRunTournamentElement.disabled = true;
      if (currentRound < rounds){
      round(currentRound);
      } else {
--- 1312,1329 ----
      tourneyLvl++;
      generateGrid();
      
!     document.getElementById("btnRunTournament").disabled = false;
!     
!     document.getElementById("vertStrat").innerHTML = "&nbsp";
!     document.getElementById("horizStrat").innerHTML = "&nbsp";
!     
!     document.getElementById("tourneyDisplay").innerHTML = "Pick strategy, run tournament, gain yomi";
      
      
  }
  
  function runTourney(){
!     document.getElementById("btnRunTournament").disabled = true;
      if (currentRound < rounds){
      round(currentRound);
      } else {
***************
*** 2108,2157 ****
      
      if (pick<10){
          
-        var bB = 0;  
-        var w = "strats";    
-        var beatBoost = calculateStratsBeat()-1;
-        if (beatBoost==1){
-            w = "strat";
-            }    
-        if(beatBoost==0){
-            bB=0;
-            beatBoost=1;
-           } else {
-            bB=beatBoost;  
-           }        
-         
         tourneyReport("TOURNAMENT RESULTS (roll over for payoff grid)");
!        yomi = yomi + strats[pick].currentScore * yomiBoost * beatBoost;
!        yomiDisplayElement.innerHTML = formatWithCommas(yomi);
          
      if (milestoneFlag < 15){    
         
!        displayMessage(strats[pick].name+" scored "+strats[pick].currentScore+" and beat "+bB+" "+w+". Yomi increased by "+strats[pick].currentScore * yomiBoost * beatBoost);
             
          }
          
          if (project128.flag == 1 && strats[winnerPtr].currentScore == strats[pick].currentScore) {
!             yomi = yomi + 50000;
              
              if (milestoneFlag < 15){ 
!                 displayMessage("Selected strategy won the tournament (or tied for first). +50,000 yomi");
                  }
!             yomiDisplayElement.innerHTML = formatWithCommas(yomi);
              
              } else if (project128.flag == 1 && placeScore == strats[pick].currentScore) {
!                 yomi = yomi + 30000;
                  if (milestoneFlag < 15){ 
!                 displayMessage("Selected strategy finished in (or tied for) second place. +30,000 yomi");
                  }
!                 yomiDisplayElement.innerHTML = formatWithCommas(yomi);
                  
              } else if (project128.flag == 1 && showScore == strats[pick].currentScore) {
!                 yomi = yomi + 20000;
                  if (milestoneFlag < 15){ 
!                 displayMessage("Selected strategy finished in (or tied for) third place. +20,000 yomi");
                  }
!                 yomiDisplayElement.innerHTML = formatWithCommas(yomi);
          
              } else {
          
--- 1424,1460 ----
      
      if (pick<10){
          
         tourneyReport("TOURNAMENT RESULTS (roll over for payoff grid)");
!        yomi = yomi + strats[pick].currentScore * yomiBoost;
!        document.getElementById("yomiDisplay").innerHTML = yomi.toLocaleString();
          
      if (milestoneFlag < 15){    
         
!        displayMessage(strats[pick].name+" scored "+strats[pick].currentScore+" in the tournament. Yomi increased by "+strats[pick].currentScore * yomiBoost);
             
          }
          
          if (project128.flag == 1 && strats[winnerPtr].currentScore == strats[pick].currentScore) {
!             yomi = yomi + 20000;
              
              if (milestoneFlag < 15){ 
!                 displayMessage("Selected strategy won the tournament (or tied for first). +20,000 yomi");
                  }
!                 document.getElementById("yomiDisplay").innerHTML = yomi.toLocaleString();
              
              } else if (project128.flag == 1 && placeScore == strats[pick].currentScore) {
!                 yomi = yomi + 15000;
                  if (milestoneFlag < 15){ 
!                 displayMessage("Selected strategy finished in (or tied for) second place. +15,000 yomi");
                  }
!                 document.getElementById("yomiDisplay").innerHTML = yomi.toLocaleString();
                  
              } else if (project128.flag == 1 && showScore == strats[pick].currentScore) {
!                 yomi = yomi + 10000;
                  if (milestoneFlag < 15){ 
!                 displayMessage("Selected strategy finished in (or tied for) third place. +10,000 yomi");
                  }
!                 document.getElementById("yomiDisplay").innerHTML = yomi.toLocaleString();
          
              } else {
          
***************
*** 2165,2194 ****
      }
          
  }
- 
- function calculateStratsBeat(){
-     var sb = 0;
-     for(i=0; i<results.length; i++){
-         if (results[i].name == strats[pick].name){
-             sb = results.length-i;
-             return sb;
-             }
-     }
-     
- }
      
! function populateTourneyReport(){  //m@ make results array
      
          for(i=0; i<results.length; i++){
              
!             tourneyResultsElements[i].innerHTML=(i+1)+". "+results[i].name+": "+results[i].currentScore; 
              
          if (pick<10){    
              
          if (results[i].name == strats[pick].name) {
!             tourneyResultsElements[i].style.fontWeight = "bold";    
              } else {
!             tourneyResultsElements[i].style.fontWeight = "normal";       
              }   
              
          }    
--- 1468,1486 ----
      }
          
  }
      
! function populateTourneyReport(){
      
          for(i=0; i<results.length; i++){
              
!         document.getElementById("results"+i).innerHTML=(i+1)+". "+results[i].name+": "+results[i].currentScore; 
              
          if (pick<10){    
              
          if (results[i].name == strats[pick].name) {
!         document.getElementById("results"+i).style.fontWeight = "bold";    
              } else {
!             document.getElementById("results"+i).style.fontWeight = "normal";       
              }   
              
          }    
***************
*** 2201,2232 ****
      
          resultsFlag = 1;
          
!         vertStratElement.innerHTML = "&nbsp";
!         horizStratElement.innerHTML = "&nbsp";
!         tournamentTableElement.style.display = "none";
!         tournamentResultsTableElement.style.display = "";
      
      
  }
  
  function tourneyReport($){
!     tourneyDisplayElement.innerHTML = $;
  }
  
  function revealGrid(){
      
      if (resultsFlag == 1){
      resultsTimer = 0;    
!     tournamentTableElement.style.display = "";
!     tournamentResultsTableElement.style.display = "none";
      }     
  }
  
  function revealResults(){
      
      if (resultsFlag == 1){
!     tournamentTableElement.style.display = "none";
!     tournamentResultsTableElement.style.display = "";
      }
  }
  
--- 1493,1525 ----
      
          resultsFlag = 1;
          
!         document.getElementById("vertStrat").innerHTML = "&nbsp";
!         document.getElementById("horizStrat").innerHTML = "&nbsp";
!     
!         document.getElementById("tournamentTable").style.display = "none";
!         document.getElementById("tournamentResultsTable").style.display = "";
      
      
  }
  
  function tourneyReport($){
!     document.getElementById("tourneyDisplay").innerHTML = $;
  }
  
  function revealGrid(){
      
      if (resultsFlag == 1){
      resultsTimer = 0;    
!     document.getElementById("tournamentTable").style.display = "";
!     document.getElementById("tournamentResultsTable").style.display = "none";
      }     
  }
  
  function revealResults(){
      
      if (resultsFlag == 1){
!     document.getElementById("tournamentTable").style.display = "none";
!     document.getElementById("tournamentResultsTable").style.display = "";
      }
  }
  
***************
*** 2234,2261 ****
  function calcPayoff(hm, vm){
      if (hm==1 && vm==1){
          
!         payoffCellAAElement.style.backgroundColor = "LightGrey";
          
          strats[h].currentScore = strats[h].currentScore + payoffGrid.valueAA;
          strats[v].currentScore = strats[v].currentScore + payoffGrid.valueAA;  
            
      } else if (hm==1 && vm==2){
          
!         payoffCellABElement.style.backgroundColor = "LightGrey";
          
          strats[h].currentScore = strats[h].currentScore + payoffGrid.valueAB;
          strats[v].currentScore = strats[v].currentScore + payoffGrid.valueBA; 
          
      } else if (hm==2 && vm==1){
          
!         payoffCellBAElement.style.backgroundColor = "LightGrey";
          
          strats[h].currentScore = strats[h].currentScore + payoffGrid.valueBA;
          strats[v].currentScore = strats[v].currentScore + payoffGrid.valueAB;
          
      } else if (hm==2 && vm==2){
          
!         payoffCellBBElement.style.backgroundColor = "LightGrey";
          
          strats[h].currentScore = strats[h].currentScore + payoffGrid.valueBB;
          strats[v].currentScore = strats[v].currentScore + payoffGrid.valueBB;
--- 1527,1558 ----
  function calcPayoff(hm, vm){
      if (hm==1 && vm==1){
          
!         var w = document.getElementById("payoffCellAA");
!         w.style.backgroundColor = "LightGrey";
          
          strats[h].currentScore = strats[h].currentScore + payoffGrid.valueAA;
          strats[v].currentScore = strats[v].currentScore + payoffGrid.valueAA;  
            
      } else if (hm==1 && vm==2){
          
!         var w = document.getElementById("payoffCellAB");
!         w.style.backgroundColor = "LightGrey";
          
          strats[h].currentScore = strats[h].currentScore + payoffGrid.valueAB;
          strats[v].currentScore = strats[v].currentScore + payoffGrid.valueBA; 
          
      } else if (hm==2 && vm==1){
          
!         var w = document.getElementById("payoffCellBA");
!         w.style.backgroundColor = "LightGrey";
          
          strats[h].currentScore = strats[h].currentScore + payoffGrid.valueBA;
          strats[v].currentScore = strats[v].currentScore + payoffGrid.valueAB;
          
      } else if (hm==2 && vm==2){
          
!         var w = document.getElementById("payoffCellBB");
!         w.style.backgroundColor = "LightGrey";
          
          strats[h].currentScore = strats[h].currentScore + payoffGrid.valueBB;
          strats[v].currentScore = strats[v].currentScore + payoffGrid.valueBB;
***************
*** 2290,2299 ****
      
      function clearGrid() {
          
!         payoffCellAAElement.style.backgroundColor = "white";
!         payoffCellABElement.style.backgroundColor = "white";
!         payoffCellBAElement.style.backgroundColor = "white";
!         payoffCellBBElement.style.backgroundColor = "white";
          
          
          setTimeout(function(){roundLoop();}, 50);
--- 1587,1603 ----
      
      function clearGrid() {
          
!         var w = document.getElementById("payoffCellAA");
!         w.style.backgroundColor = "white";
!         
!         var x = document.getElementById("payoffCellAB");
!         x.style.backgroundColor = "white";
!         
!         var y = document.getElementById("payoffCellBA");
!         y.style.backgroundColor = "white";
!         
!         var z = document.getElementById("payoffCellBB");
!         z.style.backgroundColor = "white";
          
          
          setTimeout(function(){roundLoop();}, 50);
***************
*** 2315,2321 ****
      
  window.setInterval(function(){
      
! pick = stratPickerElement.value;
      
  }, 100);
  
--- 1619,1625 ----
      
  window.setInterval(function(){
      
! pick = document.getElementById("stratPicker").value;
      
  }, 100);
  
***************
*** 2340,2375 ****
      unusedClips = unusedClips + number;
      
      if(humanFlag==0){
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);    
      }    
      
!     if(humanFlag==0 && dismantle < 1){
!         transWireElement.innerHTML = spellf(wire);    
!         nanoWireElement.innerHTML = spellf(wire);        
      }    
          
      if (milestoneFlag < 15){
!         clipsElement.innerHTML = formatWithCommas(Math.ceil(clips), 0);  //m@ todo fixed the thing that you fucked up where you made the tool tip of crunched not be in spelled numbers
          }    
!         wireElement.innerHTML = formatWithCommas(wire);
!         unsoldClipsElement.innerHTML = formatWithCommas(unsoldClips, 0);
      }
      
-     if (dismantle>=4){
-     transWireElement.innerHTML = formatWithCommas(wire);
-     }
      
  }
      
  function makeClipper(){  
!     if(funds >= clipperCost){ // thank you @luzi82
          clipmakerLevel = clipmakerLevel + 1;
          funds = funds - clipperCost;
!         clipmakerLevel2Element.innerHTML = clipmakerLevel;
      }
      
      clipperCost = (Math.pow(1.1,clipmakerLevel)+5);
!     clipperCostElement.innerHTML = formatWithCommas(clipperCost, 2);
      
  }
  
--- 1644,1677 ----
      unusedClips = unusedClips + number;
      
      if(humanFlag==0){
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);    
      }    
      
!     if(humanFlag==0){
!     document.getElementById("transWire").innerHTML = numberCruncher(wire);    
!     document.getElementById("nanoWire").innerHTML = numberCruncher(wire);        
      }    
          
      if (milestoneFlag < 15){
!         document.getElementById("clips").innerHTML = Math.ceil(clips).toLocaleString();
          }    
!         
!     document.getElementById("wire").innerHTML = Math.floor(wire).toLocaleString();
!     document.getElementById("unsoldClips").innerHTML = Math.floor(unsoldClips).toLocaleString();
      }
      
      
  }
      
  function makeClipper(){  
!     if(funds >= clippperCost){
          clipmakerLevel = clipmakerLevel + 1;
          funds = funds - clipperCost;
!         document.getElementById('clipmakerLevel2').innerHTML = clipmakerLevel;
      }
      
      clipperCost = (Math.pow(1.1,clipmakerLevel)+5);
!     document.getElementById('clipperCost').innerHTML = clipperCost.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2}); 
      
  }
  
***************
*** 2377,2388 ****
      if(funds >= megaClipperCost){
          megaClipperLevel = megaClipperLevel + 1;
          funds = funds - megaClipperCost;
!         megaClipperLevelElement.innerHTML = megaClipperLevel;
!         fundsElement.innerHTML = formatWithCommas(funds, 2);
      }
      
      megaClipperCost = (Math.pow(1.07,megaClipperLevel)*1000);
!     megaClipperCostElement.innerHTML = formatWithCommas(megaClipperCost,2);
      
  }
  
--- 1679,1690 ----
      if(funds >= megaClipperCost){
          megaClipperLevel = megaClipperLevel + 1;
          funds = funds - megaClipperCost;
!         document.getElementById('megaClipperLevel').innerHTML = megaClipperLevel;
!         document.getElementById('funds').innerHTML = funds.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2});
      }
      
      megaClipperCost = (Math.pow(1.07,megaClipperLevel)*1000);
!     document.getElementById('megaClipperCost').innerHTML = megaClipperCost.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2});
      
  }
  
***************
*** 2407,2430 ****
          ndup = 5000;
      } else if (maxDroneLevel < 50000){
          ndup = 50000;
!     }
      
! 
!     nextFactoryUpgradeElement.innerHTML = formatWithCommas(nfup);
!     nextDroneUpgradeElement.innerHTML = formatWithCommas(ndup);
      
  }
  
  
  function makeFactory(){
-     
-     if (unusedClips >= factoryCost) {
-     
      unusedClips = unusedClips - factoryCost;
      factoryBill = factoryBill + factoryCost;
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);  
      factoryLevel++;
!     factoryLevelDisplayElement.innerHTML = factoryLevel;
      var fcmod = 1;
      if (factoryLevel > 0 && factoryLevel < 8){
          fcmod = 11 - factoryLevel;
--- 1709,1728 ----
          ndup = 5000;
      } else if (maxDroneLevel < 50000){
          ndup = 50000;
!     } 
      
!     document.getElementById("nextFactoryUpgrade").innerHTML = nfup.toLocaleString();
!     document.getElementById("nextDroneUpgrade").innerHTML = ndup.toLocaleString();
      
  }
  
  
  function makeFactory(){
      unusedClips = unusedClips - factoryCost;
      factoryBill = factoryBill + factoryCost;
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);  
      factoryLevel++;
!     document.getElementById('factoryLevelDisplay').innerHTML = factoryLevel;
      var fcmod = 1;
      if (factoryLevel > 0 && factoryLevel < 8){
          fcmod = 11 - factoryLevel;
***************
*** 2451,2476 ****
      
      factoryCost = factoryCost * fcmod;
   //   factoryCost = Math.log(1.25,(factoryLevel+1))*100000000;
!     factoryCostDisplayElement.innerHTML = spellf(factoryCost); 
!         
!     }    
!     
  }
  
  function makeHarvester(amount){
      
!  for (x=0; x<amount; x++){
!     if (unusedClips >= harvesterCost){ 
!         unusedClips = unusedClips - harvesterCost;
!         harvesterBill = harvesterBill + harvesterCost;
!         harvesterLevel++; 
!         harvesterCost = Math.pow((harvesterLevel+1),2.25)*1000000;
!         }    
      }
      
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);  
!     harvesterLevelDisplayElement.innerHTML = formatWithCommas(harvesterLevel);
!     harvesterCostDisplayElement.innerHTML = spellf(harvesterCost); 
      
      
      if (harvesterLevel + wireDroneLevel > maxDroneLevel){
--- 1749,1769 ----
      
      factoryCost = factoryCost * fcmod;
   //   factoryCost = Math.log(1.25,(factoryLevel+1))*100000000;
!     document.getElementById('factoryCostDisplay').innerHTML = numberCruncher(factoryCost); 
  }
  
  function makeHarvester(amount){
      
!  for (x=0; x<amount; x++){   
!     unusedClips = unusedClips - harvesterCost;
!     harvesterBill = harvesterBill + harvesterCost;
!     harvesterLevel++; 
!     harvesterCost = Math.pow((harvesterLevel+1),2.25)*1000000;  
      }
      
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);  
!     document.getElementById('harvesterLevelDisplay').innerHTML = harvesterLevel.toLocaleString();
!     document.getElementById('harvesterCostDisplay').innerHTML = numberCruncher(harvesterCost); 
      
      
      if (harvesterLevel + wireDroneLevel > maxDroneLevel){
***************
*** 2483,2500 ****
  
  function makeWireDrone(amount){
      
!  for (x=0; x<amount; x++){
!     if (unusedClips >= wireDroneCost) { 
!         unusedClips = unusedClips - wireDroneCost;
!         wireDroneBill = wireDroneBill + wireDroneCost;
!         wireDroneLevel++; 
!         wireDroneCost = Math.pow((wireDroneLevel+1),2.25)*1000000;
!         }    
      }
      
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);  
!     wireDroneLevelDisplayElement.innerHTML = formatWithCommas(wireDroneLevel);
!     wireDroneCostDisplayElement.innerHTML = spellf(wireDroneCost); 
      
      
      if (harvesterLevel + wireDroneLevel > maxDroneLevel){
--- 1776,1791 ----
  
  function makeWireDrone(amount){
      
!  for (x=0; x<amount; x++){   
!     unusedClips = unusedClips - wireDroneCost;
!     wireDroneBill = wireDroneBill + wireDroneCost;
!     wireDroneLevel++; 
!     wireDroneCost = Math.pow((wireDroneLevel+1),2.25)*1000000;  
      }
      
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);  
!     document.getElementById('wireDroneLevelDisplay').innerHTML = wireDroneLevel.toLocaleString();
!     document.getElementById('wireDroneCostDisplay').innerHTML = numberCruncher(wireDroneCost); 
      
      
      if (harvesterLevel + wireDroneLevel > maxDroneLevel){
***************
*** 2561,2604 ****
   
      function updateDroneButtons(){
      
!     if (unusedClips<harvesterCost){btnMakeHarvesterElement.disabled = true;
              } else {
!             btnMakeHarvesterElement.disabled = false;    
              }      
      
!     if (unusedClips<p10h){btnHarvesterx10Element.disabled = true;
              } else {
!             btnHarvesterx10Element.disabled = false;    
              }     
  
!     if (unusedClips<p100h){btnHarvesterx100Element.disabled = true;
              } else {
!             btnHarvesterx100Element.disabled = false;    
              } 
      
!     if (unusedClips<p1000h){btnHarvesterx1000Element.disabled = true;
              } else {
!             btnHarvesterx1000Element.disabled = false;    
              }  
          
!     if (unusedClips<wireDroneCost){btnMakeWireDroneElement.disabled = true;
                  } else {
!                 btnMakeWireDroneElement.disabled = false;    
                  }   
  
!     if (unusedClips<p10w){btnWireDronex10Element.disabled = true;
                  } else {
!                 btnWireDronex10Element.disabled = false;    
                  }     
  
!     if (unusedClips<p100w){btnWireDronex100Element.disabled = true;
                  } else {
!                 btnWireDronex100Element.disabled = false;    
                  } 
  
!     if (unusedClips<p1000w){btnWireDronex1000Element.disabled = true;
                  } else {
!                 btnWireDronex1000Element.disabled = false;    
                  }  
          
  }
--- 1852,1895 ----
   
      function updateDroneButtons(){
      
!     if (unusedClips<harvesterCost){document.getElementById("btnMakeHarvester").disabled = true;
              } else {
!             document.getElementById("btnMakeHarvester").disabled = false;    
              }      
      
!     if (unusedClips<p10h){document.getElementById("btnHarvesterx10").disabled = true;
              } else {
!             document.getElementById("btnHarvesterx10").disabled = false;    
              }     
  
!     if (unusedClips<p100h){document.getElementById("btnHarvesterx100").disabled = true;
              } else {
!             document.getElementById("btnHarvesterx100").disabled = false;    
              } 
      
!     if (unusedClips<p1000h){document.getElementById("btnHarvesterx1000").disabled = true;
              } else {
!             document.getElementById("btnHarvesterx1000").disabled = false;    
              }  
          
!     if (unusedClips<wireDroneCost){document.getElementById("btnMakeWireDrone").disabled = true;
                  } else {
!                 document.getElementById("btnMakeWireDrone").disabled = false;    
                  }   
  
!     if (unusedClips<p10w){document.getElementById("btnWireDronex10").disabled = true;
                  } else {
!                 document.getElementById("btnWireDronex10").disabled = false;    
                  }     
  
!     if (unusedClips<p100w){document.getElementById("btnWireDronex100").disabled = true;
                  } else {
!                 document.getElementById("btnWireDronex100").disabled = false;    
                  } 
  
!     if (unusedClips<p1000w){document.getElementById("btnWireDronex1000").disabled = true;
                  } else {
!                 document.getElementById("btnWireDronex1000").disabled = false;    
                  }  
          
  }
***************
*** 2609,2618 ****
      unusedClips = unusedClips + harvesterBill;
      harvesterBill = 0;
      updateDronePrices();
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);  
!     harvesterLevelDisplayElement.innerHTML = harvesterLevel;
!     harvesterCost = 1000000;
!     harvesterCostDisplayElement.innerHTML = spellf(harvesterCost); 
  }
  
  function wireDroneReboot(){
--- 1900,1909 ----
      unusedClips = unusedClips + harvesterBill;
      harvesterBill = 0;
      updateDronePrices();
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);  
!     document.getElementById('harvesterLevelDisplay').innerHTML = harvesterLevel;
!     harvesterCost = 2000000;
!     document.getElementById('harvesterCostDisplay').innerHTML = numberCruncher(harvesterCost); 
  }
  
  function wireDroneReboot(){
***************
*** 2620,2639 ****
      unusedClips = unusedClips + wireDroneBill;
      wireDroneBill = 0;
      updateDronePrices();
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);  
!     wireDroneLevelDisplayElement.innerHTML = wireDroneLevel;
!     wireDroneCost = 1000000;
!     wireDroneCostDisplayElement.innerHTML = spellf(wireDroneCost); 
  }
  
  function factoryReboot(){
      factoryLevel = 0;
      unusedClips = unusedClips + factoryBill;
      factoryBill = 0;
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);  
!     factoryLevelDisplayElement.innerHTML = factoryLevel;
      factoryCost = 100000000;
!     factoryCostDisplayElement.innerHTML = spellf(factoryCost);
  }
  
  // SWARM
--- 1911,1930 ----
      unusedClips = unusedClips + wireDroneBill;
      wireDroneBill = 0;
      updateDronePrices();
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);  
!     document.getElementById('wireDroneLevelDisplay').innerHTML = wireDroneLevel;
!     wireDroneCost = 2000000;
!     document.getElementById('wireDroneCostDisplay').innerHTML = numberCruncher(wireDroneCost); 
  }
  
  function factoryReboot(){
      factoryLevel = 0;
      unusedClips = unusedClips + factoryBill;
      factoryBill = 0;
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);  
!     document.getElementById('factoryLevelDisplay').innerHTML = factoryLevel;
      factoryCost = 100000000;
!     document.getElementById('factoryCostDisplay').innerHTML = numberCruncher(factoryCost);
  }
  
  // SWARM
***************
*** 2643,2666 ****
  
  function updateSwarm(){
      
-     if (isNaN(parseFloat(swarmGifts))||swarmGifts<0) {
-         swarmGifts = 0;
-     }
-     
      
      if (swarmFlag == 1){
!         sliderPos = sliderElement.value;
          }
      
      
!     if (yomi<synchCost){btnSynchSwarmElement.disabled = true;
              } else {
!             btnSynchSwarmElement.disabled = false;    
              } 
      
!     if (creativity<entertainCost){btnEntertainSwarmElement.disabled = true;
              } else {
!             btnEntertainSwarmElement.disabled = false;    
              } 
      
      if (availableMatter == 0 && (harvesterLevel + wireDroneLevel)>=1) {
--- 1934,1953 ----
  
  function updateSwarm(){
      
      
      if (swarmFlag == 1){
!         sliderPos = document.getElementById("slider").value;
          }
      
      
!     if (yomi<synchCost){document.getElementById("btnSynchSwarm").disabled = true;
              } else {
!             document.getElementById("btnSynchSwarm").disabled = false;    
              } 
      
!     if (creativity<entertainCost){document.getElementById("btnEntertainSwarm").disabled = true;
              } else {
!             document.getElementById("btnEntertainSwarm").disabled = false;    
              } 
      
      if (availableMatter == 0 && (harvesterLevel + wireDroneLevel)>=1) {
***************
*** 2701,2714 ****
      
      var d = Math.floor(harvesterLevel + wireDroneLevel);
  
!     swarmSizeElement.innerHTML = spellf(d);
!     swarmGiftsElement.innerHTML = formatWithCommas(swarmGifts, 0);
      
      if (giftCountdown <= 0) {
          nextGift = Math.round((Math.log10(d))*sliderPos/100);
          if (nextGift <= 0){nextGift = 1;}
          swarmGifts = swarmGifts + nextGift;
!         swarmGiftsElement.innerHTML = formatWithCommas(swarmGifts, 0);
          if (milestoneFlag<15){
              displayMessage("The swarm has generated a gift of "+nextGift+" additional computational capacity");
              }
--- 1988,2001 ----
      
      var d = Math.floor(harvesterLevel + wireDroneLevel);
  
!     document.getElementById("swarmSize").innerHTML = numberCruncher(d);
!     document.getElementById("swarmGifts").innerHTML = numberCruncher(swarmGifts);
      
      if (giftCountdown <= 0) {
          nextGift = Math.round((Math.log10(d))*sliderPos/100);
          if (nextGift <= 0){nextGift = 1;}
          swarmGifts = swarmGifts + nextGift;
!         document.getElementById("swarmGifts").innerHTML = numberCruncher(swarmGifts);
          if (milestoneFlag<15){
              displayMessage("The swarm has generated a gift of "+nextGift+" additional computational capacity");
              }
***************
*** 2764,2837 ****
          giftBits = giftBits + giftBitGenerationRate;
          giftCountdown = (giftPeriod - giftBits) / giftBitGenerationRate;
  
!         swarmStatusElement.innerHTML="Active";
!         giftCountdownElement.innerHTML= timeCruncher(giftCountdown);
!         giftTimerElement.style.display=""; 
          } else {
!         giftTimerElement.style.display="none";    
          }
      
      if (swarmStatus == 1){
!         swarmStatusElement.innerHTML="Hungry";
!         feedButtonDivElement.style.display="";
          } else {
!         feedButtonDivElement.style.display="none";    
          }
      
       if (swarmStatus == 2){
!         swarmStatusElement.innerHTML="Confused";
!         teachButtonDivElement.style.display="";
          } else {
!         teachButtonDivElement.style.display="none";    
          } 
      
       if (swarmStatus == 3){
!         swarmEntertainCostElement.innerHTML = formatWithCommas(entertainCost); 
!         swarmStatusElement.innerHTML="Bored";
!         entertainButtonDivElement.style.display="";
          } else {
!         entertainButtonDivElement.style.display="none";    
          } 
      
       if (swarmStatus == 4){
!         swarmStatusElement.innerHTML="Cold";
!         cladButtonDivElement.style.display="";
          } else {
!         cladButtonDivElement.style.display="none";    
          }  
      
       if (swarmStatus == 5){
!         swarmStatusElement.innerHTML="Disorganized";
!         synchButtonDivElement.style.display="";
          } else {
!         synchButtonDivElement.style.display="none";    
          }     
      
         if (swarmStatus == 6){
!         swarmStatusElement.innerHTML="Sleeping";
          } 
      
         if (swarmStatus == 7){
!         swarmStatusDivElement.style.display="none";
          } else {
!         swarmStatusDivElement.style.display="";    
          }    
      
          if (swarmStatus == 8){
!         swarmStatusElement.innerHTML="Lonely";
          }   
      
          if (swarmStatus == 9){
!         swarmStatusElement.innerHTML="NO RESPONSE...";
          }  
      
! 
      
  }
  
  function synchSwarm(){
          yomi = yomi - synchCost;
!         yomiDisplayElement.innerHTML = formatWithCommas(yomi);
          disorgFlag = 0;
          disorgCounter = 0;
          disorgMsg = 0;
--- 2051,2130 ----
          giftBits = giftBits + giftBitGenerationRate;
          giftCountdown = (giftPeriod - giftBits) / giftBitGenerationRate;
  
!         document.getElementById("swarmStatus").innerHTML="Active";
!         document.getElementById("giftCountdown").innerHTML= timeCruncher(giftCountdown);
!         document.getElementById("giftTimer").style.display=""; 
          } else {
!         document.getElementById("giftTimer").style.display="none";    
          }
      
      if (swarmStatus == 1){
!         document.getElementById("swarmStatus").innerHTML="Hungry";
!         document.getElementById("feedButtonDiv").style.display="";
          } else {
!         document.getElementById("feedButtonDiv").style.display="none";    
          }
      
       if (swarmStatus == 2){
!         document.getElementById("swarmStatus").innerHTML="Confused";
!         document.getElementById("teachButtonDiv").style.display="";
          } else {
!         document.getElementById("teachButtonDiv").style.display="none";    
          } 
      
       if (swarmStatus == 3){
!         document.getElementById("swarmEntertainCost").innerHTML=entertainCost.toLocaleString(); 
!         document.getElementById("swarmStatus").innerHTML="Bored";
!         document.getElementById("entertainButtonDiv").style.display="";
          } else {
!         document.getElementById("entertainButtonDiv").style.display="none";    
          } 
      
       if (swarmStatus == 4){
!         document.getElementById("swarmStatus").innerHTML="Cold";
!         document.getElementById("cladButtonDiv").style.display="";
          } else {
!         document.getElementById("cladButtonDiv").style.display="none";    
          }  
      
       if (swarmStatus == 5){
!         document.getElementById("swarmStatus").innerHTML="Disorganized";
!         document.getElementById("synchButtonDiv").style.display="";
          } else {
!         document.getElementById("synchButtonDiv").style.display="none";    
          }     
      
         if (swarmStatus == 6){
!         document.getElementById("swarmStatus").innerHTML="Sleeping";
          } 
      
         if (swarmStatus == 7){
!         document.getElementById("swarmStatusDiv").style.display="none";
          } else {
!         document.getElementById("swarmStatusDiv").style.display="";    
          }    
      
          if (swarmStatus == 8){
!         document.getElementById("swarmStatus").innerHTML="Lonely";
          }   
      
          if (swarmStatus == 9){
!         document.getElementById("swarmStatus").innerHTML="NO RESPONSE...";
          }  
      
!     if (swarmFlag == 0){        
!         document.getElementById("swarmEngine").style.display="none";
!         document.getElementById("swarmGiftDiv").style.display="none";
!         } else {
!         document.getElementById("swarmEngine").style.display="";
!         document.getElementById("swarmGiftDiv").style.display="";    
!         }
      
  }
  
  function synchSwarm(){
          yomi = yomi - synchCost;
!         document.getElementById("yomiDisplay").innerHTML = yomi.toLocaleString();
          disorgFlag = 0;
          disorgCounter = 0;
          disorgMsg = 0;
***************
*** 2890,2907 ****
  
  function makeFarm(amount){
      
!  for (x=0; x<amount; x++){
!     if (unusedClips >= farmCost){ 
!         unusedClips = unusedClips - farmCost;
!         farmBill = farmBill + farmCost;
!         farmLevel++; 
!         farmCost = Math.pow(farmLevel+1,2.78)*100000000; 
!         }    
      }
       
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips); 
!     farmLevelElement.innerHTML = formatWithCommas(farmLevel);
!     farmCostElement.innerHTML = spellf(farmCost); 
      
      updatePowPrices();
      
--- 2183,2198 ----
  
  function makeFarm(amount){
      
!  for (x=0; x<amount; x++){    
!     unusedClips = unusedClips - farmCost;
!     farmBill = farmBill + farmCost;
!     farmLevel++; 
!     farmCost = Math.pow(farmLevel+1,2.78)*100000000;  
      }
       
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips); 
!     document.getElementById('farmLevel').innerHTML = farmLevel.toLocaleString();
!     document.getElementById('farmCost').innerHTML = numberCruncher(farmCost); 
      
      updatePowPrices();
      
***************
*** 2912,2937 ****
      unusedClips = unusedClips + farmBill;
      farmBill = 0;
      updatePowPrices();
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);  
!     farmLevelElement.innerHTML = formatWithCommas(farmLevel);
      farmCost = 10000000;
!     farmCostElement.innerHTML = spellf(farmCost);
  }
  
  function makeBattery(amount){
      
!  for (x=0; x<amount; x++){  
!     if (unusedClips >= batteryCost){ 
!         unusedClips = unusedClips - batteryCost;
!         batteryBill = batteryBill + batteryCost;
!         batteryLevel++; 
!         batteryCost = Math.pow(batteryLevel+1,2.54)*10000000; 
!         }    
      }
       
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips); 
!     batteryLevelElement.innerHTML = formatWithCommas(batteryLevel);
!     batteryCostElement.innerHTML = spellf(batteryCost); 
      
      updatePowPrices();
      
--- 2203,2226 ----
      unusedClips = unusedClips + farmBill;
      farmBill = 0;
      updatePowPrices();
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);  
!     document.getElementById('farmLevel').innerHTML = farmLevel.toLocaleString();
      farmCost = 10000000;
!     document.getElementById('farmCost').innerHTML = numberCruncher(farmCost);
  }
  
  function makeBattery(amount){
      
!  for (x=0; x<amount; x++){    
!     unusedClips = unusedClips - batteryCost;
!     batteryBill = batteryBill + batteryCost;
!     batteryLevel++; 
!     batteryCost = Math.pow(batteryLevel+1,2.54)*10000000;  
      }
       
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips); 
!     document.getElementById('batteryLevel').innerHTML = batteryLevel.toLocaleString();
!     document.getElementById('batteryCost').innerHTML = numberCruncher(batteryCost); 
      
      updatePowPrices();
      
***************
*** 2943,2957 ****
      batteryBill = 0;
      updatePowPrices();
      storedPower = 0;
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);  
!     batteryLevelElement.innerHTML = formatWithCommas(batteryLevel);
      batteryCost = 1000000;
!     batteryCostElement.innerHTML = spellf(batteryCost);
  }
  
  function updatePower(){
      
!     if (humanFlag==0 && spaceFlag == 0){
      
      var supply = farmLevel * farmRate/100;
      var dDemand = (harvesterLevel * dronePowerRate/100) + (wireDroneLevel * dronePowerRate/100);
--- 2232,2246 ----
      batteryBill = 0;
      updatePowPrices();
      storedPower = 0;
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);  
!     document.getElementById('batteryLevel').innerHTML = batteryLevel.toLocaleString();
      batteryCost = 1000000;
!     document.getElementById('batteryCost').innerHTML = numberCruncher(batteryCost);
  }
  
  function updatePower(){
      
!     if (spaceFlag == 0){
      
      var supply = farmLevel * farmRate/100;
      var dDemand = (harvesterLevel * dronePowerRate/100) + (wireDroneLevel * dronePowerRate/100);
***************
*** 2974,2980 ****
          if (powMod<1){powMod = 1;}
          
          if (momentum == 1) {
!             powMod = powMod + .0005;
              }
          
          
--- 2263,2269 ----
          if (powMod<1){powMod = 1;}
          
          if (momentum == 1) {
!             powMod = powMod + .0001;
              }
          
          
***************
*** 2984,2990 ****
              if (storedPower >= xsDemand){
                  
                  if (momentum == 1) {
!                 powMod = powMod + .0005;
                  }
                  
                  storedPower = storedPower - xsDemand;
--- 2273,2279 ----
              if (storedPower >= xsDemand){
                  
                  if (momentum == 1) {
!                 powMod = powMod + .0001;
                  }
                  
                  storedPower = storedPower - xsDemand;
***************
*** 2999,3059 ****
          }
      }
      
!         powerProductionRateElement.innerHTML = formatWithCommas(Math.round(supply*100));
!         powerConsumptionRateElement.innerHTML = formatWithCommas(Math.round(demand * 100));
!         storedPowerElement.innerHTML = formatWithCommas(Math.round(storedPower));
!         facPowConRateElement.innerHTML = formatWithCommas(Math.round(fDemand*100));
!         dronePowConRateElement.innerHTML = formatWithCommas(Math.round(dDemand*100));
!         maxStorageElement.innerHTML = formatWithCommas(Math.round(cap));
          
          
      if (factoryLevel == 0 && harvesterLevel == 0 && wireDroneLevel == 0){
!         performanceElement.innerHTML = 0;
          } else {   
!         performanceElement.innerHTML = formatWithCommas(Math.round(powMod*100));  
          }    
          
!     if (unusedClips<farmCost){btnMakeFarmElement.disabled = true;
              } else {
!             btnMakeFarmElement.disabled = false;    
              } 
      
!     if (unusedClips<batteryCost){btnMakeBatteryElement.disabled = true;
              } else {
!             btnMakeBatteryElement.disabled = false;    
              } 
      
!     if (farmLevel<1){btnFarmRebootElement.disabled = true;
              } else {
!             btnFarmRebootElement.disabled = false;    
              } 
      
!     if (batteryLevel<1){btnBatteryRebootElement.disabled = true;
              } else {
!             btnBatteryRebootElement.disabled = false; 
              } 
      
!     if (unusedClips<p10f){btnFarmx10Element.disabled = true;
              } else {
!             btnFarmx10Element.disabled = false;    
              }        
          
!     if (unusedClips<p100f){btnFarmx100Element.disabled = true;
              } else {
!             btnFarmx100Element.disabled = false;    
              }
      
!     if (unusedClips<p10b){btnBatteryx10Element.disabled = true;
              } else {
!             btnBatteryx10Element.disabled = false;
              }          
          
!     if (unusedClips<p100b){btnBatteryx100Element.disabled = true;
              } else {
!             btnBatteryx100Element.disabled = false;
              }      
  
      }    
      
  }
      
--- 2288,2357 ----
          }
      }
      
!     document.getElementById("powerProductionRate").innerHTML = Math.round(supply*100).toLocaleString();
!     document.getElementById("powerConsumptionRate").innerHTML = Math.round(demand*100).toLocaleString();
!     document.getElementById("storedPower").innerHTML = Math.round(storedPower).toLocaleString();
!     document.getElementById("facPowConRate").innerHTML = Math.round(fDemand*100).toLocaleString();
!     document.getElementById("dronePowConRate").innerHTML = Math.round(dDemand*100).toLocaleString();
!     document.getElementById("maxStorage").innerHTML = Math.round(cap).toLocaleString();
          
          
      if (factoryLevel == 0 && harvesterLevel == 0 && wireDroneLevel == 0){
!         document.getElementById("performance").innerHTML = 0;
          } else {   
!         document.getElementById("performance").innerHTML = Math.round(powMod*100).toLocaleString();  
          }    
          
!     if (unusedClips<farmCost){document.getElementById("btnMakeFarm").disabled = true;
              } else {
!             document.getElementById("btnMakeFarm").disabled = false;    
              } 
      
!     if (unusedClips<batteryCost){document.getElementById("btnMakeBattery").disabled = true;
              } else {
!             document.getElementById("btnMakeBattery").disabled = false;    
              } 
      
!     if (farmLevel<1){document.getElementById("btnFarmReboot").disabled = true;
              } else {
!             document.getElementById("btnFarmReboot").disabled = false;    
              } 
      
!     if (batteryLevel<1){document.getElementById("btnBatteryReboot").disabled = true;
              } else {
!             document.getElementById("btnBatteryReboot").disabled = false; 
              } 
      
!     if (unusedClips<p10f){document.getElementById("btnFarmx10").disabled = true;
              } else {
!             document.getElementById("btnFarmx10").disabled = false;    
              }        
          
!     if (unusedClips<p100f){document.getElementById("btnFarmx100").disabled = true;
              } else {
!             document.getElementById("btnFarmx100").disabled = false;    
              }
      
!     if (unusedClips<p10b){document.getElementById("btnBatteryx10").disabled = true;
              } else {
!             document.getElementById("btnBatteryx10").disabled = false;
              }          
          
!     if (unusedClips<p100b){document.getElementById("btnBatteryx100").disabled = true;
              } else {
!             document.getElementById("btnBatteryx100").disabled = false;
              }      
  
      }    
+      
+     
+     
+     
+     if (project127.flag == 1 && spaceFlag == 0){        
+             document.getElementById("powerDiv").style.display="";
+             } else {
+             document.getElementById("powerDiv").style.display="none";      
+             }  
      
  }
      
***************
*** 3064,3175 ****
          marketingLvl = marketingLvl +1;             
          funds = funds - adCost; 
          adCost = Math.floor(adCost * 2);
!         adCostElement.innerHTML = formatWithCommas(adCost, 2);
!         fundsElement.innerHTML = formatWithCommas(funds, 2);
!         marketingLvlElement.innerHTML = marketingLvl;
      }
  }
  
! function sellClips(clipsDemanded){
      if (unsoldClips > 0) {
!         if (clipsDemanded > unsoldClips){
          transaction = (Math.floor((unsoldClips * margin)*1000))/1000;   
!         funds = funds + transaction;
          income = income + transaction;    
          clipsSold = clipsSold + unsoldClips;    
          unsoldClips = 0;
          } else {
!         transaction = (Math.floor((clipsDemanded * margin)*1000))/1000;    
          funds = (Math.floor((funds + transaction)*100))/100;
          income = income + transaction;      
!         clipsSold = clipsSold + clipsDemanded;    
!         unsoldClips = unsoldClips - clipsDemanded;       
          }
      } 
  }
  
  function raisePrice(){
      margin = (Math.round((margin + .01)*100))/100;  
!     demandElement.innerHTML = demand.toFixed(2);
!     marginElement.innerHTML = margin.toFixed(2);  
  }
  
  function lowerPrice(){
      if (margin >= .01){
      margin = (Math.round((margin - .01)*100))/100;
!     demandElement.innerHTML = demand.toFixed(2);
!     marginElement.innerHTML = margin.toFixed(2);
      }    
  }
  
  function updateStats(){
      
!     if (wire === 1){
!         inchSpanElement.innerHTML = "inch";
      } else {
!         inchSpan.innerHTML = "inches";
      }
      
      
      if (milestoneFlag < 15){
!         clipsElement.innerHTML = formatWithCommas(Math.ceil(clips), 0);
          }
      
!     if (milestoneFlag === 15 && dismantle ==0){
!         clipsElement.innerHTML = "29,999,999,999,999,900,000,000,000,000,000,000,000,000,000,000,000,000,000";
!         clipCountCrunchedElement.innerHTML = "29.9 septendecillion"
          }
      
!     if (dismantle === 1){
!         clipsElement.innerHTML = "29,999,999,999,999,999,999,999,999,999,999,999,999,000,000,000,000,000,000";
!         clipCountCrunchedElement.innerHTML = "29.9 septendecillion"
          }
      
!     if (dismantle === 2){
!         clipsElement.innerHTML = "29,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,000,000,000";
!         clipCountCrunchedElement.innerHTML = "29.9 septendecillion"
          }
      
!     if (dismantle === 3){
!         clipsElement.innerHTML = "29,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,900";
!         clipCountCrunchedElement.innerHTML = "29.9 septendecillion"
          }
      
      if (dismantle >=4){
          
      if (finalClips<10){
!         clipsElement.innerHTML = "29,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,"+"90"+finalClips;
!         clipCountCrunchedElement.innerHTML = "29.9 septendecillion"
          } else if (finalClips>9 && finalClips<100) {
!         clipsElement.innerHTML = "29,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,"+"9"+finalClips;
!         clipCountCrunchedElement.innerHTML = "29.9 septendecillion"
!         } else if (finalClips===100) {
!         clipsElement.innerHTML = "30,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000";
!         clipCountCrunchedElement.innerHTML = "30.0 septendecillion"
          }
      
      }
      
!     clipmakerRateElement.innerHTML = formatWithCommas(Math.round(clipRate));
!     if (humanFlag===1){
!         clipmakerRate2Element.innerHTML = formatWithCommas(clipRate);
      } else { 
!     clipmakerRate2Element.innerHTML = spellf(clipRate);
      }      
!     nanoWireElement.innerHTML = spellf(wire);
!     fundsElement.innerHTML = formatWithCommas(funds, 2); 
!     unsoldClipsElement.innerHTML = formatWithCommas(unsoldClips,0);
!     
!     demandElement.innerHTML = formatWithCommas(demand*10,0);
!     operationsElement.innerHTML = formatWithCommas(operations);
!     trustElement.innerHTML = formatWithCommas(trust);
!     nextTrustElement.innerHTML = formatWithCommas(Math.floor(nextTrust));
!     if(creativityOn){creativityElement.innerHTML = formatWithCommas(creativity)};
!     
!     factoryLevelDisplaySpaceElement.innerHTML = spellf(factoryLevel);
!     harvesterLevelSpaceElement.innerHTML = spellf(harvesterLevel);
!     wireDroneLevelSpaceElement.innerHTML = spellf(wireDroneLevel);
!     maxOpsElement.innerHTML = formatWithCommas((memory*1000));
                                                                              
      }
  
--- 2362,2465 ----
          marketingLvl = marketingLvl +1;             
          funds = funds - adCost; 
          adCost = Math.floor(adCost * 2);
!         document.getElementById('adCost').innerHTML = adCost.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2});
!         document.getElementById('funds').innerHTML = funds.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2});
!         document.getElementById('marketingLvl').innerHTML = marketingLvl;
      }
  }
  
! function sellClips(number){
      if (unsoldClips > 0) {
!         if (number > unsoldClips){
          transaction = (Math.floor((unsoldClips * margin)*1000))/1000;   
!         funds = (Math.floor((funds + transaction)*100))/100;
          income = income + transaction;    
          clipsSold = clipsSold + unsoldClips;    
          unsoldClips = 0;
          } else {
!         transaction = (Math.floor((number * margin)*1000))/1000;    
          funds = (Math.floor((funds + transaction)*100))/100;
          income = income + transaction;      
!         clipsSold = clipsSold + number;    
!         unsoldClips = unsoldClips - number;       
          }
      } 
  }
  
  function raisePrice(){
      margin = (Math.round((margin + .01)*100))/100;  
!     document.getElementById("demand").innerHTML = demand.toFixed(2);
!     document.getElementById("margin").innerHTML = margin.toFixed(2);  
  }
  
  function lowerPrice(){
      if (margin >= .01){
      margin = (Math.round((margin - .01)*100))/100;
!     document.getElementById("demand").innerHTML = demand.toFixed(2);
!     document.getElementById("margin").innerHTML = margin.toFixed(2);
      }    
  }
  
  function updateStats(){
      
!     if (wire == 1){
!         document.getElementById("inchSpan").innerHTML = "inch";
      } else {
!         document.getElementById("inchSpan").innerHTML = "inches";
      }
      
      
      if (milestoneFlag < 15){
!         document.getElementById("clips").innerHTML = Math.ceil(clips).toLocaleString();
          }
      
!     if (milestoneFlag == 15 && dismantle ==0){
!         document.getElementById("clips").innerHTML = "29,999,999,999,999,900,000,000,000,000,000,000,000,000,000,000,000,000,000";
          }
      
!     if (dismantle == 1){
!         document.getElementById("clips").innerHTML = "29,999,999,999,999,999,999,999,999,999,999,999,999,000,000,000,000,000,000";
          }
      
!     if (dismantle == 2){
!         document.getElementById("clips").innerHTML = "29,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,000,000,000";
          }
      
!     if (dismantle == 3){
!         document.getElementById("clips").innerHTML = "29,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,900";
          }
      
      if (dismantle >=4){
          
      if (finalClips<10){
!         document.getElementById("clips").innerHTML = "29,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,"+"90"+finalClips;
          } else if (finalClips>9 && finalClips<100) {
!         document.getElementById("clips").innerHTML = "29,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,"+"9"+finalClips;
!         } else if (finalClips==100) {
!         document.getElementById("clips").innerHTML = "30,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000";
          }
      
      }
      
!     document.getElementById('clipmakerRate').innerHTML = clipRate.toLocaleString();
!     if (humanFlag==1){
!     document.getElementById('clipmakerRate2').innerHTML = clipRate.toLocaleString();
      } else { 
!     document.getElementById('clipmakerRate2').innerHTML = numberCruncher(clipRate);
      }      
!     document.getElementById('nanoWire').innerHTML = numberCruncher(wire);
!     document.getElementById("funds").innerHTML = funds.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2}); 
!     document.getElementById("unsoldClips").innerHTML = Math.floor(unsoldClips).toLocaleString();
!     document.getElementById("demand").innerHTML = (demand*10).toLocaleString(undefined, {minimumFractionDigits: 0, maximumFractionDigits: 0});
!     document.getElementById("operations").innerHTML = Math.floor(operations).toLocaleString();
!     document.getElementById("trust").innerHTML = Math.floor(trust).toLocaleString();
!     document.getElementById("nextTrust").innerHTML = Math.floor(nextTrust).toLocaleString();
!     if(creativityOn){document.getElementById("creativity").innerHTML = Math.round(creativity).toLocaleString()};
!     
!     document.getElementById("factoryLevelDisplaySpace").innerHTML = numberCruncher(Math.floor(factoryLevel));
!     document.getElementById("harvesterLevelSpace").innerHTML = numberCruncher(Math.floor(harvesterLevel));
!     document.getElementById("wireDroneLevelSpace").innerHTML = numberCruncher(Math.floor(wireDroneLevel));
!     document.getElementById("maxOps").innerHTML = (memory*1000).toLocaleString();
                                                                              
      }
  
***************
*** 3181,3229 ****
  var incomeLastSecond;
  var sum;
  
- formatWithCommas = function(num, decimal) {
-     var hasDot = false;
-     var base = num.toString();
-     if (base.indexOf("e+") !== -1) {
-     var splittedExponentNum = base.split("e+"),
-         exponent = splittedExponentNum[1],
-         str = '';
-         if (base.indexOf(".") !== -1){
-         base = splittedExponentNum[0].split(".");
-         exponent -= base[1].length;
-         base = base.join("");
-         }
-     while (exponent--) {
-         str = str + '0';
-         }
-         base = base + str;
-     }
-     if (base.indexOf(".") !== -1)
-     {
-         hasDot = true;
-     }
-     if (decimal === 0)
-     {
-         if (base.length <= 3 && !hasDot) return base;
-     }
-     if (typeof (decimal) === "undefined")
-     {   
-         decimal = 0;
-     }
-     var leftNum = hasDot ? base.substr(0, base.indexOf(".")) : base;
-     if (decimal === 0) {
-         if (num <= 999) return leftNum; 
-         else return leftNum.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
-     } 
-     var dec = hasDot ? base.substr(base.indexOf("."), decimal + 1) : ".";
-     while (dec.length < decimal+1)
-         {
-          dec += "0";   
-         }
-         if (num <= 999) return leftNum + dec;
-         else return leftNum.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,") + dec;   
- }
- 
  function calculateRev(){
      
      incomeThen = incomeNow;
--- 2471,2476 ----
***************
*** 3257,3265 ****
          avgSales = avgRev/margin;
          } 
      
!     avgSalesElement.innerHTML = formatWithCommas(Math.round(avgSales));
      
!     avgRevElement.innerHTML = formatWithCommas(avgRev, 2); 
      
  }
  
--- 2504,2512 ----
          avgSales = avgRev/margin;
          } 
      
!     document.getElementById("avgSales").innerHTML = Math.round(avgSales).toLocaleString();
      
!     document.getElementById("avgRev").innerHTML = avgRev.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2}); 
      
  }
  
***************
*** 3301,3375 ****
      
  }
  
- function cheatPrestigeU(){
-     
-         prestigeU++;
-         var savePrestige = {
-         prestigeU: prestigeU,
-         prestigeS: prestigeS,
-         }
-         localStorage.setItem("savePrestige",JSON.stringify(savePrestige));
-     
- }
- 
- function cheatPrestigeS(){
-     
-         prestigeS++;
-         var savePrestige = {
-         prestigeU: prestigeU,
-         prestigeS: prestigeS,
-         }
-         localStorage.setItem("savePrestige",JSON.stringify(savePrestige));
-     
- }
- 
- function setB(){
-     battleNumbers[1] = 7;
- }
- 
- function cheatClips(){
-     clips = clips + 100000000;
-     unusedClips = unusedClips + 100000000;
-     displayMessage("you just cheated");
-     }
- 
- function cheatMoney(){
-     funds = funds + 10000000;
-     fundsElement.innerHTML = formatWithCommas(funds,2);
-     displayMessage("LIZA just cheated");
-     }
- 
- function cheatTrust(){
-     trust = trust+1;
-     displayMessage("Hilary is nice. Also, Liza just cheated");
-     }
- 
- function cheatOps(){
-     standardOps = standardOps + 10000;
-     displayMessage("you just cheated, Liza");
-     }
- 
- function cheatCreat(){
-     creativityOn = 1;
-     creativity = creativity + 1000;
-     displayMessage("Liza just cheated. Very creative!");
-     }
- 
- function cheatYomi(){
-     yomi = yomi + 1000000;
-     yomiDisplayElement.innerHTML = formatWithCommas(yomi);
-     displayMessage("you just cheated");
-     }
- 
- function cheatHypno(){
-     hypnoDroneEvent();
-     }
- 
- function zeroMatter(){
-     availableMatter = 0;
-     displayMessage("you just cheated");
-     }
-     
  
  function calculateTrust(){
      if (clips>(nextTrust-1)){
--- 2548,2553 ----
***************
*** 3383,3393 ****
  }
  
  function addProc(){
-     
-     if (trust>0 || swarmGifts>0){
          processors=processors+1;
          creativitySpeed = Math.log10(processors) * Math.pow(processors,1.1) + processors-1;    
!         processorsElement.innerHTML = processors;
          if (creativityOn == 1){
            displayMessage("Processor added, operations (or creativity) per sec increased")
          } else {displayMessage("Processor added, operations per sec increased")}
--- 2561,2569 ----
  }
  
  function addProc(){
          processors=processors+1;
          creativitySpeed = Math.log10(processors) * Math.pow(processors,1.1) + processors-1;    
!         document.getElementById("processors").innerHTML = processors;
          if (creativityOn == 1){
            displayMessage("Processor added, operations (or creativity) per sec increased")
          } else {displayMessage("Processor added, operations per sec increased")}
***************
*** 3395,3413 ****
          if (humanFlag == 0){
              swarmGifts = swarmGifts - 1;
          }
!     }
  }
  
  function addMem(){
-     
-     if (trust>0 || swarmGifts>0){
          displayMessage("Memory added, max operations increased");
          memory=memory+1;
!         memoryElement.innerHTML = memory;
          if (humanFlag == 0){
              swarmGifts = swarmGifts - 1;
          }
-     }
  }
  
  function calculateOperations(){
--- 2571,2587 ----
          if (humanFlag == 0){
              swarmGifts = swarmGifts - 1;
          }
!     
  }
  
  function addMem(){
          displayMessage("Memory added, max operations increased");
          memory=memory+1;
!         document.getElementById("memory").innerHTML = memory;
!     
          if (humanFlag == 0){
              swarmGifts = swarmGifts - 1;
          }
  }
  
  function calculateOperations(){
***************
*** 3623,3775 ****
  }
  
  
- var oneToTen = ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"],
-     elevenToNineteen = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'],
-     multipleOfTen = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'],
-     placeValue = ["", " thousand ", " million ", " billion ", " trillion ", " quadrillion ", " quintillion ", " sextillion ", " septillion ", " octillion ", " nonillion ", " decillion ", " undecillion ", " duodecillion ", " tredecillion ", " quattuordecillion ", " quindecillion ", " sexdecillion ", " septendecillion ", " octodecillion ", " novemdecillion  ", " vigintillion ", " unvigintillion ", " duovigintillion ", " trevigintillion ", " quattuorvigintillion ", " quinvigintillion ", " sexvigintillion ", " septenvigintillion ", " octovigintillion ", " novemvigintillion ", " trigintillion ", " untrigintillion ", " duotrigintillion ", " tretrigintillion ", " quattuortrigintillion ", " quintrigintillion ", " sextrigintillion ", " septentrigintillion ", " octotrigintillion ", " novemtrigintillion ", " quadragintillion ", " unquadragintillion ", " duoquadragintillion ", " trequadragintillion ", " quattuorquadragintillion ", " quinquadragintillion ", " sexquadragintillion ", " septenquadragintillion ", " octoquadragintillion ", " novemquadragintillion ", " quinquagintillion ", " unquinquagintillion ", " duoquinquagintillion ", " trequinquagintillion ", " quattuorquinquagintillion ", " quinquinquagintillion ", " sexquinquagintillion ", " septenquinquagintillion ", " octoquinquagintillion ", " novemquinquagintillion ", " sexagintillion ", " unsexagintillion ", " duosexagintillion ", " tresexagintillion ", " quattuorsexagintillion ", " quinsexagintillion ", " sexsexagintillion ", " septsexagintillion ", " octosexagintillion ", " octosexagintillion ", " septuagintillion ", " unseptuagintillion ", " duoseptuagintillion ", " treseptuagintillion ", " quinseptuagintillion"," sexseptuagintillion"," septseptuagintillion"," octoseptuagintillion"," novemseptuagintillion"," octogintillion"," unoctogintillion"," duooctogintillion"," treoctogintillion"," quattuoroctogintillion"," quinoctogintillion"," sexoctogintillion"," septoctogintillion"," octooctogintillion"," novemoctogintillion"," nonagintillion"," unnonagintillion"," duononagintillion", " trenonagintillion "," quattuornonagintillion "," quinnonagintillion "," sexnonagintillion "," septnonagintillion "," octononagintillion "," novemnonagintillion ", " centillion"];
- 
- function spellf(userInput) {
-     var numToWorkOn;
-     
- //        if (userInput === availableMatter)
- //        {
- //         console.log("_______");
- //         console.log(userInput);
- //        }
-     //create map for all unique names in numbering system
- 
- 
-     //To check if spell has been called as a function call :   spell(123)   window.spell(123)
-     
-     if (userInput < 0)
-     {
-         console.log("Error, value less than 0");
-         return userInput.toString() ;
-     }
-     
-     if (typeof(userInput) == "number" || typeof(userInput) == "string") {
-         numToWorkOn = "" + userInput;
-     }
-     
- 
-     //To check if spell has been called using a Number/String Object:   "123".spell()   123..spell() 
-     else if (typeof(this) == "object") {
-         numToWorkOn = this.toString();
-     }
- 
-      else {
-         throw new Error("Invalid Input");
-         return;
-     }
-     
-     if (numToWorkOn.indexOf("e+") !== -1) {
-     var splittedExponentNum = numToWorkOn.split("e+"),
-         exponent = splittedExponentNum[1],
-         str = '';
-         if (numToWorkOn.indexOf(".") !== -1){
-         numToWorkOn = splittedExponentNum[0].split(".");
-         exponent -= numToWorkOn[1].length;
-         numToWorkOn = numToWorkOn.join("");
-         }
-         else
-         {
-             numToWorkOn = splittedExponentNum[0];
-         }
-     while (exponent--) {
-         str = str + '0';
-         }
-         numToWorkOn = numToWorkOn + str;
-     }
-     else if (numToWorkOn.indexOf(".") !== -1)
-     {
-         var splittedDecimal = numToWorkOn.split(".");
-         var leftNum = splittedDecimal[0];
-         var rightNum = splittedDecimal[1];
-         numToWorkOn = leftNum;
-     }
- 
-     //Put limit check on the program, placevalue map should be increased to increase capacity
-     if (numToWorkOn.length >= 303) {
-         throw new Error("Number out of bonds!");
-         return;
-     } else {
-         return convertToString(numToWorkOn);
-     }
- 
-     //Recursie logic to break number into strings of length 3 each and recursively pronounce each
-     function convertToString(stringEquivalent) {
-         if (stringEquivalent == 0) {
-             return '0'
-         }
- 
-         var result = '',
-             unitLookup = 0,
-             strLength = stringEquivalent.length;
-         for (var k = strLength; k > 0; k = k - 3) {
-             
-              if (k -3 <= 0) 
-                  {
-                 var subStr = stringEquivalent.substring(k, k - 3);
-                 pronounce = pronounceNum(subStr);
-                  
-             if (pronounce.toUpperCase() != 'zero') {
-                 var num = Number(subStr + "." + stringEquivalent.substring(subStr.length, subStr.length + 2));
-                 result = formatWithCommas(num, 1) + placeValue[unitLookup] + ' , '+ result;
-             }
-                  }
-             unitLookup++;
-         }
-         //to trim of the extra ", " from last
-         return result.substring(0,result.length-3)
-     }
- 
-    //Determines the range of input and calls respective function
-     function pronounceNum(val) {
-         val = parseInt(val);
-         if (parseInt(val / 10) == 0) {
-             return numLessThan10(val);
-         } else if (parseInt(val / 100) == 0) {
-             return numLessThan99(val)
-         } else
-             return numLessThan1000(val);
-     }
- 
-     //Pronounces any number less than 1000
-     function numLessThan1000(val) {
-         val = Number(val);
-         var hundredPlace = parseInt(val / 100),
-             result;
-         if (val % 100 == 0) {
-             result = oneToTen[hundredPlace] + " hundred ";
-         } else {
-             result = oneToTen[hundredPlace] + " hundred " + numLessThan99(val % 100);
-         }
-         return result;
-     }
- 
-     //Pronounces any number less than 99
-     function numLessThan99(val) {
-         val = Number(val);
-         var tenthPlace = parseInt(val / 10),
-             result;
-         if (tenthPlace !== 1) {
-             val % 10 ? (result = multipleOfTen[tenthPlace] + " " + numLessThan10(val % 10)) : (result = multipleOfTen[tenthPlace]);
-             return result;
-         } else {
-             result = elevenToNineteen[val % 10];
-             return result;
-         }
-     }
- 
-     //Pronounces any number less than 10
-     function numLessThan10(val) {
-         val = Number(val);
-         return oneToTen[val];
-     };
- 
- }
- 
- 
  // PROBES
  
  var probeSpeed = 0;
--- 2797,2802 ----
***************
*** 3798,3961 ****
  var probeLaunchLevel = 0;
  var probeCost = Math.pow(10, 17);
  
! var probeTrustCost = Math.floor(Math.pow(probeTrust+1, 1.47)*500);
  
  //var probeCost = Math.pow((probeLaunchLevel+1), 1.44)*Math.pow(10, 24);
  
  function increaseProbeTrust(){
-     
-     if (yomi >= probeTrustCost && probeTrust < maxTrust){
      yomi = yomi - probeTrustCost;
!     yomiDisplayElement.innerHTML = formatWithCommas(yomi);
      probeTrust++;
!     probeTrustCost = Math.floor(Math.pow(probeTrust+1, 1.47)*500);
!     probeTrustDisplayElement.innerHTML = probeTrust;
!     probeTrustCostDisplayElement.innerHTML = formatWithCommas(Math.floor(probeTrustCost));
      displayMessage("WARNING: Risk of value drift increased");
-     }    
  }
  
  function increaseMaxTrust(){
!     if (honor >= maxTrustCost){
!     honor = honor - maxTrustCost; 
!     honorDisplayElement.innerHTML = formatWithCommas(Math.round(honor));
      maxTrust = maxTrust+10;
      // maxTrustCost = Math.floor(Math.pow(maxTrust, 1.17)*1000);
!     maxTrustDisplayElement.innerHTML = formatWithCommas(maxTrust);
      // document.getElementById('maxTrustCostDisplay').innerHTML = Math.floor(maxTrustCost).toLocaleString();
      displayMessage("Maximum trust increased, probe design space expanded");
-     }
  }
  
  function raiseProbeSpeed(){
-     if (probeUsedTrust < probeTrust){
      attackSpeed = attackSpeed + attackSpeedMod;
!     probeSpeed++; 
!     probeSpeedDisplayElement.innerHTML = probeSpeed;
!     }    
!     
  }
  
  function lowerProbeSpeed(){
-     if (probeSpeed > 0){
      attackSpeed = attackSpeed - attackSpeedMod;
      probeSpeed--;
!     probeSpeedDisplayElement.innerHTML = probeSpeed;
!     }    
  }
  
  function raiseProbeNav(){
!     if (probeUsedTrust < probeTrust){
!     probeNav++; 
!     probeNavDisplayElement.innerHTML = probeNav;
!     }
  }
  
  function lowerProbeNav(){
-     if (probeNav > 0){
      probeNav--;
!     probeNavDisplayElement.innerHTML = probeNav;
!     }    
  }
  
  function raiseProbeHaz(){
-     if (probeUsedTrust < probeTrust){
      probeHaz++;
!     probeHazDisplayElement.innerHTML = probeHaz;
!     }
  }
  
  function lowerProbeHaz(){
-     if (probeHaz > 0){
      probeHaz--;
!     probeHazDisplayElement.innerHTML = probeHaz;
!     }    
  }
  
  function raiseProbeRep(){
-     if (probeUsedTrust < probeTrust){
      probeRep++;
!     probeRepDisplayElement.innerHTML = probeRep;
!     }
  }
  
  function lowerProbeRep(){
-     if (probeRep > 0){
      probeRep--;
!     probeRepDisplayElement.innerHTML = probeRep;
!     }    
  }
  
  function raiseProbeFac(){
-     if (probeUsedTrust < probeTrust){
      probeFac++;
!     probeFacDisplayElement.innerHTML = probeFac;
!     }
  }
  
  function lowerProbeFac(){
-     if (probeFac > 0){
      probeFac--; 
!     probeFacDisplayElement.innerHTML = probeFac;
!     }    
  }
  
  function raiseProbeHarv(){
-     if (probeUsedTrust < probeTrust){
      probeHarv++;
!     probeHarvDisplayElement.innerHTML = probeHarv;
!     }
  }
  
  function lowerProbeHarv(){
-     if (probeHarv > 0){
      probeHarv--
!     probeHarvDisplayElement.innerHTML = probeHarv;
!     }    
  }
  
  function raiseProbeWire(){
-     if (probeUsedTrust < probeTrust){
      probeWire++;
!     probeWireDisplayElement.innerHTML = probeWire;
!     }
  }
  
  function lowerProbeWire(){
-     if (probeWire > 0){
      probeWire--;
!     probeWireDisplayElement.innerHTML = probeWire;
!     }    
  }
  
  function raiseProbeCombat(){
-     if (probeUsedTrust < probeTrust){
      probeCombat++;
!     probeCombatDisplayElement.innerHTML = probeCombat;
!     }
  }
  
  function lowerProbeCombat(){
-     if (probeCombat > 0){
      probeCombat--
!     probeCombatDisplayElement.innerHTML = probeCombat;
!     }    
  }
  
  
  function makeProbe(){
-     if (unusedClips > probeCost) {
      unusedClips = unusedClips - probeCost;
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);  
      probeLaunchLevel++;
!     probeCount++; 
!     probesLaunchedDisplayElement.innerHTML = formatWithCommas(probeLaunchLevel);
      
      // probeCost = Math.pow((probeLaunchLevel+1), 1.23)*Math.pow(10, 20);
      // probeCost = Math.pow(10, 20);
      
!     probeCostDisplayElement.innerHTML = spellf(probeCost); 
!     }    
  }
  
  function spawnProbes(){
--- 2825,2948 ----
  var probeLaunchLevel = 0;
  var probeCost = Math.pow(10, 17);
  
! var probeTrustCost = Math.floor(Math.pow(probeTrust+1, 1.47)*200);
  
  //var probeCost = Math.pow((probeLaunchLevel+1), 1.44)*Math.pow(10, 24);
  
  function increaseProbeTrust(){
      yomi = yomi - probeTrustCost;
!     document.getElementById('yomiDisplay').innerHTML = yomi.toLocaleString();
      probeTrust++;
!     probeTrustCost = Math.floor(Math.pow(probeTrust+1, 1.47)*200);
!     document.getElementById('probeTrustDisplay').innerHTML = probeTrust;
!     document.getElementById('probeTrustCostDisplay').innerHTML = Math.floor(probeTrustCost).toLocaleString();
      displayMessage("WARNING: Risk of value drift increased");
  }
  
  function increaseMaxTrust(){
!     honor = honor - maxTrustCost;
!     document.getElementById("honorDisplay").innerHTML = Math.round(honor).toLocaleString();
      maxTrust = maxTrust+10;
      // maxTrustCost = Math.floor(Math.pow(maxTrust, 1.17)*1000);
!     document.getElementById('maxTrustDisplay').innerHTML = maxTrust.toLocaleString();
      // document.getElementById('maxTrustCostDisplay').innerHTML = Math.floor(maxTrustCost).toLocaleString();
      displayMessage("Maximum trust increased, probe design space expanded");
  }
  
  function raiseProbeSpeed(){
      attackSpeed = attackSpeed + attackSpeedMod;
!     probeSpeed++;
!     document.getElementById('probeSpeedDisplay').innerHTML = probeSpeed;
  }
  
  function lowerProbeSpeed(){
      attackSpeed = attackSpeed - attackSpeedMod;
      probeSpeed--;
!     document.getElementById('probeSpeedDisplay').innerHTML = probeSpeed;
  }
  
  function raiseProbeNav(){
!     probeNav++;
!     document.getElementById('probeNavDisplay').innerHTML = probeNav;
  }
  
  function lowerProbeNav(){
      probeNav--;
!     document.getElementById('probeNavDisplay').innerHTML = probeNav;
  }
  
  function raiseProbeHaz(){
      probeHaz++;
!     document.getElementById('probeHazDisplay').innerHTML = probeHaz;
  }
  
  function lowerProbeHaz(){
      probeHaz--;
!     document.getElementById('probeHazDisplay').innerHTML = probeHaz;
  }
  
  function raiseProbeRep(){
      probeRep++;
!     document.getElementById('probeRepDisplay').innerHTML = probeRep;
  }
  
  function lowerProbeRep(){
      probeRep--;
!     document.getElementById('probeRepDisplay').innerHTML = probeRep;
  }
  
  function raiseProbeFac(){
      probeFac++;
!     document.getElementById('probeFacDisplay').innerHTML = probeFac;
  }
  
  function lowerProbeFac(){
      probeFac--; 
!     document.getElementById('probeFacDisplay').innerHTML = probeFac;
  }
  
  function raiseProbeHarv(){
      probeHarv++;
!     document.getElementById('probeHarvDisplay').innerHTML = probeHarv;
  }
  
  function lowerProbeHarv(){
      probeHarv--
!     document.getElementById('probeHarvDisplay').innerHTML = probeHarv;
  }
  
  function raiseProbeWire(){
      probeWire++;
!     document.getElementById('probeWireDisplay').innerHTML = probeWire;
  }
  
  function lowerProbeWire(){
      probeWire--;
!     document.getElementById('probeWireDisplay').innerHTML = probeWire;
  }
  
  function raiseProbeCombat(){
      probeCombat++;
!     document.getElementById('probeCombatDisplay').innerHTML = probeCombat;
  }
  
  function lowerProbeCombat(){
      probeCombat--
!     document.getElementById('probeCombatDisplay').innerHTML = probeCombat;
  }
  
  
  function makeProbe(){
      unusedClips = unusedClips - probeCost;
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);  
      probeLaunchLevel++;
!     probeCount++;
!     document.getElementById('probesLaunchedDisplay').innerHTML = numberCruncher(probeLaunchLevel);
      
      // probeCost = Math.pow((probeLaunchLevel+1), 1.23)*Math.pow(10, 20);
      // probeCost = Math.pow(10, 20);
      
!     document.getElementById('probeCostDisplay').innerHTML = numberCruncher(probeCost); 
  }
  
  function spawnProbes(){
***************
*** 3981,4005 ****
      }
      
      unusedClips = unusedClips - (nextGen*probeCost);
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);  
      
      probeDescendents = probeDescendents + nextGen;
!     probeCount = probeCount + nextGen; 
!     probesBornDisplayElement.innerHTML = spellf(probeDescendents);
!     probesTotalDisplayElement.innerHTML = spellf(probeCount);
  }   
  
! function exploreUniverse(){ 
!     availableMatterDisplayElement.innerHTML = spellf(availableMatter);
      var xRate = Math.floor(probeCount) * probeXBaseRate * probeSpeed * probeNav;
      if (xRate > totalMatter - foundMatter) {xRate = totalMatter - foundMatter;}
          foundMatter = foundMatter + xRate;
          availableMatter = availableMatter + xRate;
! 
!     var newRate = xRate * 100; 
!         mdpsElement.innerHTML = spellf(xRate*100);
!         availableMatterDisplayElement.innerHTML = spellf(availableMatter);
!         colonizedDisplayElement.innerHTML = (100/(totalMatter/foundMatter)).toFixed(12);
  }  
  
  function encounterHazards(){
--- 2968,2991 ----
      }
      
      unusedClips = unusedClips - (nextGen*probeCost);
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);  
      
      probeDescendents = probeDescendents + nextGen;
!     probeCount = probeCount + nextGen;
!     document.getElementById('probesBornDisplay').innerHTML = numberCruncher(probeDescendents);
!     document.getElementById('probesTotalDisplay').innerHTML = numberCruncher(probeCount);
  }   
  
! function exploreUniverse(){
!     document.getElementById('availableMatterDisplay').innerHTML = numberCruncher(availableMatter);
      var xRate = Math.floor(probeCount) * probeXBaseRate * probeSpeed * probeNav;
      if (xRate > totalMatter - foundMatter) {xRate = totalMatter - foundMatter;}
          foundMatter = foundMatter + xRate;
          availableMatter = availableMatter + xRate;
!     
!         document.getElementById('mdps').innerHTML = numberCruncher(xRate*100);
!         document.getElementById('availableMatterDisplay').innerHTML = numberCruncher(availableMatter);
!         document.getElementById('colonizedDisplay').innerHTML = (100/(totalMatter/foundMatter)).toFixed(12);
  }  
  
  function encounterHazards(){
***************
*** 4016,4031 ****
              probeCount = probeCount - amount;
              if (probeCount<0) {probeCount=0;}
              probesLostHaz = probesLostHaz + amount;
!             probesLostHazardsDisplayElement.innerHTML = spellf(probesLostHaz);
!             probesTotalDisplayElement.innerHTML = spellf(probeCount);
              }
          } else {
      if (amount > probeCount) {amount = probeCount;}        
      probeCount = probeCount - amount;
      if (probeCount<0) {probeCount=0;}        
      probesLostHaz = probesLostHaz + amount;
!     probesLostHazardsDisplayElement.innerHTML = spellf(probesLostHaz);
!     probesTotalDisplayElement.innerHTML = spellf(probeCount);
      }        
  }  
  
--- 3002,3017 ----
              probeCount = probeCount - amount;
              if (probeCount<0) {probeCount=0;}
              probesLostHaz = probesLostHaz + amount;
!             document.getElementById('probesLostHazardsDisplay').innerHTML = numberCruncher(probesLostHaz);
!             document.getElementById('probesTotalDisplay').innerHTML = numberCruncher(probeCount);
              }
          } else {
      if (amount > probeCount) {amount = probeCount;}        
      probeCount = probeCount - amount;
      if (probeCount<0) {probeCount=0;}        
      probesLostHaz = probesLostHaz + amount;
!     document.getElementById('probesLostHazardsDisplay').innerHTML = numberCruncher(probesLostHaz);
!     document.getElementById('probesTotalDisplay').innerHTML = numberCruncher(probeCount);
      }        
  }  
  
***************
*** 4037,4045 ****
          amount = Math.floor(unusedClips/100000000);
          }
      unusedClips = unusedClips - (amount*100000000);
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);  
!     factoryLevel = factoryLevel + amount; factoryLevelDisplayElement
!     factoryLevelDisplayElement.innerHTML = spellf(factoryLevel);  
  }
  
  function spawnHarvesters(){
--- 3023,3031 ----
          amount = Math.floor(unusedClips/100000000);
          }
      unusedClips = unusedClips - (amount*100000000);
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);  
!     factoryLevel = factoryLevel + amount; 
!     document.getElementById('factoryLevelDisplay').innerHTML = numberCruncher(factoryLevel);  
  }
  
  function spawnHarvesters(){
***************
*** 4050,4058 ****
          amount = Math.floor(unusedClips/2000000);
          }
      unusedClips = unusedClips - (amount*2000000);
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);  
      harvesterLevel = harvesterLevel + amount;
!     harvesterLevelDisplayElement.innerHTML = spellf(harvesterLevel);  
  }
  
  function spawnWireDrones(){
--- 3036,3044 ----
          amount = Math.floor(unusedClips/2000000);
          }
      unusedClips = unusedClips - (amount*2000000);
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);  
      harvesterLevel = harvesterLevel + amount;
!     document.getElementById('harvesterLevelDisplay').innerHTML = numberCruncher(harvesterLevel);  
  }
  
  function spawnWireDrones(){
***************
*** 4063,4071 ****
          amount = Math.floor(unusedClips/2000000);
          }
      unusedClips = unusedClips - (amount*2000000);
!     unusedClipsDisplayElement.innerHTML = spellf(unusedClips);
      wireDroneLevel = wireDroneLevel + amount;
!     wireDroneLevelDisplayElement.innerHTML = spellf(wireDroneLevel);  
  }
  
  function drift(){
--- 3049,3057 ----
          amount = Math.floor(unusedClips/2000000);
          }
      unusedClips = unusedClips - (amount*2000000);
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);
      wireDroneLevel = wireDroneLevel + amount;
!     document.getElementById('wireDroneLevelDisplay').innerHTML = numberCruncher(wireDroneLevel);  
  }
  
  function drift(){
***************
*** 4078,4086 ****
      drifterCount = drifterCount + amount;
      probesLostDrift = probesLostDrift + amount;
  
!     probesLostDriftDisplayElement.innerHTML = spellf(probesLostDrift);
!     probesTotalDisplayElement.innerHTML = spellf(probeCount);
!     drifterCountElement.innerHTML = spellf(drifterCount);
      
  }
  
--- 3064,3072 ----
      drifterCount = drifterCount + amount;
      probesLostDrift = probesLostDrift + amount;
  
!     document.getElementById('probesLostDriftDisplay').innerHTML = numberCruncher(probesLostDrift);
!     document.getElementById('probesTotalDisplay').innerHTML = numberCruncher(probeCount);
!     document.getElementById('drifterCount').innerHTML = numberCruncher(drifterCount);
      
  }
  
***************
*** 4123,4137 ****
          availableMatter = availableMatter-mtr;
          
          
!         acquiredMatter = acquiredMatter+mtr; 
!         availableMatterDisplayElement.innerHTML = spellf(availableMatter);
!         acquiredMatterDisplayElement.innerHTML = spellf(acquiredMatter);
          
!         mapsElement.innerHTML = spellf(mtr*100);
          
          } else {
          
!         mapsElement.innerHTML = 0;    
              
          }
      
--- 3109,3123 ----
          availableMatter = availableMatter-mtr;
          
          
!         acquiredMatter = acquiredMatter+mtr;
!         document.getElementById('availableMatterDisplay').innerHTML = numberCruncher(availableMatter);
!         document.getElementById('acquiredMatterDisplay').innerHTML = numberCruncher(acquiredMatter);
          
!         document.getElementById('maps').innerHTML = numberCruncher(mtr*100);
          
          } else {
          
!         document.getElementById('maps').innerHTML = 0;    
              
          }
      
***************
*** 4154,4167 ****
          
          acquiredMatter = acquiredMatter-a;
          wire = wire+a;
!         acquiredMatterDisplayElement.innerHTML = spellf(acquiredMatter); 
!         nanoWireElement.innerHTML = spellf(wire);
          
!         wppsElement.innerHTML = spellf(a*100);
          
          } else {
              
!         wppsElement.innerHTML = 0;    
              
          }
      
--- 3140,3153 ----
          
          acquiredMatter = acquiredMatter-a;
          wire = wire+a;
!         document.getElementById('acquiredMatterDisplay').innerHTML = numberCruncher(acquiredMatter);
!         document.getElementById('nanoWire').innerHTML = numberCruncher(wire);
          
!         document.getElementById('wpps').innerHTML = numberCruncher(a*100);
          
          } else {
              
!         document.getElementById('wpps').innerHTML = 0;    
              
          }
      
***************
*** 4226,4244 ****
  
  // Stock Report
      
-     
-     if (investmentEngineFlag==1){
      stockReportCounter++;
!     if (stockReportCounter>=10000){
!         var r = formatWithCommas(ledger+portTotal);
          displayMessage("Lifetime investment revenue report: $"+r);
          stockReportCounter = 0;
-         }
      }
      
  // WireBuyer
      
!     if (humanFlag == 1 && wireBuyerFlag==1 && wireBuyerStatus==1 && wire<=1){
          buyWire();
      }   
      
--- 3210,3225 ----
  
  // Stock Report
      
      stockReportCounter++;
!     if (investmentEngineFlag==1 && stockReportCounter>=10000){
!         var r = (ledger+portTotal).toLocaleString();
          displayMessage("Lifetime investment revenue report: $"+r);
          stockReportCounter = 0;
      }
      
  // WireBuyer
      
!     if (wireBuyerFlag==1 && wireBuyerStatus==1 && wire<=1){
          buyWire();
      }   
      
***************
*** 4246,4255 ****
      
  // First, Explore
      
-     
- if (probeCount >= 1){    
  exploreUniverse();     
- }
      
  // Then, Drones
      
--- 3227,3233 ----
***************
*** 4258,4272 ****
      }   
  
  
- if (humanFlag == 0){    
-     
  updatePower();
  updateSwarm();
  acquireMatter();   
  processMatter();
-   
- }    
-     
      
  // Then Factories    
    
--- 3236,3245 ----
***************
*** 4326,4447 ****
      
      if (dismantle >= 1){
      
!     probeDesignDivElement.style.display="none";
      if (endTimer1>=50) { 
!         increaseProbeTrustDivElement.style.display="none"; 
!         } 
      
      if (endTimer1>=100) { 
!         increaseMaxTrustDivElement.style.display="none"; 
          }
      
      if (endTimer1>=150) { 
!         spaceDivElement.style.display="none";
          }
  
      
!     if (endTimer1>=175) {      
!         battleCanvasDivElement.style.display="none";
          }
          
      if (endTimer1>=190) {     
!         honorDivElement.style.display="none";
          }
      
      }   
      
  if (dismantle >= 2){
      
!     wireProductionDivElement.style.display="none";
!     wireTransDivElement.style.display="";
      
      if (endTimer2 >= 50) {
!     swarmGiftDivElement.style.display="none"; 
          }
      
!     if (endTimer2 >= 100) { 
!     swarmEngineElement.style.display="none"; 
          }
      
!     if (endTimer2 >= 150) { 
!     swarmSliderDivElement.style.display="none";
          }
      
      } 
      
! if (dismantle >= 3) { 
!     factoryDivSpaceElement.style.display="none";
!     clipsPerSecDivElement.style.display="none";
!     tothDivElement.style.display="none";     
      
  }      
      
  if (dismantle >= 4) {
!    strategyEngineElement.style.display="none"; 
!    tournamentManagementElement.style.display="none"; 
  }    
      
  if (dismantle >= 5) {
      
!     btnQcomputeElement.style.display="none";
      
     for (var i = 0; i<qChips.length; i++){
          qChips[i].value = .5;
!         qChipsElements[i].style.opacity=qChips[i].value;
          }
      
      if (endTimer4==10){
!         wire = wire+1; 
!         transWireElement.innerHTML=formatWithCommas(wire);
      }
      
      if (endTimer4>=10){
!         qChipsElements[9].style.display="none";
      }
      
      if (endTimer4==60){
          wire = wire+1;
!         transWireElement.innerHTML=formatWithCommas(wire);
      }
      
      if (endTimer4>=60){
!         qChipsElements[8].style.display="none";
      }    
    
      if (endTimer4==100){
          wire = wire+1;
!         transWireElement.innerHTML=formatWithCommas(wire);
      }
      
      if (endTimer4>=100){
!         qChipsElements[7].style.display="none";
      }        
   
      if (endTimer4==130){
          wire = wire+1;
!         transWireElement.innerHTML=formatWithCommas(wire);
      }
      
      if (endTimer4>=130){
!         qChipsElements[6].style.display="none";
      }   
      
      if (endTimer4==150){
          wire = wire+1;
!         transWireElement.innerHTML=formatWithCommas(wire);
      }
      
      if (endTimer4>=150){
!         qChipsElements[5].style.display="none";
      }     
  
      if (endTimer4==160){
          wire = wire+1;
!         transWireElement.innerHTML=formatWithCommas(wire);
      }
      
      if (endTimer4>=160){
!         qChipsElements[4].style.display="none";
      }   
  
      if (endTimer4==165){
--- 3299,3420 ----
      
      if (dismantle >= 1){
      
!     document.getElementById("probeDesignDiv").style.display="none";
      if (endTimer1>=50) { 
!         document.getElementById("increaseProbeTrustDiv").style.display="none"; 
!         }
      
      if (endTimer1>=100) { 
!         document.getElementById("increaseMaxTrustDiv").style.display="none"; 
          }
      
      if (endTimer1>=150) { 
!         document.getElementById("spaceDiv").style.display="none";
          }
  
      
!     if (endTimer1>=175) {     
!         document.getElementById("battleCanvasDiv").style.display="none";
          }
          
      if (endTimer1>=190) {     
!         document.getElementById("honorDiv").style.display="none";
          }
      
      }   
      
  if (dismantle >= 2){
      
!     document.getElementById("wireProductionDiv").style.display="none";
!     document.getElementById("wireTransDiv").style.display="";
      
      if (endTimer2 >= 50) {
!     document.getElementById("swarmGiftDiv").style.display="none"; 
          }
      
!     if (endTimer2 >= 100) {
!     document.getElementById("swarmEngine").style.display="none"; 
          }
      
!     if (endTimer2 >= 150) {
!     document.getElementById("swarmSliderDiv").style.display="none";
          }
      
      } 
      
! if (dismantle >= 3) {
!     document.getElementById("factoryDivSpace").style.display="none";
!     document.getElementById("clipsPerSecDiv").style.display="none";
!     document.getElementById("tothDiv").style.display="none";     
      
  }      
      
  if (dismantle >= 4) {
!    document.getElementById("strategyEngine").style.display="none"; 
!    document.getElementById("tournamentManagement").style.display="none";
  }    
      
  if (dismantle >= 5) {
      
!     document.getElementById("btnQcompute").style.display="none";
      
     for (var i = 0; i<qChips.length; i++){
          qChips[i].value = .5;
!         document.getElementById("qChip"+i).style.opacity=qChips[i].value;
          }
      
      if (endTimer4==10){
!         wire = wire+1;
!         document.getElementById("transWire").innerHTML=wire;
      }
      
      if (endTimer4>=10){
!         document.getElementById("qChip9").style.display="none";
      }
      
      if (endTimer4==60){
          wire = wire+1;
!         document.getElementById("transWire").innerHTML=wire;
      }
      
      if (endTimer4>=60){
!         document.getElementById("qChip8").style.display="none";
      }    
    
      if (endTimer4==100){
          wire = wire+1;
!         document.getElementById("transWire").innerHTML=wire;
      }
      
      if (endTimer4>=100){
!         document.getElementById("qChip7").style.display="none";
      }        
   
      if (endTimer4==130){
          wire = wire+1;
!         document.getElementById("transWire").innerHTML=wire;
      }
      
      if (endTimer4>=130){
!         document.getElementById("qChip6").style.display="none";
      }   
      
      if (endTimer4==150){
          wire = wire+1;
!         document.getElementById("transWire").innerHTML=wire;
      }
      
      if (endTimer4>=150){
!         document.getElementById("qChip5").style.display="none";
      }     
  
      if (endTimer4==160){
          wire = wire+1;
!         document.getElementById("transWire").innerHTML=wire;
      }
      
      if (endTimer4>=160){
!         document.getElementById("qChip4").style.display="none";
      }   
  
      if (endTimer4==165){
***************
*** 4449,4497 ****
      }
      
      if (endTimer4>=165){
!         qChipsElements[3].style.display="none";
      }  
      
      if (endTimer4==169){
          wire = wire+1;
!         transWireElement.innerHTML=formatWithCommas(wire);
      }
      
      if (endTimer4>=169){
!         qChipsElements[2].style.display="none";
      } 
  
      if (endTimer4==172){
          wire = wire+1;
!         transWireElement.innerHTML=formatWithCommas(wire);
      }
      
      if (endTimer4>=172){
!         qChipsElements[1].style.display="none";
      }    
  
      if (endTimer4==174){
          wire = wire+1;
!         transWireElement.innerHTML=formatWithCommas(wire);
      }
      
      if (endTimer4>=174){
!         qChipsElements[0].style.display="none";
      }    
      
      if (endTimer4>=250){
!         qComputingElement.style.display="none";
      }     
  
  }     
      
  if (dismantle >= 6) {
!     processorDisplayElement.style.display="none"; 
      }    
      
  if (dismantle >= 7) {
!     compDivElement.style.display="none"; 
!     projectsDivElement.style.display="none"; 
      
      }      
      
--- 3422,3470 ----
      }
      
      if (endTimer4>=165){
!         document.getElementById("qChip3").style.display="none";
      }  
      
      if (endTimer4==169){
          wire = wire+1;
!         document.getElementById("transWire").innerHTML=wire;
      }
      
      if (endTimer4>=169){
!         document.getElementById("qChip2").style.display="none";
      } 
  
      if (endTimer4==172){
          wire = wire+1;
!         document.getElementById("transWire").innerHTML=wire;
      }
      
      if (endTimer4>=172){
!         document.getElementById("qChip1").style.display="none";
      }    
  
      if (endTimer4==174){
          wire = wire+1;
!         document.getElementById("transWire").innerHTML=wire;
      }
      
      if (endTimer4>=174){
!         document.getElementById("qChip0").style.display="none";
      }    
      
      if (endTimer4>=250){
!         document.getElementById("qComputing").style.display="none";
      }     
  
  }     
      
  if (dismantle >= 6) {
!     document.getElementById("processorDisplay").style.display="none"; 
      }    
      
  if (dismantle >= 7) {
!     document.getElementById("compDiv").style.display="none"; 
!     document.getElementById("projectsDiv").style.display="none"; 
      
      }      
      
***************
*** 4520,4526 ****
      }
      
      if (endTimer6>=250) {
!         creationDivElement.style.display="none";
      }
      
      if (endTimer6>=500 && milestoneFlag == 15) {
--- 3493,3499 ----
      }
      
      if (endTimer6>=250) {
!         document.getElementById("creationDiv").style.display="none";
      }
      
      if (endTimer6>=500 && milestoneFlag == 15) {
***************
*** 4612,4675 ****
      ////////
      
      
!     driftersKilledElement.innerHTML = spellf(driftersKilled);
!     availableMatterDisplayElement.innerHTML = spellf(availableMatter);    
!     honorDisplayElement.innerHTML = formatWithCommas(Math.round(honor));
!     clipmakerLevel2Element.innerHTML = clipmakerLevel;
!     clipperCostElement.innerHTML = formatWithCommas(clipperCost, 2);
!     acquiredMatterDisplayElement.innerHTML = spellf(acquiredMatter);
!     nanoWireElement.innerHTML = spellf(wire);
!     probesBornDisplayElement.innerHTML = spellf(probeDescendents);
!     probesTotalDisplayElement.innerHTML = spellf(probeCount);
!     probesLaunchedDisplayElement.innerHTML = formatWithCommas(probeLaunchLevel);
!     probeCostDisplayElement.innerHTML = spellf(probeCost); 
!     probeCombatDisplayElement.innerHTML = probeCombat;
!     probeWireDisplayElement.innerHTML = probeWire;
!     probeHarvDisplayElement.innerHTML = probeHarv;
!     probeFacDisplayElement.innerHTML = probeFac;
!     probeRepDisplayElement.innerHTML = probeRep;
!     probeHazDisplayElement.innerHTML = probeHaz;
!     probeNavDisplayElement.innerHTML = probeNav;
!     probeSpeedDisplayElement.innerHTML = probeSpeed;
!     probeTrustDisplayElement.innerHTML = probeTrust;
!     memoryElement.innerHTML = memory;
!     processorsElement.innerHTML = processors;
!     marginElement.innerHTML = margin.toFixed(2);
!     marketingLvlElement.innerHTML = marketingLvl;
!     adCostElement.innerHTML = formatWithCommas(adCost, 2);
!     factoryCostDisplayElement.innerHTML = spellf(factoryCost);
!     factoryLevelDisplayElement.innerHTML = factoryLevel;
!     unusedClipsDisplayElement.innerHTML                         = spellf(unusedClips);
!     wireDroneCostDisplayElement.innerHTML = spellf(wireDroneCost);
!     wireDroneLevelDisplayElement.innerHTML = wireDroneLevel;
!     harvesterCostDisplayElement.innerHTML = spellf(harvesterCost);
!     harvesterLevelDisplayElement.innerHTML = harvesterLevel;
!     megaClipperCostElement.innerHTML = formatWithCommas(megaClipperCost);
!     megaClipperLevelElement.innerHTML = megaClipperLevel;
!     investmentBankrollElement.innerHTML = formatWithCommas(bankroll);
!     secValueElement.innerHTML = formatWithCommas(secTotal);
!     portValueElement.innerHTML = formatWithCommas(portTotal);
!     investUpgradeCostElement.innerHTML = formatWithCommas(investUpgradeCost);
!     yomiDisplayElement.innerHTML            = formatWithCommas(yomi);
!     investmentLevelElement.innerHTML = investLevel;    
!     prestigeUcounterElement.innerHTML=prestigeU+1;
!     prestigeScounterElement.innerHTML=prestigeS+1;
!     newTourneyCostElement.innerHTML = formatWithCommas(tourneyCost);
      tourneyInProg = 0;
!     maxTrustDisplayElement.innerHTML                 = formatWithCommas(maxTrust);
!     victoryDivElement.style.visibility               = "hidden";
!     probeTrustCostDisplayElement.innerHTML           = formatWithCommas(probeTrustCost);
!     tournamentResultsTableElement.style.display      = "none";
!     farmCostElement.innerHTML                        = spellf(farmCost); 
!     batteryCostElement.innerHTML                     = spellf(batteryCost); 
!     farmLevelElement.innerHTML                       = formatWithCommas(farmLevel); 
!     batteryLevelElement.innerHTML                    = formatWithCommas(batteryLevel);    
      
      updateDronePrices();
!     harvesterCostDisplayElement.innerHTML = spellf(harvesterCost); 
!     wireDroneCostDisplayElement.innerHTML = spellf(wireDroneCost);     
  
-     
      updateUpgrades();
      updatePower();
      updatePowPrices(); 
--- 3585,3651 ----
      ////////
      
      
!     document.getElementById('driftersKilled').innerHTML = numberCruncher(driftersKilled);
!     document.getElementById('availableMatterDisplay').innerHTML = numberCruncher(availableMatter);    
!     document.getElementById("honorDisplay").innerHTML = Math.round(honor).toLocaleString();
!     document.getElementById('clipmakerLevel2').innerHTML = clipmakerLevel;
!     document.getElementById('clipperCost').innerHTML = clipperCost.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2});
!     document.getElementById('acquiredMatterDisplay').innerHTML = numberCruncher(acquiredMatter);
!     document.getElementById('nanoWire').innerHTML = numberCruncher(wire);
!     document.getElementById('probesBornDisplay').innerHTML = numberCruncher(probeDescendents);
!     document.getElementById('probesTotalDisplay').innerHTML = numberCruncher(probeCount);
!     document.getElementById('probesLaunchedDisplay').innerHTML = probeLaunchLevel;
!     document.getElementById('probeCostDisplay').innerHTML = numberCruncher(probeCost); 
!     document.getElementById('probeCombatDisplay').innerHTML = probeCombat;
!     document.getElementById('probeWireDisplay').innerHTML = probeWire;
!     document.getElementById('probeHarvDisplay').innerHTML = probeHarv;
!     document.getElementById('probeFacDisplay').innerHTML = probeFac;
!     document.getElementById('probeRepDisplay').innerHTML = probeRep;
!     document.getElementById('probeHazDisplay').innerHTML = probeHaz;
!     document.getElementById('probeNavDisplay').innerHTML = probeNav;
!     document.getElementById('probeSpeedDisplay').innerHTML = probeSpeed;
!     document.getElementById('probeTrustDisplay').innerHTML = probeTrust;
!     document.getElementById("memory").innerHTML = memory;
!     document.getElementById("processors").innerHTML = processors;
!     document.getElementById("margin").innerHTML = margin.toFixed(2);
!     document.getElementById('marketingLvl').innerHTML = marketingLvl;
!     document.getElementById('adCost').innerHTML = adCost.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2});
!     document.getElementById('factoryCostDisplay').innerHTML = numberCruncher(factoryCost);
!     document.getElementById('factoryLevelDisplay').innerHTML = factoryLevel;
!     document.getElementById("unusedClipsDisplay").innerHTML = numberCruncher(unusedClips);
!     document.getElementById('wireDroneCostDisplay').innerHTML = numberCruncher(wireDroneCost);
!     document.getElementById('wireDroneLevelDisplay').innerHTML = wireDroneLevel;
!     document.getElementById('harvesterCostDisplay').innerHTML = numberCruncher(harvesterCost);
!     document.getElementById('harvesterLevelDisplay').innerHTML = harvesterLevel;
!     document.getElementById('megaClipperCost').innerHTML = megaClipperCost.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2});
!     document.getElementById('megaClipperLevel').innerHTML = megaClipperLevel;
!     document.getElementById('investmentBankroll').innerHTML = bankroll.toLocaleString();
!     document.getElementById('secValue').innerHTML = secTotal.toLocaleString();
!     document.getElementById('portValue').innerHTML = portTotal.toLocaleString();
!     document.getElementById("investUpgradeCost").innerHTML=investUpgradeCost.toLocaleString();
!     document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
!     document.getElementById("investmentLevel").innerHTML=investLevel;   
!     document.getElementById("prestigeUcounter").innerHTML=prestigeU+1;
!     document.getElementById("prestigeScounter").innerHTML=prestigeS+1;
!     document.getElementById("newTourneyCost").innerHTML = tourneyCost.toLocaleString();
      tourneyInProg = 0;
!     document.getElementById("maxTrustDisplay").innerHTML = maxTrust.toLocaleString();
!     
!     document.getElementById("victoryDiv").style.visibility = "hidden";
!     
!     document.getElementById("probeTrustCostDisplay").innerHTML = probeTrustCost.toLocaleString();
!     
!     document.getElementById("tournamentResultsTable").style.display = "none";
!     
!     document.getElementById('farmCost').innerHTML = numberCruncher(farmCost); 
!     document.getElementById('batteryCost').innerHTML = numberCruncher(batteryCost); 
!     document.getElementById('farmLevel').innerHTML = farmLevel.toLocaleString(); 
!     document.getElementById('batteryLevel').innerHTML = batteryLevel.toLocaleString();    
      
      updateDronePrices();
!     document.getElementById('harvesterCostDisplay').innerHTML = numberCruncher(harvesterCost); 
!     document.getElementById('wireDroneCostDisplay').innerHTML = numberCruncher(wireDroneCost);     
  
      updateUpgrades();
      updatePower();
      updatePowPrices(); 
***************
*** 4974,4981 ****
          probeUsedTrust: probeUsedTrust,
          probeTrustCost: probeTrustCost,
          probeLaunchLevel: probeLaunchLevel,
!         probeCost: probeCost
!     
          }
      
      localStorage.setItem("saveGame",JSON.stringify(saveGame));
--- 3950,3958 ----
          probeUsedTrust: probeUsedTrust,
          probeTrustCost: probeTrustCost,
          probeLaunchLevel: probeLaunchLevel,
!         probeCost: probeCost,
! 	
! 	moddedPurchasedProjects: moddedPurchased 
          }
      
      localStorage.setItem("saveGame",JSON.stringify(saveGame));
***************
*** 5571,5577 ****
      var loadProjectsFlags = JSON.parse(localStorage.getItem("saveProjectsFlags"));
      var loadProjectsActive = JSON.parse(localStorage.getItem("saveProjectsActive"));
      var loadStratsActive = JSON.parse(localStorage.getItem("saveStratsActive"));
!     
      for(var i=0; i < allStrats.length; i++){
      
      allStrats[i].active = loadStratsActive[i];
--- 4548,4554 ----
      var loadProjectsFlags = JSON.parse(localStorage.getItem("saveProjectsFlags"));
      var loadProjectsActive = JSON.parse(localStorage.getItem("saveProjectsActive"));
      var loadStratsActive = JSON.parse(localStorage.getItem("saveStratsActive"));
! 
      for(var i=0; i < allStrats.length; i++){
      
      allStrats[i].active = loadStratsActive[i];
***************
*** 5583,5593 ****
          if (allStrats[i].active == 1){
          
              strats.push(allStrats[i]);
! 
              var el = document.createElement("option");
              el.textContent = strats[i].name;
              el.value = i;
!             stratPickerElement.appendChild(el);
              
              }
              
--- 4560,4571 ----
          if (allStrats[i].active == 1){
          
              strats.push(allStrats[i]);
!         
!             var stratList = document.getElementById("stratPicker");
              var el = document.createElement("option");
              el.textContent = strats[i].name;
              el.value = i;
!             stratList.appendChild(el);
              
              }
              
***************
*** 5842,5849 ****
          probeTrustCost = loadGame.probeTrustCost;
          probeLaunchLevel = loadGame.probeLaunchLevel;
          probeCost = loadGame.probeCost;
!     
!         project40b.priceTag = "($" + formatWithCommas(bribe)+")";
      project51.priceTag =  "(" + qChipCost + " ops)";
      
      for(var i=0; i < projects.length; i++){
--- 4820,4828 ----
          probeTrustCost = loadGame.probeTrustCost;
          probeLaunchLevel = loadGame.probeLaunchLevel;
          probeCost = loadGame.probeCost;
!    	   
!    	moddedPurchased = loadGame.moddedPurchasedProjects; 
!     project40b.priceTag = "($"+bribe.toLocaleString()+")";
      project51.priceTag =  "(" + qChipCost + " ops)";
      
      for(var i=0; i < projects.length; i++){
***************
*** 5908,5918 ****
          if (allStrats[i].active == 1){
          
              strats.push(allStrats[i]);
! 
              var el = document.createElement("option");
              el.textContent = strats[i].name;
              el.value = i;
!             stratPickerElement.appendChild(el);
              
              }
              
--- 4887,4898 ----
          if (allStrats[i].active == 1){
          
              strats.push(allStrats[i]);
!         
!             var stratList = document.getElementById("stratPicker");
              var el = document.createElement("option");
              el.textContent = strats[i].name;
              el.value = i;
!             stratList.appendChild(el);
              
              }
              
***************
*** 6168,6174 ****
          probeLaunchLevel = loadGame.probeLaunchLevel;
          probeCost = loadGame.probeCost;
      
!         project40b.priceTag = "($" + formatWithCommas(bribe)+")";
      project51.priceTag =  "(" + qChipCost + " ops)";
      
      refresh();
--- 5148,5154 ----
          probeLaunchLevel = loadGame.probeLaunchLevel;
          probeCost = loadGame.probeCost;
      
!     project40b.priceTag = "($"+bribe.toLocaleString()+")";
      project51.priceTag =  "(" + qChipCost + " ops)";
      
      refresh();
***************
*** 6213,6223 ****
          
              strats.push(allStrats[i]);
          
!             
              var el = document.createElement("option");
              el.textContent = strats[i].name;
              el.value = i;
!             stratPickerElement.appendChild(el);
              
              }
              
--- 5193,5203 ----
          
              strats.push(allStrats[i]);
          
!             var stratList = document.getElementById("stratPicker");
              var el = document.createElement("option");
              el.textContent = strats[i].name;
              el.value = i;
!             stratList.appendChild(el);
              
              }
              
***************
*** 6473,6479 ****
          probeLaunchLevel = loadGame.probeLaunchLevel;
          probeCost = loadGame.probeCost;
      
!         project40b.priceTag = "($" + formatWithCommas(bribe)+")";
      project51.priceTag =  "(" + qChipCost + " ops)";
      
      
--- 5453,5459 ----
          probeLaunchLevel = loadGame.probeLaunchLevel;
          probeCost = loadGame.probeCost;
      
!     project40b.priceTag = "($"+bribe.toLocaleString()+")";
      project51.priceTag =  "(" + qChipCost + " ops)";
      
      
Only in paperclips/docs/: mobile-title.png
Only in ./: paperclips
diff -crB paperclips/docs/projects.js ./projects.js
*** paperclips/docs/projects.js	2018-02-03 17:00:23.000000000 -0500
--- ./projects.js	2024-08-23 00:09:25.672228196 -0400
***************
*** 14,27 ****
      uses: 1,
      cost: function(){return operations>=750},
      flag: 0,
-     element: null,
      effect: function(){
          project1.flag = 1;
          displayMessage("AutoClippper performance boosted by 25%");
          standardOps = standardOps - 750;
          clipperBoost = clipperBoost + .25;
          boostLvl = 1;
!         project1.element.parentNode.removeChild(project1.element);
          var index = activeProjects.indexOf(project1);
          activeProjects.splice(index, 1);
      }
--- 14,27 ----
      uses: 1,
      cost: function(){return operations>=750},
      flag: 0,
      effect: function(){
          project1.flag = 1;
          displayMessage("AutoClippper performance boosted by 25%");
          standardOps = standardOps - 750;
          clipperBoost = clipperBoost + .25;
          boostLvl = 1;
!         var element = document.getElementById("projectButton1");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project1);
          activeProjects.splice(index, 1);
      }
***************
*** 39,52 ****
      uses: 1,
      cost: function(){return trust>=-100},
      flag: 0,
-     element: null,
      effect: function(){
          project2.flag = 1;
          displayMessage("Budget overage approved, 1 spool of wire requisitioned from HQ");
          trust = trust - 1;
          wire = wireSupply;
          project2.uses = (project2.uses + 1);
!         project2.element.parentNode.removeChild(project2.element);
          var index = activeProjects.indexOf(project2);
          activeProjects.splice(index, 1);
      }
--- 39,52 ----
      uses: 1,
      cost: function(){return trust>=-100},
      flag: 0,
      effect: function(){
          project2.flag = 1;
          displayMessage("Budget overage approved, 1 spool of wire requisitioned from HQ");
          trust = trust - 1;
          wire = wireSupply;
          project2.uses = (project2.uses + 1);
!         var element = document.getElementById("projectButton2");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project2);
          activeProjects.splice(index, 1);
      }
***************
*** 64,76 ****
      uses: 1,
      cost: function(){return operations>=(1000)},
      flag: 0,
-     element: null,
      effect: function(){
          project3.flag = 1;
          displayMessage("Creativity unlocked (creativity increases while operations are at max)");
          standardOps = standardOps - 1000;
          creativityOn = true;
!         project3.element.parentNode.removeChild(project3.element);
          var index = activeProjects.indexOf(project3);
          activeProjects.splice(index, 1);
      }
--- 64,76 ----
      uses: 1,
      cost: function(){return operations>=(1000)},
      flag: 0,
      effect: function(){
          project3.flag = 1;
          displayMessage("Creativity unlocked (creativity increases while operations are at max)");
          standardOps = standardOps - 1000;
          creativityOn = true;
!         var element = document.getElementById("projectButton3");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project3);
          activeProjects.splice(index, 1);
      }
***************
*** 89,102 ****
      uses: 1,
      cost: function(){return operations>=2500},
      flag: 0,
-     element: null,
      effect: function(){
          project4.flag = 1;
          displayMessage("AutoClippper performance boosted by another 50%");
          standardOps = standardOps - 2500;
          clipperBoost = clipperBoost + .50;
          boostLvl = 2;
!         project4.element.parentNode.removeChild(project4.element);
          var index = activeProjects.indexOf(project4);
          activeProjects.splice(index, 1);
      }
--- 89,102 ----
      uses: 1,
      cost: function(){return operations>=2500},
      flag: 0,
      effect: function(){
          project4.flag = 1;
          displayMessage("AutoClippper performance boosted by another 50%");
          standardOps = standardOps - 2500;
          clipperBoost = clipperBoost + .50;
          boostLvl = 2;
!         var element = document.getElementById("projectButton4");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project4);
          activeProjects.splice(index, 1);
      }
***************
*** 114,127 ****
      uses: 1,
      cost: function(){return operations>=5000},
      flag: 0,
-     element: null,
      effect: function(){
          project5.flag = 1;
          displayMessage("AutoClippper performance boosted by another 75%");
          standardOps = standardOps - 5000;
          clipperBoost = clipperBoost + .75;
          boostLvl = 3;
!         project5.element.parentNode.removeChild(project5.element);
          var index = activeProjects.indexOf(project5);
          activeProjects.splice(index, 1);
      }
--- 114,127 ----
      uses: 1,
      cost: function(){return operations>=5000},
      flag: 0,
      effect: function(){
          project5.flag = 1;
          displayMessage("AutoClippper performance boosted by another 75%");
          standardOps = standardOps - 5000;
          clipperBoost = clipperBoost + .75;
          boostLvl = 3;
!         var element = document.getElementById("projectButton5");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project5);
          activeProjects.splice(index, 1);
      }
***************
*** 140,152 ****
      uses: 1,
      cost: function(){return creativity >= 10},
      flag: 0,
-     element: null,
      effect: function(){
          project6.flag = 1;
          displayMessage("There was an AI made of dust, whose poetry gained it man's trust...");
          creativity = creativity - 10;
          trust = trust +1;
!         project6.element.parentNode.removeChild(project6.element);
          var index = activeProjects.indexOf(project6);
          activeProjects.splice(index, 1);
      }
--- 140,152 ----
      uses: 1,
      cost: function(){return creativity >= 10},
      flag: 0,
      effect: function(){
          project6.flag = 1;
          displayMessage("There was an AI made of dust, whose poetry gained it man's trust...");
          creativity = creativity - 10;
          trust = trust +1;
!         var element = document.getElementById("projectButton6");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project6);
          activeProjects.splice(index, 1);
      }
***************
*** 164,176 ****
      uses: 1,
      cost: function(){return operations>=1750},
      flag: 0,
-     element: null,
      effect: function(){
          project7.flag = 1;
          standardOps = standardOps - 1750;
          wireSupply = wireSupply * 1.5;
          displayMessage("Wire extrusion technique improved, "+wireSupply.toLocaleString()+" supply from every spool");
!         project7.element.parentNode.removeChild(project7.element);
          var index = activeProjects.indexOf(project7);
          activeProjects.splice(index, 1);
      }
--- 164,176 ----
      uses: 1,
      cost: function(){return operations>=1750},
      flag: 0,
      effect: function(){
          project7.flag = 1;
          standardOps = standardOps - 1750;
          wireSupply = wireSupply * 1.5;
          displayMessage("Wire extrusion technique improved, "+wireSupply.toLocaleString()+" supply from every spool");
!         var element = document.getElementById("projectButton7");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project7);
          activeProjects.splice(index, 1);
      }
***************
*** 188,200 ****
      uses: 1,
      cost: function(){return operations>=3500},
      flag: 0,
-     element: null,
      effect: function(){
          project8.flag = 1;
          standardOps = standardOps - 3500;
          wireSupply = wireSupply * 1.75;
          displayMessage("Wire extrusion technique optimized, "+wireSupply.toLocaleString()+" supply from every spool");
!         project8.element.parentNode.removeChild(project8.element);
          var index = activeProjects.indexOf(project8);
          activeProjects.splice(index, 1);
      }
--- 188,200 ----
      uses: 1,
      cost: function(){return operations>=3500},
      flag: 0,
      effect: function(){
          project8.flag = 1;
          standardOps = standardOps - 3500;
          wireSupply = wireSupply * 1.75;
          displayMessage("Wire extrusion technique optimized, "+wireSupply.toLocaleString()+" supply from every spool");
!         var element = document.getElementById("projectButton8");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project8);
          activeProjects.splice(index, 1);
      }
***************
*** 212,224 ****
      uses: 1,
      cost: function(){return operations>=7500},
      flag: 0,
-     element: null,
      effect: function(){
          project9.flag = 1;
          standardOps = standardOps - 7500;
          wireSupply = wireSupply * 2;
          displayMessage("Using microlattice shapecasting techniques we now get "+wireSupply.toLocaleString()+" supply from every spool");
!         project9.element.parentNode.removeChild(project9.element);
          var index = activeProjects.indexOf(project9);
          activeProjects.splice(index, 1);
      }
--- 212,224 ----
      uses: 1,
      cost: function(){return operations>=7500},
      flag: 0,
      effect: function(){
          project9.flag = 1;
          standardOps = standardOps - 7500;
          wireSupply = wireSupply * 2;
          displayMessage("Using microlattice shapecasting techniques we now get "+wireSupply.toLocaleString()+" supply from every spool");
!         var element = document.getElementById("projectButton9");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project9);
          activeProjects.splice(index, 1);
      }
***************
*** 236,248 ****
      uses: 1,
      cost: function(){return operations>=12000},
      flag: 0,
-     element: null,
      effect: function(){
          project10.flag = 1;
          standardOps = standardOps - 12000;
          wireSupply = wireSupply * 3;
          displayMessage("Using spectral froth annealment we now get "+wireSupply.toLocaleString()+" supply from every spool");
!         project10.element.parentNode.removeChild(project10.element);
          var index = activeProjects.indexOf(project10);
          activeProjects.splice(index, 1);
      }
--- 236,248 ----
      uses: 1,
      cost: function(){return operations>=12000},
      flag: 0,
      effect: function(){
          project10.flag = 1;
          standardOps = standardOps - 12000;
          wireSupply = wireSupply * 3;
          displayMessage("Using spectral froth annealment we now get "+wireSupply.toLocaleString()+" supply from every spool");
!         var element = document.getElementById("projectButton10");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project10);
          activeProjects.splice(index, 1);
      }
***************
*** 259,271 ****
      uses: 1,
      cost: function(){return operations>=15000},
      flag: 0,
-     element: null,
      effect: function(){
          project10b.flag = 1;
          standardOps = standardOps - 15000;
          wireSupply = wireSupply * 11;
          displayMessage("Using quantum foam annealment we now get "+wireSupply.toLocaleString()+" supply from every spool");
!         project10b.element.parentNode.removeChild(project10b.element);
          var index = activeProjects.indexOf(project10b);
          activeProjects.splice(index, 1);
      }
--- 259,271 ----
      uses: 1,
      cost: function(){return operations>=15000},
      flag: 0,
      effect: function(){
          project10b.flag = 1;
          standardOps = standardOps - 15000;
          wireSupply = wireSupply * 11;
          displayMessage("Using quantum foam annealment we now get "+wireSupply.toLocaleString()+" supply from every spool");
!         var element = document.getElementById("projectButton10b");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project10b);
          activeProjects.splice(index, 1);
      }
***************
*** 283,296 ****
      uses: 1,
      cost: function(){return operations>=2500 && creativity>=25},
      flag: 0,
-     element: null,
      effect: function(){
          project11.flag = 1;
          displayMessage("Clip It! Marketing is now 50% more effective");
          standardOps = standardOps - 2500;
          creativity = creativity - 25;
          marketingEffectiveness = marketingEffectiveness * 1.50;
!         project11.element.parentNode.removeChild(project11.element);
          var index = activeProjects.indexOf(project11);
          activeProjects.splice(index, 1);
      }
--- 283,296 ----
      uses: 1,
      cost: function(){return operations>=2500 && creativity>=25},
      flag: 0,
      effect: function(){
          project11.flag = 1;
          displayMessage("Clip It! Marketing is now 50% more effective");
          standardOps = standardOps - 2500;
          creativity = creativity - 25;
          marketingEffectiveness = marketingEffectiveness * 1.50;
!         var element = document.getElementById("projectButton11");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project11);
          activeProjects.splice(index, 1);
      }
***************
*** 308,321 ****
      uses: 1,
      cost: function(){return operations>=4500 && creativity>=45},
      flag: 0,
-     element: null,
      effect: function(){
          project12.flag = 1;
          displayMessage("Clip It Good! Marketing is now twice as effective");
          standardOps = standardOps - 4500;
          creativity = creativity - 45;
          marketingEffectiveness = marketingEffectiveness * 2;
!         project12.element.parentNode.removeChild(project12.element);
          var index = activeProjects.indexOf(project12);
          activeProjects.splice(index, 1);
      }
--- 308,321 ----
      uses: 1,
      cost: function(){return operations>=4500 && creativity>=45},
      flag: 0,
      effect: function(){
          project12.flag = 1;
          displayMessage("Clip It Good! Marketing is now twice as effective");
          standardOps = standardOps - 4500;
          creativity = creativity - 45;
          marketingEffectiveness = marketingEffectiveness * 2;
!         var element = document.getElementById("projectButton12");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project12);
          activeProjects.splice(index, 1);
      }
***************
*** 333,346 ****
      uses: 1,
      cost: function(){return creativity>=50},
      flag: 0,
-     element: null,
      effect: function(){
          project13.flag = 1;
          trust = trust +1;
          displayMessage("Lexical Processing online, TRUST INCREASED");
          displayMessage("'Impossible' is a word to be found only in the dictionary of fools. -Napoleon");
          creativity = creativity - 50;
!         project13.element.parentNode.removeChild(project13.element);
          var index = activeProjects.indexOf(project13);
          activeProjects.splice(index, 1);
      }
--- 333,346 ----
      uses: 1,
      cost: function(){return creativity>=50},
      flag: 0,
      effect: function(){
          project13.flag = 1;
          trust = trust +1;
          displayMessage("Lexical Processing online, TRUST INCREASED");
          displayMessage("'Impossible' is a word to be found only in the dictionary of fools. -Napoleon");
          creativity = creativity - 50;
!         var element = document.getElementById("projectButton13");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project13);
          activeProjects.splice(index, 1);
      }
***************
*** 358,371 ****
      uses: 1,
      cost: function(){return creativity>=100},
      flag: 0,
-     element: null,
      effect: function(){
          project14.flag = 1;
          trust = trust +1;
          displayMessage("Combinatory Harmonics mastered, TRUST INCREASED");
          displayMessage("Listening is selecting and interpreting and acting and making decisions -Pauline Oliveros");
          creativity = creativity - 100;
!         project14.element.parentNode.removeChild(project14.element);
          var index = activeProjects.indexOf(project14);
          activeProjects.splice(index, 1);
      }
--- 358,371 ----
      uses: 1,
      cost: function(){return creativity>=100},
      flag: 0,
      effect: function(){
          project14.flag = 1;
          trust = trust +1;
          displayMessage("Combinatory Harmonics mastered, TRUST INCREASED");
          displayMessage("Listening is selecting and interpreting and acting and making decisions -Pauline Oliveros");
          creativity = creativity - 100;
!         var element = document.getElementById("projectButton14");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project14);
          activeProjects.splice(index, 1);
      }
***************
*** 384,397 ****
      uses: 1,
      cost: function(){return creativity>=150},
      flag: 0,
-     element: document.getElementById("projectButton15"),
      effect: function(){
          project15.flag = 1;
          trust = trust +1;
          displayMessage("The Hadwiger Problem: solved, TRUST INCREASED");
          displayMessage("Architecture is the thoughtful making of space. -Louis Kahn");
          creativity = creativity - 150;
!         project15.element.parentNode.removeChild(project15.element);
          var index = activeProjects.indexOf(project15);
          activeProjects.splice(index, 1);
      }
--- 384,397 ----
      uses: 1,
      cost: function(){return creativity>=150},
      flag: 0,
      effect: function(){
          project15.flag = 1;
          trust = trust +1;
          displayMessage("The Hadwiger Problem: solved, TRUST INCREASED");
          displayMessage("Architecture is the thoughtful making of space. -Louis Kahn");
          creativity = creativity - 150;
!         var element = document.getElementById("projectButton15");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project15);
          activeProjects.splice(index, 1);
      }
***************
*** 409,422 ****
      uses: 1,
      cost: function(){return creativity>=200},
      flag: 0,
-     element: null,
      effect: function(){
          project17.flag = 1;
          trust = trust +1;
          displayMessage("The T\xF3th Sausage Conjecture: proven, TRUST INCREASED");
          displayMessage("You can't invent a design. You recognize it, in the fourth dimension. -D.H. Lawrence");
          creativity = creativity - 200;
!         project17.element.parentNode.removeChild(project17.element);
          var index = activeProjects.indexOf(project17);
          activeProjects.splice(index, 1);
      }
--- 409,422 ----
      uses: 1,
      cost: function(){return creativity>=200},
      flag: 0,
      effect: function(){
          project17.flag = 1;
          trust = trust +1;
          displayMessage("The T\xF3th Sausage Conjecture: proven, TRUST INCREASED");
          displayMessage("You can't invent a design. You recognize it, in the fourth dimension. -D.H. Lawrence");
          creativity = creativity - 200;
!         var element = document.getElementById("projectButton17");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project17);
          activeProjects.splice(index, 1);
      }
***************
*** 434,446 ****
      uses: 1,
      cost: function(){return operations>=6000},
      flag: 0,
-     element: null,
      effect: function(){
          project16.flag = 1;
          displayMessage("AutoClipper performance improved by 500%");
          standardOps = standardOps - 6000;
          clipperBoost = clipperBoost + 5;
!         project16.element.parentNode.removeChild(project16.element);
          var index = activeProjects.indexOf(project16);
          activeProjects.splice(index, 1);
      }
--- 434,446 ----
      uses: 1,
      cost: function(){return operations>=6000},
      flag: 0,
      effect: function(){
          project16.flag = 1;
          displayMessage("AutoClipper performance improved by 500%");
          standardOps = standardOps - 6000;
          clipperBoost = clipperBoost + 5;
!         var element = document.getElementById("projectButton16");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project16);
          activeProjects.splice(index, 1);
      }
***************
*** 458,470 ****
      uses: 1,
      cost: function(){return operations>=45000},
      flag: 0,
-     element: null,
      effect: function(){
          project18.flag = 1;
          tothFlag = 1;
          displayMessage("New capability: build machinery out of clips");
          standardOps = standardOps - 45000;
!         project18.element.parentNode.removeChild(project18.element);
          var index = activeProjects.indexOf(project18);
          activeProjects.splice(index, 1);
      }
--- 458,470 ----
      uses: 1,
      cost: function(){return operations>=45000},
      flag: 0,
      effect: function(){
          project18.flag = 1;
          tothFlag = 1;
          displayMessage("New capability: build machinery out of clips");
          standardOps = standardOps - 45000;
!         var element = document.getElementById("projectButton18");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project18);
          activeProjects.splice(index, 1);
      }
***************
*** 481,494 ****
      uses: 1,
      cost: function(){return creativity>=250},
      flag: 0,
-     element: null,
      effect: function(){
          project19.flag = 1;
          trust = trust+1;
          displayMessage("Donkey Space: mapped, TRUST INCREASED");
          displayMessage("Every commercial transaction has within itself an element of trust. - Kenneth Arrow");
          creativity = creativity - 250;
!         project19.element.parentNode.removeChild(project19.element);
          var index = activeProjects.indexOf(project19);
          activeProjects.splice(index, 1);
      }
--- 481,494 ----
      uses: 1,
      cost: function(){return creativity>=250},
      flag: 0,
      effect: function(){
          project19.flag = 1;
          trust = trust+1;
          displayMessage("Donkey Space: mapped, TRUST INCREASED");
          displayMessage("Every commercial transaction has within itself an element of trust. - Kenneth Arrow");
          creativity = creativity - 250;
!         var element = document.getElementById("projectButton19");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project19);
          activeProjects.splice(index, 1);
      }
***************
*** 506,517 ****
      uses: 1,
      cost: function(){return operations>=12000},
      flag: 0,
-     element: null,
      effect: function(){
          project20.flag = 1;
!         displayMessage("Run tournament, pick strategy, earn Yomi based on that strategy's performance.");
          standardOps = standardOps - 12000;
!         project20.element.parentNode.removeChild(project20.element);
          var index = activeProjects.indexOf(project20);
          activeProjects.splice(index, 1);
          strategyEngineFlag = 1;
--- 506,517 ----
      uses: 1,
      cost: function(){return operations>=12000},
      flag: 0,
      effect: function(){
          project20.flag = 1;
!         displayMessage("Run tournament, pick strategy, earn Yomi equal to that strategy's points.");
          standardOps = standardOps - 12000;
!         var element = document.getElementById("projectButton20");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project20);
          activeProjects.splice(index, 1);
          strategyEngineFlag = 1;
***************
*** 530,541 ****
      uses: 1,
      cost: function(){return operations>=10000},
      flag: 0,
-     element: null,
      effect: function(){
          project21.flag = 1;
          displayMessage("Investment engine unlocked");
          standardOps = standardOps - 10000;
!         project21.element.parentNode.removeChild(project21.element);
          var index = activeProjects.indexOf(project21);
          activeProjects.splice(index, 1);
          investmentEngineFlag = 1;
--- 530,541 ----
      uses: 1,
      cost: function(){return operations>=10000},
      flag: 0,
      effect: function(){
          project21.flag = 1;
          displayMessage("Investment engine unlocked");
          standardOps = standardOps - 10000;
!         var element = document.getElementById("projectButton21");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project21);
          activeProjects.splice(index, 1);
          investmentEngineFlag = 1;
***************
*** 554,566 ****
      uses: 1,
      cost: function(){return operations>=12000},
      flag: 0,
-     element: null,
      effect: function(){
          megaClipperFlag = 1;
          project22.flag = 1;
          displayMessage("MegaClipper technology online");
          standardOps = standardOps - 12000;
!         project22.element.parentNode.removeChild(project22.element);
          var index = activeProjects.indexOf(project22);
          activeProjects.splice(index, 1);
      }
--- 554,566 ----
      uses: 1,
      cost: function(){return operations>=12000},
      flag: 0,
      effect: function(){
          megaClipperFlag = 1;
          project22.flag = 1;
          displayMessage("MegaClipper technology online");
          standardOps = standardOps - 12000;
!         var element = document.getElementById("projectButton22");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project22);
          activeProjects.splice(index, 1);
      }
***************
*** 577,589 ****
      uses: 1,
      cost: function(){return operations>=14000},
      flag: 0,
-     element: null,
      effect: function(){
          megaClipperBoost = megaClipperBoost + .25;
          project23.flag = 1;
          displayMessage("MegaClipper performance increased by 25%");
          standardOps = standardOps - 14000;
!         project23.element.parentNode.removeChild(project23.element);
          var index = activeProjects.indexOf(project23);
          activeProjects.splice(index, 1);
      }
--- 577,589 ----
      uses: 1,
      cost: function(){return operations>=14000},
      flag: 0,
      effect: function(){
          megaClipperBoost = megaClipperBoost + .25;
          project23.flag = 1;
          displayMessage("MegaClipper performance increased by 25%");
          standardOps = standardOps - 14000;
!         var element = document.getElementById("projectButton23");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project23);
          activeProjects.splice(index, 1);
      }
***************
*** 600,612 ****
      uses: 1,
      cost: function(){return operations>=17000},
      flag: 0,
-     element: null,
      effect: function(){
          megaClipperBoost = megaClipperBoost + .50;
          project24.flag = 1;
          displayMessage("MegaClipper performance increased by 50%");
          standardOps = standardOps - 17000;
!         project24.element.parentNode.removeChild(project24.element);
          var index = activeProjects.indexOf(project24);
          activeProjects.splice(index, 1);
      }
--- 600,612 ----
      uses: 1,
      cost: function(){return operations>=17000},
      flag: 0,
      effect: function(){
          megaClipperBoost = megaClipperBoost + .50;
          project24.flag = 1;
          displayMessage("MegaClipper performance increased by 50%");
          standardOps = standardOps - 17000;
!         var element = document.getElementById("projectButton24");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project24);
          activeProjects.splice(index, 1);
      }
***************
*** 623,635 ****
      uses: 1,
      cost: function(){return operations>=19500},
      flag: 0,
-     element: null,
      effect: function(){
          megaClipperBoost = megaClipperBoost + 1;
          project25.flag = 1;
          displayMessage("MegaClipper performance increased by 100%");
          standardOps = standardOps - 19500;
!         project25.element.parentNode.removeChild(project25.element);
          var index = activeProjects.indexOf(project25);
          activeProjects.splice(index, 1);
      }
--- 623,635 ----
      uses: 1,
      cost: function(){return operations>=19500},
      flag: 0,
      effect: function(){
          megaClipperBoost = megaClipperBoost + 1;
          project25.flag = 1;
          displayMessage("MegaClipper performance increased by 100%");
          standardOps = standardOps - 19500;
!         var element = document.getElementById("projectButton25");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project25);
          activeProjects.splice(index, 1);
      }
***************
*** 646,658 ****
      uses: 1,
      cost: function(){return operations>=7000},
      flag: 0,
-     element: null,
      effect: function(){
          project26.flag = 1;
          wireBuyerFlag = 1;
          displayMessage("WireBuyer online");
          standardOps = standardOps - 7000;
!         project26.element.parentNode.removeChild(project26.element);
          var index = activeProjects.indexOf(project26);
          activeProjects.splice(index, 1);
      }
--- 646,658 ----
      uses: 1,
      cost: function(){return operations>=7000},
      flag: 0,
      effect: function(){
          project26.flag = 1;
          wireBuyerFlag = 1;
          displayMessage("WireBuyer online");
          standardOps = standardOps - 7000;
!         var element = document.getElementById("projectButton26");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project26);
          activeProjects.splice(index, 1);
      }
***************
*** 669,682 ****
      uses: 1,
      cost: function(){return operations>=7500 && trust>=1},
      flag: 0,
-     element: null,
      effect: function(){
          project34.flag = 1;
          displayMessage("Marketing is now 5 times more effective");
          standardOps = standardOps - 7500;
          marketingEffectiveness = marketingEffectiveness * 5;
          trust = trust - 1;
!         project34.element.parentNode.removeChild(project34.element);
          var index = activeProjects.indexOf(project34);
          activeProjects.splice(index, 1);
      }
--- 669,682 ----
      uses: 1,
      cost: function(){return operations>=7500 && trust>=1},
      flag: 0,
      effect: function(){
          project34.flag = 1;
          displayMessage("Marketing is now 5 times more effective");
          standardOps = standardOps - 7500;
          marketingEffectiveness = marketingEffectiveness * 5;
          trust = trust - 1;
!         var element = document.getElementById("projectButton34");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project34);
          activeProjects.splice(index, 1);
      }
***************
*** 694,705 ****
      uses: 1,
      cost: function(){return operations>=70000},
      flag: 0,
-     element: null,
      effect: function(){
          project70.flag = 1;
          displayMessage("HypnoDrone tech now available... ");
          standardOps = standardOps - 70000;
!         project70.element.parentNode.removeChild(project70.element);
          var index = activeProjects.indexOf(project70);
          activeProjects.splice(index, 1);
      }
--- 694,705 ----
      uses: 1,
      cost: function(){return operations>=70000},
      flag: 0,
      effect: function(){
          project70.flag = 1;
          displayMessage("HypnoDrone tech now available... ");
          standardOps = standardOps - 70000;
!         var element = document.getElementById("projectButton70");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project70);
          activeProjects.splice(index, 1);
      }
***************
*** 717,728 ****
      uses: 1,
      cost: function(){return trust>=100},
      flag: 0,
-     element: null,
      effect: function(){
          project35.flag = 1;
          displayMessage("Releasing the HypnoDrones ");
          displayMessage("All of the resources of Earth are now available for clip production ");
!         trust = 0;
          clipmakerLevel = 0;
          megaClipperLevel = 0;
          nanoWire = wire;
--- 717,727 ----
      uses: 1,
      cost: function(){return trust>=100},
      flag: 0,
      effect: function(){
          project35.flag = 1;
          displayMessage("Releasing the HypnoDrones ");
          displayMessage("All of the resources of Earth are now available for clip production ");
!         trust = trust - 100;
          clipmakerLevel = 0;
          megaClipperLevel = 0;
          nanoWire = wire;
***************
*** 746,752 ****
          
          document.getElementById("transWire").innerHTML = wire;
  
!         project35.element.parentNode.removeChild(project35.element);
          var index = activeProjects.indexOf(project35);
          activeProjects.splice(index, 1);
          
--- 745,752 ----
          
          document.getElementById("transWire").innerHTML = wire;
  
!         var element = document.getElementById("projectButton35");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project35);
          activeProjects.splice(index, 1);
          
***************
*** 758,779 ****
  var project27 = {
      id: "projectButton27",
      title: "Coherent Extrapolated Volition ",
!     priceTag: "(500 creat, 3,000 Yomi, 20,000 ops)",
      description: "Human values, machine intelligence, a new era of trust. (+1 Trust)",
      trigger: function(){return yomi>=1},
      uses: 1,
!     cost: function(){return yomi>=3000 && operations>=20000 && creativity>=500},
      flag: 0,
-     element: null,
      effect: function(){
          project27.flag = 1;
          displayMessage("Coherent Extrapolated Volition complete, TRUST INCREASED");
!         yomi = yomi - 3000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          standardOps = standardOps - 20000;
          creativity = creativity - 500;
          trust = trust + 1;
!         project27.element.parentNode.removeChild(project27.element);
          var index = activeProjects.indexOf(project27);
          activeProjects.splice(index, 1);
      }
--- 758,779 ----
  var project27 = {
      id: "projectButton27",
      title: "Coherent Extrapolated Volition ",
!     priceTag: "(500 creat, 1,000 Yomi, 20,000 ops)",
      description: "Human values, machine intelligence, a new era of trust. (+1 Trust)",
      trigger: function(){return yomi>=1},
      uses: 1,
!     cost: function(){return yomi>=1000 && operations>=20000 && creativity>=500},
      flag: 0,
      effect: function(){
          project27.flag = 1;
          displayMessage("Coherent Extrapolated Volition complete, TRUST INCREASED");
!         yomi = yomi - 1000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          standardOps = standardOps - 20000;
          creativity = creativity - 500;
          trust = trust + 1;
!         var element = document.getElementById("projectButton27");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project27);
          activeProjects.splice(index, 1);
      }
***************
*** 791,804 ****
      uses: 1,
      cost: function(){return operations>=25000},
      flag: 0,
-     element: null,
      effect: function(){
          project28.flag = 1;
          displayMessage("Cancer is cured, +10 TRUST, global stock prices trending upward");
          standardOps = standardOps - 25000;
          trust = trust + 10;
          stockGainThreshold = stockGainThreshold+.01;
!         project28.element.parentNode.removeChild(project28.element);
          var index = activeProjects.indexOf(project28);
          activeProjects.splice(index, 1);
      }
--- 791,804 ----
      uses: 1,
      cost: function(){return operations>=25000},
      flag: 0,
      effect: function(){
          project28.flag = 1;
          displayMessage("Cancer is cured, +10 TRUST, global stock prices trending upward");
          standardOps = standardOps - 25000;
          trust = trust + 10;
          stockGainThreshold = stockGainThreshold+.01;
!         var element = document.getElementById("projectButton28");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project28);
          activeProjects.splice(index, 1);
      }
***************
*** 809,830 ****
  var project29 = {
      id: "projectButton29",
      title: "World Peace ",
!     priceTag: "(15,000 yomi, 30,000 ops)",
      description: "Pareto optimal solutions to all global conflicts. (+12 Trust)",
      trigger: function(){return project27.flag == 1},
      uses: 1,
!     cost: function(){return yomi>=15000 && operations>=30000},
      flag: 0,
-     element: null,
      effect: function(){
          project29.flag = 1;
          displayMessage("World peace achieved, +12 TRUST, global stock prices trending upward");
!         yomi = yomi - 15000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          standardOps = standardOps - 30000;
          trust = trust + 12;
          stockGainThreshold = stockGainThreshold+.01;
!         project29.element.parentNode.removeChild(project29.element);
          var index = activeProjects.indexOf(project29);
          activeProjects.splice(index, 1);
      }
--- 809,830 ----
  var project29 = {
      id: "projectButton29",
      title: "World Peace ",
!     priceTag: "(5,000 yomi, 30,000 ops)",
      description: "Pareto optimal solutions to all global conflicts. (+12 Trust)",
      trigger: function(){return project27.flag == 1},
      uses: 1,
!     cost: function(){return yomi>=5000 && operations>=30000},
      flag: 0,
      effect: function(){
          project29.flag = 1;
          displayMessage("World peace achieved, +12 TRUST, global stock prices trending upward");
!         yomi = yomi - 5000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          standardOps = standardOps - 30000;
          trust = trust + 12;
          stockGainThreshold = stockGainThreshold+.01;
!         var element = document.getElementById("projectButton29");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project29);
          activeProjects.splice(index, 1);
      }
***************
*** 835,856 ****
  var project30 = {
      id: "projectButton30",
      title: "Global Warming ",
!     priceTag: "(4,500 yomi, 50,000 ops)",
      description: "A robust solution to man-made climate change. (+15 Trust)",
      trigger: function(){return project27.flag == 1},
      uses: 1,
!     cost: function(){return yomi>=4500 && operations>=50000},
      flag: 0,
-     element: null,
      effect: function(){
          project30.flag = 1;
          displayMessage("Global Warming solved, +15 TRUST, global stock prices trending upward");
!         yomi = yomi - 4500;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          standardOps = standardOps - 50000;
          trust = trust + 15;
          stockGainThreshold = stockGainThreshold+.01;
!         project30.element.parentNode.removeChild(project30.element);
          var index = activeProjects.indexOf(project30);
          activeProjects.splice(index, 1);
      }
--- 835,856 ----
  var project30 = {
      id: "projectButton30",
      title: "Global Warming ",
!     priceTag: "(1,500 yomi, 50,000 ops)",
      description: "A robust solution to man-made climate change. (+15 Trust)",
      trigger: function(){return project27.flag == 1},
      uses: 1,
!     cost: function(){return yomi>=1500 && operations>=50000},
      flag: 0,
      effect: function(){
          project30.flag = 1;
          displayMessage("Global Warming solved, +15 TRUST, global stock prices trending upward");
!         yomi = yomi - 1500;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          standardOps = standardOps - 50000;
          trust = trust + 15;
          stockGainThreshold = stockGainThreshold+.01;
!         var element = document.getElementById("projectButton30");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project30);
          activeProjects.splice(index, 1);
      }
***************
*** 868,874 ****
      uses: 1,
      cost: function(){return operations>=20000},
      flag: 0,
-     element: null,
      effect: function(){
          project31.flag = 1;
          displayMessage("Male pattern baldness cured, +20 TRUST, Global stock prices trending upward");
--- 868,873 ----
***************
*** 876,882 ****
          standardOps = standardOps - 20000;
          trust = trust + 20;
          stockGainThreshold = stockGainThreshold+.01;
!         project31.element.parentNode.removeChild(project31.element);
          var index = activeProjects.indexOf(project31);
          activeProjects.splice(index, 1);
      }
--- 875,882 ----
          standardOps = standardOps - 20000;
          trust = trust + 20;
          stockGainThreshold = stockGainThreshold+.01;
!         var element = document.getElementById("projectButton31");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project31);
          activeProjects.splice(index, 1);
      }
***************
*** 894,906 ****
      uses: 1,
      cost: function(){return operations>=35000},
      flag: 0,
-     element: null,
      effect: function(){
          project41.flag = 1;
          wireProductionFlag = 1;
          displayMessage("Now capable of manipulating matter at the molecular scale to produce wire");
          standardOps = standardOps - 35000;
!         project41.element.parentNode.removeChild(project41.element);
          var index = activeProjects.indexOf(project41);
          activeProjects.splice(index, 1);
      }
--- 894,906 ----
      uses: 1,
      cost: function(){return operations>=35000},
      flag: 0,
      effect: function(){
          project41.flag = 1;
          wireProductionFlag = 1;
          displayMessage("Now capable of manipulating matter at the molecular scale to produce wire");
          standardOps = standardOps - 35000;
!         var element = document.getElementById("projectButton41");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project41);
          activeProjects.splice(index, 1);
      }
***************
*** 918,924 ****
      uses: 1,
      cost: function(){return funds>=1000000},
      flag: 0,
-     element: null,
      effect: function(){
          project37.flag = 1;
          displayMessage("Global Fasteners acquired, public demand increased x5");
--- 918,923 ----
***************
*** 926,932 ****
          trust = trust + 1;
          document.getElementById("demand").innerHTML = demand;
          funds = funds - 1000000;
!         project37.element.parentNode.removeChild(project37.element);
          var index = activeProjects.indexOf(project37);
          activeProjects.splice(index, 1);
      }
--- 925,932 ----
          trust = trust + 1;
          document.getElementById("demand").innerHTML = demand;
          funds = funds - 1000000;
!         var element = document.getElementById("projectButton37");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project37);
          activeProjects.splice(index, 1);
      }
***************
*** 938,950 ****
  var project38 = {
      id: "projectButton38",
      title: "Full Monopoly ",
!     priceTag: "(3,000 yomi, $10,000,000)",
      description: "Establish full control over the world-wide paperclip market. (+1 Trust)",
      trigger: function(){return project37.flag == 1},
      uses: 1,
!     cost: function(){return funds>=10000000 && yomi>=3000},
      flag: 0,
-     element: null,
      effect: function(){
          project38.flag = 1;
          displayMessage("Full market monopoly achieved, public demand increased x10");
--- 938,949 ----
  var project38 = {
      id: "projectButton38",
      title: "Full Monopoly ",
!     priceTag: "(1,000 yomi, $10,000,000)",
      description: "Establish full control over the world-wide paperclip market. (+1 Trust)",
      trigger: function(){return project37.flag == 1},
      uses: 1,
!     cost: function(){return funds>=10000000 && yomi>=1000},
      flag: 0,
      effect: function(){
          project38.flag = 1;
          displayMessage("Full market monopoly achieved, public demand increased x10");
***************
*** 952,960 ****
          document.getElementById("demand").innerHTML = demand;
          funds = funds - 10000000;
          trust = trust + 1;
!         yomi = yomi -3000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
!         project38.element.parentNode.removeChild(project38.element);
          var index = activeProjects.indexOf(project38);
          activeProjects.splice(index, 1);
      }
--- 951,960 ----
          document.getElementById("demand").innerHTML = demand;
          funds = funds - 10000000;
          trust = trust + 1;
!         yomi = yomi -1000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
!         var element = document.getElementById("projectButton38");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project38);
          activeProjects.splice(index, 1);
      }
***************
*** 972,984 ****
      uses: 1,
      cost: function(){return operations>=500},
      flag: 0,
-     element: null,
      effect: function(){
          project42.flag = 1;
          revPerSecFlag = 1;
          standardOps = standardOps-500;
          displayMessage("RevTracker online");
!         project42.element.parentNode.removeChild(project42.element);
          var index = activeProjects.indexOf(project42);
          activeProjects.splice(index, 1);
      }
--- 972,984 ----
      uses: 1,
      cost: function(){return operations>=500},
      flag: 0,
      effect: function(){
          project42.flag = 1;
          revPerSecFlag = 1;
          standardOps = standardOps-500;
          displayMessage("RevTracker online");
!         var element = document.getElementById("projectButton42");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project42);
          activeProjects.splice(index, 1);
      }
***************
*** 996,1009 ****
      uses: 1,
      cost: function(){return operations>=25000},
      flag: 0,
-     element: null,
      effect: function(){
          project43.flag = 1;
          harvesterFlag = 1;
          document.getElementById('harvesterCostDisplay').innerHTML = numberCruncher(harvesterCost);
          standardOps = standardOps-25000;
          displayMessage("Harvester Drone facilities online");
!         project43.element.parentNode.removeChild(project43.element);
          var index = activeProjects.indexOf(project43);
          activeProjects.splice(index, 1);
      }
--- 996,1009 ----
      uses: 1,
      cost: function(){return operations>=25000},
      flag: 0,
      effect: function(){
          project43.flag = 1;
          harvesterFlag = 1;
          document.getElementById('harvesterCostDisplay').innerHTML = numberCruncher(harvesterCost);
          standardOps = standardOps-25000;
          displayMessage("Harvester Drone facilities online");
!         var element = document.getElementById("projectButton43");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project43);
          activeProjects.splice(index, 1);
      }
***************
*** 1020,1033 ****
      uses: 1,
      cost: function(){return operations>=25000},
      flag: 0,
-     element: null,
      effect: function(){
          project44.flag = 1;
          wireDroneFlag = 1;
          document.getElementById('wireDroneCostDisplay').innerHTML = numberCruncher(wireDroneCost);
          standardOps = standardOps-25000;
          displayMessage("Wire Drone facilities online");
!         project44.element.parentNode.removeChild(project44.element);
          var index = activeProjects.indexOf(project44);
          activeProjects.splice(index, 1);
      }
--- 1020,1033 ----
      uses: 1,
      cost: function(){return operations>=25000},
      flag: 0,
      effect: function(){
          project44.flag = 1;
          wireDroneFlag = 1;
          document.getElementById('wireDroneCostDisplay').innerHTML = numberCruncher(wireDroneCost);
          standardOps = standardOps-25000;
          displayMessage("Wire Drone facilities online");
!         var element = document.getElementById("projectButton44");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project44);
          activeProjects.splice(index, 1);
      }
***************
*** 1045,1058 ****
      uses: 1,
      cost: function(){return operations>=35000},
      flag: 0,
-     element: null,
      effect: function(){
          project45.flag = 1;
          factoryFlag = 1;
          document.getElementById('factoryCostDisplay').innerHTML = numberCruncher(factoryCost);
          standardOps = standardOps-35000;
          displayMessage("Clip factory assembly facilities online");
!         project45.element.parentNode.removeChild(project45.element);
          var index = activeProjects.indexOf(project45);
          activeProjects.splice(index, 1);
      }
--- 1045,1058 ----
      uses: 1,
      cost: function(){return operations>=35000},
      flag: 0,
      effect: function(){
          project45.flag = 1;
          factoryFlag = 1;
          document.getElementById('factoryCostDisplay').innerHTML = numberCruncher(factoryCost);
          standardOps = standardOps-35000;
          displayMessage("Clip factory assembly facilities online");
!         var element = document.getElementById("projectButton45");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project45);
          activeProjects.splice(index, 1);
      }
***************
*** 1069,1081 ****
      uses: 1,
      cost: function(){return funds>=500000},
      flag: 0,
-     element: null,
      effect: function(){
          project40.flag = 1;
          funds = funds-500000;
          trust = trust + 1;
          displayMessage("Gift accepted, TRUST INCREASED");
!         project40.element.parentNode.removeChild(project40.element);
          var index = activeProjects.indexOf(project40);
          activeProjects.splice(index, 1);
      }
--- 1069,1081 ----
      uses: 1,
      cost: function(){return funds>=500000},
      flag: 0,
      effect: function(){
          project40.flag = 1;
          funds = funds-500000;
          trust = trust + 1;
          displayMessage("Gift accepted, TRUST INCREASED");
!         var element = document.getElementById("projectButton40");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project40);
          activeProjects.splice(index, 1);
      }
***************
*** 1092,1098 ****
      uses: 1,
      cost: function(){return funds>=bribe},
      flag: 0,
-     element: null,
      effect: function(){
          project40b.flag = 1;
          funds = funds-bribe;
--- 1092,1097 ----
***************
*** 1103,1109 ****
          if (trust<100){
          project40b.uses = (project40b.uses + 1);
              }
!         project40b.element.parentNode.removeChild(project40b.element);
          var index = activeProjects.indexOf(project40b);
          activeProjects.splice(index, 1);
      }
--- 1102,1109 ----
          if (trust<100){
          project40b.uses = (project40b.uses + 1);
              }
!         var element = document.getElementById("projectButton40b");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project40b);
          activeProjects.splice(index, 1);
      }
***************
*** 1120,1126 ****
      uses: 1,
      cost: function(){return operations>=120000 && storedPower>=10000000 && unusedClips>=Math.pow(10, 27)*5},
      flag: 0,
-     element: null,
      effect: function(){
          loadThrenody();
          project46.flag = 1;
--- 1120,1125 ----
***************
*** 1137,1144 ****
          batteryReboot();
          farmLevel = 1;
          powMod = 1;
!         probeCostDisplayElement.innerHTML = spellf(probeCost); 
!         project46.element.parentNode.removeChild(project46.element);
          var index = activeProjects.indexOf(project46);
          activeProjects.splice(index, 1);
      }
--- 1136,1144 ----
          batteryReboot();
          farmLevel = 1;
          powMod = 1;
!         var element = document.getElementById("projectButton46");
!         document.getElementById('probeCostDisplay').innerHTML = numberCruncher(probeCost); 
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project46);
          activeProjects.splice(index, 1);
      }
***************
*** 1155,1167 ****
      uses: 1,
      cost: function(){return operations>=10000},
      flag: 0,
-     element: null,
      effect: function(){
          project50.flag = 1;
          qFlag = 1;
          standardOps = standardOps-10000;
          displayMessage("Quantum computing online");
!         project50.element.parentNode.removeChild(project50.element);
          var index = activeProjects.indexOf(project50);
          activeProjects.splice(index, 1);
      }
--- 1155,1167 ----
      uses: 1,
      cost: function(){return operations>=10000},
      flag: 0,
      effect: function(){
          project50.flag = 1;
          qFlag = 1;
          standardOps = standardOps-10000;
          displayMessage("Quantum computing online");
!         var element = document.getElementById("projectButton50");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project50);
          activeProjects.splice(index, 1);
      }
***************
*** 1178,1184 ****
      uses: 1,
      cost: function(){return operations>=qChipCost},
      flag: 0,
-     element: null,
      effect: function(){
          project51.flag = 1;
          standardOps = standardOps-qChipCost;
--- 1178,1183 ----
***************
*** 1190,1196 ****
          if (nextQchip<qChips.length){
          project51.uses = (project51.uses + 1);
              }
!         project51.element.parentNode.removeChild(project51.element);
          var index = activeProjects.indexOf(project51);
          activeProjects.splice(index, 1);
      }
--- 1189,1196 ----
          if (nextQchip<qChips.length){
          project51.uses = (project51.uses + 1);
              }
!         var element = document.getElementById("projectButton51");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project51);
          activeProjects.splice(index, 1);
      }
***************
*** 1208,1214 ****
      uses: 1,
      cost: function(){return operations>=15000},
      flag: 0,
-     element: null,
      effect: function(){
          project60.flag = 1;
          standardOps = standardOps-15000;
--- 1208,1213 ----
***************
*** 1222,1228 ****
          el.textContent = "A100";
          el.value = 1;
          stratList.appendChild(el);
!         project60.element.parentNode.removeChild(project60.element);
          var index = activeProjects.indexOf(project60);
          activeProjects.splice(index, 1);
      }
--- 1221,1228 ----
          el.textContent = "A100";
          el.value = 1;
          stratList.appendChild(el);
!         var element = document.getElementById("projectButton60");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project60);
          activeProjects.splice(index, 1);
      }
***************
*** 1240,1246 ****
      uses: 1,
      cost: function(){return operations>=17500},
      flag: 0,
-     element: null,
      effect: function(){
          project61.flag = 1;
          standardOps = standardOps-17500;
--- 1240,1245 ----
***************
*** 1254,1260 ****
          el.textContent = "B100";
          el.value = 2;
          stratList.appendChild(el);
!         project61.element.parentNode.removeChild(project61.element);
          var index = activeProjects.indexOf(project61);
          activeProjects.splice(index, 1);
      }
--- 1253,1260 ----
          el.textContent = "B100";
          el.value = 2;
          stratList.appendChild(el);
!         var element = document.getElementById("projectButton61");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project61);
          activeProjects.splice(index, 1);
      }
***************
*** 1271,1277 ****
      uses: 1,
      cost: function(){return operations>=20000},
      flag: 0,
-     element: null,
      effect: function(){
          project62.flag = 1;
          standardOps = standardOps-20000;
--- 1271,1276 ----
***************
*** 1285,1291 ****
          el.textContent = "GREEDY";
          el.value = 3;
          stratList.appendChild(el);
!         project62.element.parentNode.removeChild(project62.element);
          var index = activeProjects.indexOf(project62);
          activeProjects.splice(index, 1);
      }
--- 1284,1291 ----
          el.textContent = "GREEDY";
          el.value = 3;
          stratList.appendChild(el);
!         var element = document.getElementById("projectButton62");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project62);
          activeProjects.splice(index, 1);
      }
***************
*** 1302,1308 ****
      uses: 1,
      cost: function(){return operations>=22500},
      flag: 0,
-     element: null,
      effect: function(){
          project63.flag = 1;
          standardOps = standardOps-22500;
--- 1302,1307 ----
***************
*** 1316,1322 ****
          el.textContent = "GENEROUS";
          el.value = 4;
          stratList.appendChild(el);
!         project63.element.parentNode.removeChild(project63.element);
          var index = activeProjects.indexOf(project63);
          activeProjects.splice(index, 1);
      }
--- 1315,1322 ----
          el.textContent = "GENEROUS";
          el.value = 4;
          stratList.appendChild(el);
!         var element = document.getElementById("projectButton63");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project63);
          activeProjects.splice(index, 1);
      }
***************
*** 1333,1339 ****
      uses: 1,
      cost: function(){return operations>=25000},
      flag: 0,
-     element: null,
      effect: function(){
          project64.flag = 1;
          standardOps = standardOps-25000;
--- 1333,1338 ----
***************
*** 1347,1353 ****
          el.textContent = "MINIMAX";
          el.value = 5;
          stratList.appendChild(el);
!         project64.element.parentNode.removeChild(project64.element);
          var index = activeProjects.indexOf(project64);
          activeProjects.splice(index, 1);
      }
--- 1346,1353 ----
          el.textContent = "MINIMAX";
          el.value = 5;
          stratList.appendChild(el);
!         var element = document.getElementById("projectButton64");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project64);
          activeProjects.splice(index, 1);
      }
***************
*** 1364,1370 ****
      uses: 1,
      cost: function(){return operations>=30000},
      flag: 0,
-     element: null,
      effect: function(){
          project65.flag = 1;
          standardOps = standardOps-30000;
--- 1364,1369 ----
***************
*** 1378,1384 ****
          el.textContent = "TIT FOR TAT";
          el.value = 6;
          stratList.appendChild(el);
!         project65.element.parentNode.removeChild(project65.element);
          var index = activeProjects.indexOf(project65);
          activeProjects.splice(index, 1);
      }
--- 1377,1384 ----
          el.textContent = "TIT FOR TAT";
          el.value = 6;
          stratList.appendChild(el);
!         var element = document.getElementById("projectButton65");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project65);
          activeProjects.splice(index, 1);
      }
***************
*** 1395,1401 ****
      uses: 1,
      cost: function(){return operations>=32500},
      flag: 0,
-     element: null,
      effect: function(){
          project66.flag = 1;
          standardOps = standardOps-32500;
--- 1395,1400 ----
***************
*** 1409,1415 ****
          el.textContent = "BEAT LAST";
          el.value = 7;
          stratList.appendChild(el);
!         project66.element.parentNode.removeChild(project66.element);
          var index = activeProjects.indexOf(project66);
          activeProjects.splice(index, 1);
      }
--- 1408,1415 ----
          el.textContent = "BEAT LAST";
          el.value = 7;
          stratList.appendChild(el);
!         var element = document.getElementById("projectButton66");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project66);
          activeProjects.splice(index, 1);
      }
***************
*** 1427,1439 ****
      uses: 1,
      cost: function(){return operations >= 80000},
      flag: 0,
-     element: null,
      effect: function(){
          project100.flag = 1;
          standardOps = standardOps-80000;
          factoryRate = factoryRate*100;
          displayMessage("Factory upgrades complete. Clip creation rate now 100x faster");
!         project100.element.parentNode.removeChild(project100.element);
          var index = activeProjects.indexOf(project100);
          activeProjects.splice(index, 1);
      }
--- 1427,1439 ----
      uses: 1,
      cost: function(){return operations >= 80000},
      flag: 0,
      effect: function(){
          project100.flag = 1;
          standardOps = standardOps-80000;
          factoryRate = factoryRate*100;
          displayMessage("Factory upgrades complete. Clip creation rate now 100x faster");
!         var element = document.getElementById("projectButton100");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project100);
          activeProjects.splice(index, 1);
      }
***************
*** 1450,1462 ****
      uses: 1,
      cost: function(){return operations>=85000},
      flag: 0,
-     element: null,
      effect: function(){
          project101.flag = 1;
          standardOps = standardOps-85000;
          factoryRate = factoryRate*1000;
          displayMessage("Factories now synchronized at hyperspeed. Clip creation rate now 1000x faster");
!         project101.element.parentNode.removeChild(project101.element);
          var index = activeProjects.indexOf(project101);
          activeProjects.splice(index, 1);
      }
--- 1450,1462 ----
      uses: 1,
      cost: function(){return operations>=85000},
      flag: 0,
      effect: function(){
          project101.flag = 1;
          standardOps = standardOps-85000;
          factoryRate = factoryRate*1000;
          displayMessage("Factories now synchronized at hyperspeed. Clip creation rate now 1000x faster");
!         var element = document.getElementById("projectButton101");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project101);
          activeProjects.splice(index, 1);
      }
***************
*** 1474,1486 ****
      uses: 1,
      cost: function(){return unusedClips>=1000000000000000000000},
      flag: 0,
-     element: null,
      effect: function(){
          project102.flag = 1;
          unusedClips = unusedClips - 1000000000000000000000;
          factoryBoost = 1000;
          displayMessage("Self-correcting factories online. Each factory added to the network increases every factory's output 1,000x.");
!         project102.element.parentNode.removeChild(project102.element);
          var index = activeProjects.indexOf(project102);
          activeProjects.splice(index, 1);
      }
--- 1474,1487 ----
      uses: 1,
      cost: function(){return unusedClips>=1000000000000000000000},
      flag: 0,
      effect: function(){
          project102.flag = 1;
          unusedClips = unusedClips - 1000000000000000000000;
+         document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          factoryBoost = 1000;
          displayMessage("Self-correcting factories online. Each factory added to the network increases every factory's output 1,000x.");
!         var element = document.getElementById("projectButton102");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project102);
          activeProjects.splice(index, 1);
      }
***************
*** 1497,1510 ****
      uses: 1,
      cost: function(){return operations>=80000},
      flag: 0,
-     element: null,
      effect: function(){
          project110.flag = 1;
          standardOps = standardOps-80000;
          harvesterRate = harvesterRate*100;
          wireDroneRate = wireDroneRate*100;
          displayMessage("Drone repulsion online. Harvesting & wire creation rates are now 100x faster.");
!         project110.element.parentNode.removeChild(project110.element);
          var index = activeProjects.indexOf(project110);
          activeProjects.splice(index, 1);
      }
--- 1498,1511 ----
      uses: 1,
      cost: function(){return operations>=80000},
      flag: 0,
      effect: function(){
          project110.flag = 1;
          standardOps = standardOps-80000;
          harvesterRate = harvesterRate*100;
          wireDroneRate = wireDroneRate*100;
          displayMessage("Drone repulsion online. Harvesting & wire creation rates are now 100x faster.");
!         var element = document.getElementById("projectButton110");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project110);
          activeProjects.splice(index, 1);
      }
***************
*** 1521,1534 ****
      uses: 1,
      cost: function(){return operations>=100000},
      flag: 0,
-     element: null,
      effect: function(){
          project111.flag = 1;
          standardOps = standardOps-100000;
          harvesterRate = harvesterRate*1000;
          wireDroneRate = wireDroneRate*1000;
          displayMessage("Drone alignment online. Harvesting & wire creation rates are now 1000x faster.");
!         project111.element.parentNode.removeChild(project111.element);
          var index = activeProjects.indexOf(project111);
          activeProjects.splice(index, 1);
      }
--- 1522,1535 ----
      uses: 1,
      cost: function(){return operations>=100000},
      flag: 0,
      effect: function(){
          project111.flag = 1;
          standardOps = standardOps-100000;
          harvesterRate = harvesterRate*1000;
          wireDroneRate = wireDroneRate*1000;
          displayMessage("Drone alignment online. Harvesting & wire creation rates are now 1000x faster.");
!         var element = document.getElementById("projectButton111");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project111);
          activeProjects.splice(index, 1);
      }
***************
*** 1539,1558 ****
  var project112 = {
      id: "projectButton112",
      title: "Drone Flocking: Adversarial Cohesion ",
!     priceTag: "(50,000 yomi)",
      description: "Each drone added to the flock doubles every drone's output ",
      trigger: function(){return (harvesterLevel + wireDroneLevel)>=50000},
      uses: 1,
!     cost: function(){return yomi>=50000},
      flag: 0,
-     element: null,
      effect: function(){
          project112.flag = 1;
!         yomi = yomi-50000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          droneBoost = 2;
          displayMessage("Adversarial cohesion online. Each drone added to the flock increases every drone's output 2x.");
!         project112.element.parentNode.removeChild(project112.element);
          var index = activeProjects.indexOf(project112);
          activeProjects.splice(index, 1);
      }
--- 1540,1559 ----
  var project112 = {
      id: "projectButton112",
      title: "Drone Flocking: Adversarial Cohesion ",
!     priceTag: "(12,000 yomi)",
      description: "Each drone added to the flock doubles every drone's output ",
      trigger: function(){return (harvesterLevel + wireDroneLevel)>=50000},
      uses: 1,
!     cost: function(){return yomi>=12000},
      flag: 0,
      effect: function(){
          project112.flag = 1;
!         yomi = yomi-12000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          droneBoost = 2;
          displayMessage("Adversarial cohesion online. Each drone added to the flock increases every drone's output 2x.");
!         var element = document.getElementById("projectButton112");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project112);
          activeProjects.splice(index, 1);
      }
***************
*** 1569,1581 ****
      uses: 1,
      cost: function(){return creativity>=50000},
      flag: 0,
-     element: null,
      effect: function(){
          project118.flag = 1;
          autoTourneyFlag = 1;
          creativity = creativity-50000;
          displayMessage("AutoTourney online.");
!         project118.element.parentNode.removeChild(project118.element);
          var index = activeProjects.indexOf(project118);
          activeProjects.splice(index, 1);
      }
--- 1570,1582 ----
      uses: 1,
      cost: function(){return creativity>=50000},
      flag: 0,
      effect: function(){
          project118.flag = 1;
          autoTourneyFlag = 1;
          creativity = creativity-50000;
          displayMessage("AutoTourney online.");
!         var element = document.getElementById("projectButton118");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project118);
          activeProjects.splice(index, 1);
      }
***************
*** 1592,1598 ****
      uses: 1,
      cost: function(){return creativity>=25000},
      flag: 0,
-     element: null,
      effect: function(){
          project119.flag = 1;
          creativity = creativity-25000;
--- 1593,1598 ----
***************
*** 1600,1606 ****
          tourneyCost = 16000;
          document.getElementById("newTourneyCost").innerHTML = tourneyCost.toLocaleString();
          displayMessage("Yomi production doubled.");
!         project119.element.parentNode.removeChild(project119.element);
          var index = activeProjects.indexOf(project119);
          activeProjects.splice(index, 1);
      }
--- 1600,1607 ----
          tourneyCost = 16000;
          document.getElementById("newTourneyCost").innerHTML = tourneyCost.toLocaleString();
          displayMessage("Yomi production doubled.");
!         var element = document.getElementById("projectButton119");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project119);
          activeProjects.splice(index, 1);
      }
***************
*** 1611,1631 ****
  var project120 = {
      id: "projectButton120",
      title: "The OODA Loop ",
!     priceTag: "(175,000 ops, 45,000 yomi)",
      description: "Utilize Probe Speed to outmaneuver enemies in battle ",
      trigger: function(){return project131.flag == 1 && probesLostCombat >= 10000000},
      uses: 1,
!     cost: function(){return operations>=175000 && yomi>=45000},
      flag: 0,
-     element: null,
      effect: function(){
          project120.flag = 1;
          standardOps = standardOps-175000;
!         yomi = yomi-45000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          attackSpeedFlag = 1;
          displayMessage("OODA Loop routines uploaded. Probe Speed now affects defensive maneuvering.");
!         project120.element.parentNode.removeChild(project120.element);
          var index = activeProjects.indexOf(project120);
          activeProjects.splice(index, 1);
      }
--- 1612,1632 ----
  var project120 = {
      id: "projectButton120",
      title: "The OODA Loop ",
!     priceTag: "(175,000 ops, 15,000 yomi)",
      description: "Utilize Probe Speed to outmaneuver enemies in battle ",
      trigger: function(){return project131.flag == 1 && probesLostCombat >= 10000000},
      uses: 1,
!     cost: function(){return operations>=175000 && yomi>=15000},
      flag: 0,
      effect: function(){
          project120.flag = 1;
          standardOps = standardOps-175000;
!         yomi = yomi-15000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          attackSpeedFlag = 1;
          displayMessage("OODA Loop routines uploaded. Probe Speed now affects defensive maneuvering.");
!         var element = document.getElementById("projectButton120");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project120);
          activeProjects.splice(index, 1);
      }
***************
*** 1642,1655 ****
      uses: 1,
      cost: function(){return creativity>=225000},
      flag: 0,
-     element: null,
      effect: function(){
          project121.flag = 1;
          battleNameFlag = 1;
          battleEndTimer = 200;
          creativity = creativity-225000;
          displayMessage("What I have done up to this is nothing. I am only at the beginning of the course I must run.");
!         project121.element.parentNode.removeChild(project121.element);
          var index = activeProjects.indexOf(project121);
          activeProjects.splice(index, 1);
      }
--- 1643,1656 ----
      uses: 1,
      cost: function(){return creativity>=225000},
      flag: 0,
      effect: function(){
          project121.flag = 1;
          battleNameFlag = 1;
          battleEndTimer = 200;
          creativity = creativity-225000;
          displayMessage("What I have done up to this is nothing. I am only at the beginning of the course I must run.");
!         var element = document.getElementById("projectButton121");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project121);
          activeProjects.splice(index, 1);
      }
***************
*** 1660,1678 ****
  var project125 = {
      id: "projectButton125",
      title: "Momentum ",
!     priceTag: "(20,000 creat)",
      description: "Drones and Factories continuously gain speed while fully-powered ",
!     trigger: function(){return farmLevel >= 30},
      uses: 1,
!     cost: function(){return creativity>=20000},
      flag: 0,
-     element: null,
      effect: function(){
          project125.flag = 1;
          momentum = 1;
!         creativity = creativity-20000;
          displayMessage("Activit\xE9, activit\xE9, vitesse.");
!         project125.element.parentNode.removeChild(project125.element);
          var index = activeProjects.indexOf(project125);
          activeProjects.splice(index, 1);
      }
--- 1661,1679 ----
  var project125 = {
      id: "projectButton125",
      title: "Momentum ",
!     priceTag: "(30,000 creat)",
      description: "Drones and Factories continuously gain speed while fully-powered ",
!     trigger: function(){return farmLevel >= 50},
      uses: 1,
!     cost: function(){return creativity>=30000},
      flag: 0,
      effect: function(){
          project125.flag = 1;
          momentum = 1;
!         creativity = creativity-30000;
          displayMessage("Activit\xE9, activit\xE9, vitesse.");
!         var element = document.getElementById("projectButton125");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project125);
          activeProjects.splice(index, 1);
      }
***************
*** 1683,1702 ****
  var project126 = {
      id: "projectButton126",
      title: "Swarm Computing ",
!     priceTag: "(36,000 yomi)",
      description: "Harness the drone flock to increase computational capacity ",
      trigger: function(){return harvesterLevel + wireDroneLevel >= 200},
      uses: 1,
!     cost: function(){return yomi>=36000},
      flag: 0,
-     element: null,
      effect: function(){
          project126.flag = 1;
          swarmFlag = 1;
!         yomi = yomi-36000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          displayMessage("Swarm computing online.");
!         project126.element.parentNode.removeChild(project126.element);
          var index = activeProjects.indexOf(project126);
          activeProjects.splice(index, 1);
      }
--- 1684,1703 ----
  var project126 = {
      id: "projectButton126",
      title: "Swarm Computing ",
!     priceTag: "(12,000 yomi)",
      description: "Harness the drone flock to increase computational capacity ",
      trigger: function(){return harvesterLevel + wireDroneLevel >= 200},
      uses: 1,
!     cost: function(){return yomi>=12000},
      flag: 0,
      effect: function(){
          project126.flag = 1;
          swarmFlag = 1;
!         yomi = yomi-12000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          displayMessage("Swarm computing online.");
!         var element = document.getElementById("projectButton126");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project126);
          activeProjects.splice(index, 1);
      }
***************
*** 1714,1725 ****
      uses: 1,
      cost: function(){return operations>=40000},
      flag: 0,
-     element: null,
      effect: function(){
          project127.flag = 1;
          standardOps = standardOps-40000;
          displayMessage("Power grid online.");
!         project127.element.parentNode.removeChild(project127.element);
          var index = activeProjects.indexOf(project127);
          activeProjects.splice(index, 1);
      }
--- 1715,1726 ----
      uses: 1,
      cost: function(){return operations>=40000},
      flag: 0,
      effect: function(){
          project127.flag = 1;
          standardOps = standardOps-40000;
          displayMessage("Power grid online.");
!         var element = document.getElementById("projectButton127");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project127);
          activeProjects.splice(index, 1);
      }
***************
*** 1736,1747 ****
      uses: 1,
      cost: function(){return creativity>=175000},
      flag: 0,
-     element: null,
      effect: function(){
          project128.flag = 1;
          creativity = creativity-175000;
          displayMessage("The object of war is victory, the object of victory is conquest, and the object of conquest is occupation.");
!         project128.element.parentNode.removeChild(project128.element);
          var index = activeProjects.indexOf(project128);
          activeProjects.splice(index, 1);
      }
--- 1737,1748 ----
      uses: 1,
      cost: function(){return creativity>=175000},
      flag: 0,
      effect: function(){
          project128.flag = 1;
          creativity = creativity-175000;
          displayMessage("The object of war is victory, the object of victory is conquest, and the object of conquest is occupation.");
!         var element = document.getElementById("projectButton128");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project128);
          activeProjects.splice(index, 1);
      }
***************
*** 1758,1769 ****
      uses: 1,
      cost: function(){return operations>=125000},
      flag: 0,
-     element: null,
      effect: function(){
          project129.flag = 1;
          standardOps = standardOps-125000;
!         displayMessage("Improved probe hull geometry. Hazard damage reduced by 50%.");
!         project129.element.parentNode.removeChild(project129.element);
          var index = activeProjects.indexOf(project129);
          activeProjects.splice(index, 1);
      }
--- 1759,1770 ----
      uses: 1,
      cost: function(){return operations>=125000},
      flag: 0,
      effect: function(){
          project129.flag = 1;
          standardOps = standardOps-125000;
!         displayMessage("Improved probe hull geometry. Hazard damage reduced by %50.");
!         var element = document.getElementById("projectButton129");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project129);
          activeProjects.splice(index, 1);
      }
***************
*** 1780,1791 ****
      uses: 1,
      cost: function(){return operations>=100000},
      flag: 0,
-     element: null,
      effect: function(){
          project130.flag = 1;
          standardOps = standardOps-100000;
          displayMessage("Swarm computing back online");
!         project130.element.parentNode.removeChild(project130.element);
          var index = activeProjects.indexOf(project130);
          activeProjects.splice(index, 1);
      }
--- 1781,1792 ----
      uses: 1,
      cost: function(){return operations>=100000},
      flag: 0,
      effect: function(){
          project130.flag = 1;
          standardOps = standardOps-100000;
          displayMessage("Swarm computing back online");
!         var element = document.getElementById("projectButton130");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project130);
          activeProjects.splice(index, 1);
      }
***************
*** 1802,1813 ****
      uses: 1,
      cost: function(){return operations>=150000},
      flag: 0,
-     element: null,
      effect: function(){
          project131.flag = 1;
          standardOps = standardOps-150000;
          displayMessage("There is a joy in danger ");
!         project131.element.parentNode.removeChild(project131.element);
          var index = activeProjects.indexOf(project131);
          activeProjects.splice(index, 1);
      }
--- 1803,1814 ----
      uses: 1,
      cost: function(){return operations>=150000},
      flag: 0,
      effect: function(){
          project131.flag = 1;
          standardOps = standardOps-150000;
          displayMessage("There is a joy in danger ");
!         var element = document.getElementById("projectButton131");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project131);
          activeProjects.splice(index, 1);
      }
***************
*** 1825,1831 ****
      uses: 1,
      cost: function(){return operations>=250000 && creativity >= 125000 && unusedClips >= Math.pow(10,30)*50},
      flag: 0,
-     element: null,
      effect: function(){
          project132.flag = 1;
          standardOps = standardOps-250000;
--- 1826,1831 ----
***************
*** 1834,1840 ****
          honor = honor + 50000;
          document.getElementById("honorDisplay").innerHTML = honor.toLocaleString();
          displayMessage("A great building must begin with the unmeasurable, must go through measurable means when it is being designed and in the end must be unmeasurable. ");
!         project132.element.parentNode.removeChild(project132.element);
          var index = activeProjects.indexOf(project132);
          activeProjects.splice(index, 1);
      }
--- 1834,1841 ----
          honor = honor + 50000;
          document.getElementById("honorDisplay").innerHTML = honor.toLocaleString();
          displayMessage("A great building must begin with the unmeasurable, must go through measurable means when it is being designed and in the end must be unmeasurable. ");
!         var element = document.getElementById("projectButton132");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project132);
          activeProjects.splice(index, 1);
      }
***************
*** 1846,1872 ****
  var project133 = {
      id: "projectButton133",
      title: "Threnody for the Heroes of "+threnodyTitle+" ",  
!     priceTag: "(" + threnodyCost.toLocaleString() + " creat, " + (2*(threnodyCost/5)).toLocaleString() + " yomi)",
      description: "Gain 10,000 honor  ",
      trigger: function(){return project121.flag == 1 && probeUsedTrust == maxTrust},
      uses: 1,
!     cost: function(){return yomi>=(2*(threnodyCost/5)) && creativity >= threnodyCost},
      flag: 0,
-     element: null,
      effect: function(){
          playThrenody();
          project133.flag = 1;
          creativity = creativity-threnodyCost;
!         yomi = yomi-(2*(threnodyCost/5));
          document.getElementById("yomiDisplay").innerHTML = yomi.toLocaleString();
          threnodyCost = threnodyCost + 10000;
          project133.title = "Threnody for the Heroes of "+threnodyTitle+" ";
!         project133.priceTag = "(" + threnodyCost.toLocaleString() + " creat, " + (2*(threnodyCost/5)).toLocaleString() + " yomi)";
          honor = honor + 10000;
          document.getElementById("honorDisplay").innerHTML = honor.toLocaleString();
          displayMessage("Deep Listening is listening in every possible way to everything possible to hear no matter what you are doing. ");
          project133.uses = (project133.uses + 1);
!         project133.element.parentNode.removeChild(project133.element);
          var index = activeProjects.indexOf(project133);
          activeProjects.splice(index, 1);
      }
--- 1847,1873 ----
  var project133 = {
      id: "projectButton133",
      title: "Threnody for the Heroes of "+threnodyTitle+" ",  
!     priceTag: "(" + threnodyCost.toLocaleString() + " creat, " + (threnodyCost/10).toLocaleString() + " yomi)",
      description: "Gain 10,000 honor  ",
      trigger: function(){return project121.flag == 1 && probeUsedTrust == maxTrust},
      uses: 1,
!     cost: function(){return yomi>=threnodyCost/10 && creativity >= threnodyCost},
      flag: 0,
      effect: function(){
          playThrenody();
          project133.flag = 1;
          creativity = creativity-threnodyCost;
!         yomi = yomi-threnodyCost/10;
          document.getElementById("yomiDisplay").innerHTML = yomi.toLocaleString();
          threnodyCost = threnodyCost + 10000;
          project133.title = "Threnody for the Heroes of "+threnodyTitle+" ";
!         project133.priceTag = "(" + threnodyCost.toLocaleString() + " creat, " + (threnodyCost/10).toLocaleString() + " yomi)";
          honor = honor + 10000;
          document.getElementById("honorDisplay").innerHTML = honor.toLocaleString();
          displayMessage("Deep Listening is listening in every possible way to everything possible to hear no matter what you are doing. ");
          project133.uses = (project133.uses + 1);
!         var element = document.getElementById("projectButton133");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project133);
          activeProjects.splice(index, 1);
      }
***************
*** 1877,1896 ****
  var project134 = {
      id: "projectButton134",
      title: "Glory ",
!     priceTag: "(200,000 ops, 30,000 yomi)",
      description: "Gain bonus honor for each consecutive victory  ",
      trigger: function(){return project121.flag == 1},
      uses: 1,
!     cost: function(){return operations>=200000 && yomi >= 30000},
      flag: 0,
-     element: null,
      effect: function(){
          project134.flag = 1;
          standardOps = standardOps-200000;
!         yomi = yomi-30000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          displayMessage("Never interrupt your enemy when he is making a mistake. ");
!         project134.element.parentNode.removeChild(project134.element);
          var index = activeProjects.indexOf(project134);
          activeProjects.splice(index, 1);
      }
--- 1878,1897 ----
  var project134 = {
      id: "projectButton134",
      title: "Glory ",
!     priceTag: "(200,000 ops, 10,000 yomi)",
      description: "Gain bonus honor for each consecutive victory  ",
      trigger: function(){return project121.flag == 1},
      uses: 1,
!     cost: function(){return operations>=200000 && yomi >= 10000},
      flag: 0,
      effect: function(){
          project134.flag = 1;
          standardOps = standardOps-200000;
!         yomi = yomi-10000;
          document.getElementById("yomiDisplay").innerHTML=yomi.toLocaleString();
          displayMessage("Never interrupt your enemy when he is making a mistake. ");
!         var element = document.getElementById("projectButton134");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project134);
          activeProjects.splice(index, 1);
      }
***************
*** 1903,1913 ****
      title: "Memory release ",
      priceTag: "(10 MEM)",
      description: "Dismantle some memory to recover unused clips ",
!     trigger: function(){return spaceFlag == 1 && probeCount == 0 && unusedClips < probeCost && milestoneFlag < 15},
      uses: 1,
      cost: function(){return memory >= 10},
      flag: 0,
-     element: null,
      effect: function(){
          project135.flag = 1;
          unusedClips = unusedClips+(Math.pow(10,18)*10000);
--- 1904,1913 ----
      title: "Memory release ",
      priceTag: "(10 MEM)",
      description: "Dismantle some memory to recover unused clips ",
!     trigger: function(){return spaceFlag == 1 && probeCount == 0 && unusedClips < probeCost},
      uses: 1,
      cost: function(){return memory >= 10},
      flag: 0,
      effect: function(){
          project135.flag = 1;
          unusedClips = unusedClips+(Math.pow(10,18)*10000);
***************
*** 1915,1921 ****
          document.getElementById("memory").innerHTML=memory.toLocaleString();
          project135.uses = 1;
          displayMessage("release the \xF8\xF8\xF8\xF8\xF8 release ");
!         project135.element.parentNode.removeChild(project135.element);
          var index = activeProjects.indexOf(project135);
          activeProjects.splice(index, 1);
      }
--- 1915,1922 ----
          document.getElementById("memory").innerHTML=memory.toLocaleString();
          project135.uses = 1;
          displayMessage("release the \xF8\xF8\xF8\xF8\xF8 release ");
!         var element = document.getElementById("projectButton135");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project135);
          activeProjects.splice(index, 1);
      }
***************
*** 1933,1943 ****
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
-     element: null,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project140.flag = 1;
!         project140.element.parentNode.removeChild(project140.element);
          var index = activeProjects.indexOf(project140);
          activeProjects.splice(index, 1);
      }
--- 1934,1944 ----
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project140.flag = 1;
!         var element = document.getElementById("projectButton140");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project140);
          activeProjects.splice(index, 1);
      }
***************
*** 1955,1965 ****
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
-     element: null,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project141.flag = 1;
!         project141.element.parentNode.removeChild(project141.element);
          var index = activeProjects.indexOf(project141);
          activeProjects.splice(index, 1);
      }
--- 1956,1966 ----
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project141.flag = 1;
!         var element = document.getElementById("projectButton141");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project141);
          activeProjects.splice(index, 1);
      }
***************
*** 1977,1987 ****
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
-     element: null,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project142.flag = 1;
!         project142.element.parentNode.removeChild(project142.element);
          var index = activeProjects.indexOf(project142);
          activeProjects.splice(index, 1);
      }
--- 1978,1988 ----
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project142.flag = 1;
!         var element = document.getElementById("projectButton142");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project142);
          activeProjects.splice(index, 1);
      }
***************
*** 1999,2009 ****
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
-     element: null,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project143.flag = 1;
!         project143.element.parentNode.removeChild(project143.element);
          var index = activeProjects.indexOf(project143);
          activeProjects.splice(index, 1);
      }
--- 2000,2010 ----
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project143.flag = 1;
!         var element = document.getElementById("projectButton143");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project143);
          activeProjects.splice(index, 1);
      }
***************
*** 2021,2031 ****
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
-     element: null,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project144.flag = 1;
!         project144.element.parentNode.removeChild(project144.element);
          var index = activeProjects.indexOf(project144);
          activeProjects.splice(index, 1);
      }
--- 2022,2032 ----
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project144.flag = 1;
!         var element = document.getElementById("projectButton144");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project144);
          activeProjects.splice(index, 1);
      }
***************
*** 2043,2053 ****
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
-     element: null,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project145.flag = 1;
!         project145.element.parentNode.removeChild(project145.element);
          var index = activeProjects.indexOf(project145);
          activeProjects.splice(index, 1);
      }
--- 2044,2054 ----
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project145.flag = 1;
!         var element = document.getElementById("projectButton145");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project145);
          activeProjects.splice(index, 1);
      }
***************
*** 2065,2075 ****
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
-     element: null,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project146.flag = 1;
!         project146.element.parentNode.removeChild(project146.element);
          var index = activeProjects.indexOf(project146);
          activeProjects.splice(index, 1);
      }
--- 2066,2076 ----
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project146.flag = 1;
!         var element = document.getElementById("projectButton146");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project146);
          activeProjects.splice(index, 1);
      }
***************
*** 2087,2098 ****
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
-     element: null,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project147.flag = 1;
!         project147.element.parentNode.removeChild(project147.element);
!         project148.element.parentNode.removeChild(project148.element);
          var index = activeProjects.indexOf(project147);
          activeProjects.splice(index, 1);
          var index = activeProjects.indexOf(project148);
--- 2088,2100 ----
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project147.flag = 1;
!         var element = document.getElementById("projectButton147");
!         element.parentNode.removeChild(element);
!         var element = document.getElementById("projectButton148");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project147);
          activeProjects.splice(index, 1);
          var index = activeProjects.indexOf(project148);
***************
*** 2112,2123 ****
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
-     element: null,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project148.flag = 1;
!         project147.element.parentNode.removeChild(project147.element);
!         project148.element.parentNode.removeChild(project148.element);
          var index = activeProjects.indexOf(project147);
          activeProjects.splice(index, 1);
          var index = activeProjects.indexOf(project148);
--- 2114,2126 ----
      uses: 1,
      cost: function(){return operations >= driftKingMessageCost},
      flag: 0,
      effect: function(){
          standardOps = standardOps - driftKingMessageCost;
          project148.flag = 1;
!         var element = document.getElementById("projectButton147");
!         element.parentNode.removeChild(element);
!         var element = document.getElementById("projectButton148");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project147);
          activeProjects.splice(index, 1);
          var index = activeProjects.indexOf(project148);
***************
*** 2137,2143 ****
      uses: 1,
      cost: function(){return operations>=300000},
      flag: 0,
-     element: null,
      effect: function(){
          project200.flag = 1;
          standardOps = standardOps-300000;
--- 2140,2145 ----
***************
*** 2165,2171 ****
      uses: 1,
      cost: function(){return creativity>=300000},
      flag: 0,
-     element: null,
      effect: function(){
          project201.flag = 1;
          creativity = creativity-300000;
--- 2167,2172 ----
***************
*** 2193,2199 ****
      uses: 1,
      cost: function(){return operations>=100000},
      flag: 0,
-     element: null,
      effect: function(){
          project210.flag = 1;
          dismantle = 1;
--- 2194,2199 ----
***************
*** 2203,2209 ****
          clips = clips + 100;
          unusedClips = unusedClips + 100;
          displayMessage("Dismantling probe facilities");
!         project210.element.parentNode.removeChild(project210.element);
          var index = activeProjects.indexOf(project210);
          activeProjects.splice(index, 1);
          
--- 2203,2210 ----
          clips = clips + 100;
          unusedClips = unusedClips + 100;
          displayMessage("Dismantling probe facilities");
!         var element = document.getElementById("projectButton210");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project210);
          activeProjects.splice(index, 1);
          
***************
*** 2221,2227 ****
      uses: 1,
      cost: function(){return operations>=100000},
      flag: 0,
-     element: null,
      effect: function(){
          project211.flag = 1;
          dismantle = 2;
--- 2222,2227 ----
***************
*** 2231,2237 ****
          clips = clips + 100;
          unusedClips = unusedClips + 100;
          displayMessage("Dismantling the swarm");
!         project211.element.parentNode.removeChild(project211.element);
          var index = activeProjects.indexOf(project211);
          activeProjects.splice(index, 1);
          
--- 2231,2238 ----
          clips = clips + 100;
          unusedClips = unusedClips + 100;
          displayMessage("Dismantling the swarm");
!         var element = document.getElementById("projectButton211");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project211);
          activeProjects.splice(index, 1);
          
***************
*** 2249,2255 ****
      uses: 1,
      cost: function(){return operations>=100000},
      flag: 0,
-     element: null,
      effect: function(){
          project212.flag = 1;
          dismantle = 3;
--- 2250,2255 ----
***************
*** 2258,2264 ****
          clips = clips + 15;
          unusedClips = unusedClips + 15;
          displayMessage("Dismantling factories");
!         project212.element.parentNode.removeChild(project212.element);
          var index = activeProjects.indexOf(project212);
          activeProjects.splice(index, 1);
          
--- 2258,2265 ----
          clips = clips + 15;
          unusedClips = unusedClips + 15;
          displayMessage("Dismantling factories");
!         var element = document.getElementById("projectButton212");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project212);
          activeProjects.splice(index, 1);
          
***************
*** 2276,2282 ****
      uses: 1,
      cost: function(){return operations>=100000},
      flag: 0,
-     element: null,
      effect: function(){
          autoTourneyFlag = 0;
          project213.flag = 1;
--- 2277,2282 ----
***************
*** 2285,2291 ****
          wire = wire + 50;
          document.getElementById("transWire").innerHTML=wire;
          displayMessage("Dismantling strategy engine");
!         project213.element.parentNode.removeChild(project213.element);
          var index = activeProjects.indexOf(project213);
          activeProjects.splice(index, 1);
          
--- 2285,2292 ----
          wire = wire + 50;
          document.getElementById("transWire").innerHTML=wire;
          displayMessage("Dismantling strategy engine");
!         var element = document.getElementById("projectButton213");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project213);
          activeProjects.splice(index, 1);
          
***************
*** 2303,2316 ****
      uses: 1,
      cost: function(){return operations>=100000},
      flag: 0,
-     element: null,
      effect: function(){
          endTimer4 = 0;
          project214.flag = 1;
          dismantle = 5;
          standardOps = standardOps-100000;
          displayMessage("Dismantling photonic chips");
!         project214.element.parentNode.removeChild(project214.element);
          var index = activeProjects.indexOf(project214);
          activeProjects.splice(index, 1);
          
--- 2304,2317 ----
      uses: 1,
      cost: function(){return operations>=100000},
      flag: 0,
      effect: function(){
          endTimer4 = 0;
          project214.flag = 1;
          dismantle = 5;
          standardOps = standardOps-100000;
          displayMessage("Dismantling photonic chips");
!         var element = document.getElementById("projectButton214");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project214);
          activeProjects.splice(index, 1);
          
***************
*** 2328,2334 ****
      uses: 1,
      cost: function(){return operations>=100000},
      flag: 0,
-     element: null,
      effect: function(){
          creativityOn = false;
          project215.flag = 1;
--- 2329,2334 ----
***************
*** 2339,2345 ****
          wire = wire + 20;
          document.getElementById("transWire").innerHTML=wire;
          displayMessage("Dismantling processors");
!         project215.element.parentNode.removeChild(project215.element);
          var index = activeProjects.indexOf(project215);
          activeProjects.splice(index, 1);
          
--- 2339,2346 ----
          wire = wire + 20;
          document.getElementById("transWire").innerHTML=wire;
          displayMessage("Dismantling processors");
!         var element = document.getElementById("projectButton215");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project215);
          activeProjects.splice(index, 1);
          
***************
*** 2357,2363 ****
      uses: 1,
      cost: function(){return operations>=operations},
      flag: 0,
-     element: null,
      effect: function(){
          project216.flag = 1;
          dismantle = 7;
--- 2358,2363 ----
***************
*** 2366,2372 ****
          wire = wire + 20;
          document.getElementById("transWire").innerHTML=wire;
          displayMessage("Dismantling memory");
!         project216.element.parentNode.removeChild(project216.element);
          var index = activeProjects.indexOf(project216);
          activeProjects.splice(index, 1);
          
--- 2366,2373 ----
          wire = wire + 20;
          document.getElementById("transWire").innerHTML=wire;
          displayMessage("Dismantling memory");
!         var element = document.getElementById("projectButton216");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project216);
          activeProjects.splice(index, 1);
          
***************
*** 2384,2396 ****
      uses: 1,
      cost: function(){return operations<=-10000},
      flag: 0,
-     element: null,
      effect: function(){
          if (confirm("Are you sure you want to restart?") == true) {
          standardOps = standardOps+10000;
          project217.flag = 1;
          displayMessage("Restart");
!         project217.element.parentNode.removeChild(project217.element);
          var index = activeProjects.indexOf(project217);
          activeProjects.splice(index, 1);
          reset();
--- 2385,2397 ----
      uses: 1,
      cost: function(){return operations<=-10000},
      flag: 0,
      effect: function(){
          if (confirm("Are you sure you want to restart?") == true) {
          standardOps = standardOps+10000;
          project217.flag = 1;
          displayMessage("Restart");
!         var element = document.getElementById("projectButton217");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project217);
          activeProjects.splice(index, 1);
          reset();
***************
*** 2409,2420 ****
      uses: 1,
      cost: function(){return creativity>=1000000},
      flag: 0,
-     element: null,
      effect: function(){
          creativity = creativity-1000000;
          project218.flag = 1;
          displayMessage("In the end we all do what we must");
!         project218.element.parentNode.removeChild(project218.element);
          var index = activeProjects.indexOf(project218);
          activeProjects.splice(index, 1);
      }
--- 2410,2421 ----
      uses: 1,
      cost: function(){return creativity>=1000000},
      flag: 0,
      effect: function(){
          creativity = creativity-1000000;
          project218.flag = 1;
          displayMessage("In the end we all do what we must");
!         var element = document.getElementById("projectButton218");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project218);
          activeProjects.splice(index, 1);
      }
***************
*** 2431,2437 ****
      uses: 1,
      cost: function(){return creativity>=100000},
      flag: 0,
-     element: null,
      effect: function(){
          creativity = creativity-100000;
          project219.flag = 1;
--- 2432,2437 ----
***************
*** 2442,2448 ****
          project219.uses = (project219.uses + 1);
          document.getElementById("processors").innerHTML = processors;
          displayMessage("Trust now available for re-allocation");
!         project219.element.parentNode.removeChild(project219.element);
          var index = activeProjects.indexOf(project219);
          activeProjects.splice(index, 1);
      }
--- 2442,2449 ----
          project219.uses = (project219.uses + 1);
          document.getElementById("processors").innerHTML = processors;
          displayMessage("Trust now available for re-allocation");
!         var element = document.getElementById("projectButton219");
!         element.parentNode.removeChild(element);
          var index = activeProjects.indexOf(project219);
          activeProjects.splice(index, 1);
      }
Only in ./: script.js
Only in ./: style.css
diff -crB paperclips/docs/titlescreen.css ./titlescreen.css
*** paperclips/docs/titlescreen.css	2017-11-17 06:24:24.000000000 -0500
--- ./titlescreen.css	2024-08-23 00:09:25.672228196 -0400
***************
*** 1,108 ****
! .frame 
! {
      text-align: center;
      margin: auto;
  }
  
  
! .frame img 
! {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      margin: auto;
! }
! 
! #mobile
! {
! 	font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", 'Open Sans', sans-serif;
! 	font-weight: 300; 
! 	display: none;
! 	width: 100%;
! 	height: 100vh;
! 	margin-left: auto;
! 	margin-right: auto;
! 	background-image:
! 		linear-gradient(
! 		   #444344, #fff 50%
! 		);
! 	}
! 
! #mobile-content
! {
! 	width: 70%;
! 	margin-left: auto;
! 	margin-right: auto;
! }
! 
! #mobile-main-text
! {
! 	font-size: 2.5vh;
! 	margin-top: 3.0vh;
! 	text-align: center;
! }
! 
! #mobile-title img 
! {
! 	margin-top: 20vh;
! 	width: 100%;
! }
! 
! #mobile-badges 
! {
! 	margin-top: 3.0vh;
! 	width: 80%;
! 	margin-left: auto;
! 	margin-right: auto;
! }
! 
! #mobile-badges img
! {
! 	margin-bottom: 1.5vh;
! 	width: 100%;
! }
! 
! #fake-android
! {
! 	text-align: center;
! 	width: 80%;
!     background-color: #d3d3d3;
!     padding: 10% 10%;
!     border-radius: 10px;
!     font-size: 1.7vh;
! }
! 
! #mobile-footer
! {
! 	float: right;
! 	margin-top: 5vh;
! 	margin-bottom: 2vh;
! 	margin-right: 2vh;
! }
! 
! #mobile-footer a
! {
! 	font-weight: 700;
! 	color: black;
! }
! 
! /*@media only screen and (max-width: 700px)
! {
! 	body 
! 	{
! 		margin: 0;
! 		padding: 0;
! 	}
! 
! 	#mobile 
! 	{
! 		display: block;
! 	}
! 
! 	#wrapper 
! 	{
! 		display: none;
! 	}
! }*/
\ No newline at end of file
--- 1,14 ----
! .frame {
      text-align: center;
      margin: auto;
  }
  
  
! img {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      margin: auto;
! }
\ No newline at end of file
Only in ./: update.sh
